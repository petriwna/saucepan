{"version":3,"file":"main-2a0ff234.js","mappings":";mBACA,IAAIA,EAAsB,CAAC,ECD3BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCmBxB,MAiEMC,EAAsB,SAAUC,GAElC,MAAMC,EAAM,GACZ,IAAIC,EAAI,EACR,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IAAK,CACjC,IAAIE,EAAIL,EAAIM,WAAWH,GACnBE,EAAI,IACJJ,EAAIC,KAAOG,EAENA,EAAI,MACTJ,EAAIC,KAAQG,GAAK,EAAK,IACtBJ,EAAIC,KAAY,GAAJG,EAAU,KAEA,QAAZ,MAAJA,IACNF,EAAI,EAAIH,EAAII,QACyB,QAAZ,MAAxBJ,EAAIM,WAAWH,EAAI,KAEpBE,EAAI,QAAgB,KAAJA,IAAe,KAA6B,KAAtBL,EAAIM,aAAaH,IACvDF,EAAIC,KAAQG,GAAK,GAAM,IACvBJ,EAAIC,KAASG,GAAK,GAAM,GAAM,IAC9BJ,EAAIC,KAASG,GAAK,EAAK,GAAM,IAC7BJ,EAAIC,KAAY,GAAJG,EAAU,MAGtBJ,EAAIC,KAAQG,GAAK,GAAM,IACvBJ,EAAIC,KAASG,GAAK,EAAK,GAAM,IAC7BJ,EAAIC,KAAY,GAAJG,EAAU,IAE9B,CACA,OAAOJ,CACX,EA0CMM,EAAS,CAIXC,eAAgB,KAIhBC,eAAgB,KAKhBC,sBAAuB,KAKvBC,sBAAuB,KAKvBC,kBAAmB,iEAInB,gBAAIC,GACA,OAAOlB,KAAKiB,kBAAoB,KACpC,EAIA,wBAAIE,GACA,OAAOnB,KAAKiB,kBAAoB,KACpC,EAQAG,mBAAoC,mBAATC,KAU3B,eAAAC,CAAgBC,EAAOC,GACnB,IAAKC,MAAMC,QAAQH,GACf,MAAMI,MAAM,iDAEhB3B,KAAK4B,QACL,MAAMC,EAAgBL,EAChBxB,KAAKe,sBACLf,KAAKa,eACLiB,EAAS,GACf,IAAK,IAAItB,EAAI,EAAGA,EAAIe,EAAMd,OAAQD,GAAK,EAAG,CACtC,MAAMuB,EAAQR,EAAMf,GACdwB,EAAYxB,EAAI,EAAIe,EAAMd,OAC1BwB,EAAQD,EAAYT,EAAMf,EAAI,GAAK,EACnC0B,EAAY1B,EAAI,EAAIe,EAAMd,OAC1B0B,EAAQD,EAAYX,EAAMf,EAAI,GAAK,EACnC4B,EAAWL,GAAS,EACpBM,GAAqB,EAARN,IAAiB,EAAME,GAAS,EACnD,IAAIK,GAAqB,GAARL,IAAiB,EAAME,GAAS,EAC7CI,EAAmB,GAARJ,EACVD,IACDK,EAAW,GACNP,IACDM,EAAW,KAGnBR,EAAOU,KAAKX,EAAcO,GAAWP,EAAcQ,GAAWR,EAAcS,GAAWT,EAAcU,GACzG,CACA,OAAOT,EAAOW,KAAK,GACvB,EASA,YAAAC,CAAanB,EAAOC,GAGhB,OAAIxB,KAAKoB,qBAAuBI,EACrBmB,KAAKpB,GAETvB,KAAKsB,gBAAgBlB,EAAoBmB,GAAQC,EAC5D,EASA,YAAAoB,CAAarB,EAAOC,GAGhB,OAAIxB,KAAKoB,qBAAuBI,EACrBH,KAAKE,GAjJE,SAAUsB,GAEhC,MAAMvC,EAAM,GACZ,IAAIwC,EAAM,EAAGpC,EAAI,EACjB,KAAOoC,EAAMD,EAAMpC,QAAQ,CACvB,MAAMsC,EAAKF,EAAMC,KACjB,GAAIC,EAAK,IACLzC,EAAII,KAAOsC,OAAOC,aAAaF,QAE9B,GAAIA,EAAK,KAAOA,EAAK,IAAK,CAC3B,MAAMG,EAAKL,EAAMC,KACjBxC,EAAII,KAAOsC,OAAOC,cAAoB,GAALF,IAAY,EAAW,GAALG,EACvD,MACK,GAAIH,EAAK,KAAOA,EAAK,IAAK,CAE3B,MAGMI,IAAY,EAALJ,IAAW,IAAa,GAH1BF,EAAMC,OAG2B,IAAa,GAF9CD,EAAMC,OAE+C,EAAW,GADhED,EAAMC,MAEb,MACJxC,EAAII,KAAOsC,OAAOC,aAAa,OAAUE,GAAK,KAC9C7C,EAAII,KAAOsC,OAAOC,aAAa,OAAc,KAAJE,GAC7C,KACK,CACD,MAAMD,EAAKL,EAAMC,KACXM,EAAKP,EAAMC,KACjBxC,EAAII,KAAOsC,OAAOC,cAAoB,GAALF,IAAY,IAAa,GAALG,IAAY,EAAW,GAALE,EAC3E,CACJ,CACA,OAAO9C,EAAImC,KAAK,GACpB,CAqHeY,CAAkBrD,KAAKsD,wBAAwB/B,EAAOC,GACjE,EAgBA,uBAAA8B,CAAwB/B,EAAOC,GAC3BxB,KAAK4B,QACL,MAAM2B,EAAgB/B,EAChBxB,KAAKgB,sBACLhB,KAAKc,eACLgB,EAAS,GACf,IAAK,IAAItB,EAAI,EAAGA,EAAIe,EAAMd,QAAS,CAC/B,MAAMsB,EAAQwB,EAAchC,EAAMiC,OAAOhD,MAEnCyB,EADYzB,EAAIe,EAAMd,OACF8C,EAAchC,EAAMiC,OAAOhD,IAAM,IACzDA,EACF,MACM2B,EADY3B,EAAIe,EAAMd,OACF8C,EAAchC,EAAMiC,OAAOhD,IAAM,KACzDA,EACF,MACMiD,EADYjD,EAAIe,EAAMd,OACF8C,EAAchC,EAAMiC,OAAOhD,IAAM,GAE3D,KADEA,EACW,MAATuB,GAA0B,MAATE,GAA0B,MAATE,GAA0B,MAATsB,EACnD,MAAM,IAAIC,EAEd,MAAMtB,EAAYL,GAAS,EAAME,GAAS,EAE1C,GADAH,EAAOU,KAAKJ,GACE,KAAVD,EAAc,CACd,MAAME,EAAaJ,GAAS,EAAK,IAASE,GAAS,EAEnD,GADAL,EAAOU,KAAKH,GACE,KAAVoB,EAAc,CACd,MAAMnB,EAAaH,GAAS,EAAK,IAAQsB,EACzC3B,EAAOU,KAAKF,EAChB,CACJ,CACJ,CACA,OAAOR,CACX,EAMA,KAAAF,GACI,IAAK5B,KAAKa,eAAgB,CACtBb,KAAKa,eAAiB,CAAC,EACvBb,KAAKc,eAAiB,CAAC,EACvBd,KAAKe,sBAAwB,CAAC,EAC9Bf,KAAKgB,sBAAwB,CAAC,EAE9B,IAAK,IAAIR,EAAI,EAAGA,EAAIR,KAAKkB,aAAaT,OAAQD,IAC1CR,KAAKa,eAAeL,GAAKR,KAAKkB,aAAasC,OAAOhD,GAClDR,KAAKc,eAAed,KAAKa,eAAeL,IAAMA,EAC9CR,KAAKe,sBAAsBP,GAAKR,KAAKmB,qBAAqBqC,OAAOhD,GACjER,KAAKgB,sBAAsBhB,KAAKe,sBAAsBP,IAAMA,EAExDA,GAAKR,KAAKiB,kBAAkBR,SAC5BT,KAAKc,eAAed,KAAKmB,qBAAqBqC,OAAOhD,IAAMA,EAC3DR,KAAKgB,sBAAsBhB,KAAKkB,aAAasC,OAAOhD,IAAMA,EAGtE,CACJ,GAKJ,MAAMkD,UAAgC/B,MAClC,WAAAgC,GACIC,SAASC,WACT7D,KAAK8D,KAAO,yBAChB,EAKJ,MAQMC,EAAgC,SAAU1D,GAE5C,OAViB,SAAUA,GAC3B,MAAM2D,EAAY5D,EAAoBC,GACtC,OAAOO,EAAOU,gBAAgB0C,GAAW,EAC7C,CAOWC,CAAa5D,GAAK6D,QAAQ,MAAO,GAC5C,EAuLMC,EAAc,KAChB,IACI,OAxER,WACI,GAAoB,oBAATC,KACP,OAAOA,KAEX,GAAsB,oBAAXjE,OACP,OAAOA,OAEX,QAAsB,IAAX,EAAAL,EACP,OAAO,EAAAA,EAEX,MAAM,IAAI6B,MAAM,kCACpB,CAkBoC0C,GAAYC,uBAkBlB,MAC1B,GAAwB,oBAAbC,SACP,OAEJ,IAAIC,EACJ,IACIA,EAAQD,SAASE,OAAOD,MAAM,gCAClC,CACA,MAAOtE,GAGH,MACJ,CACA,MAAMwE,EAAUF,GAnKC,SAAUnE,GAC3B,IACI,OAAOO,EAAOgC,aAAavC,GAAK,EACpC,CACA,MAAOH,GACHyE,QAAQC,MAAM,wBAAyB1E,EAC3C,CACA,OAAO,IACX,CA2J6B2E,CAAaL,EAAM,IAC5C,OAAOE,GAAWI,KAAKC,MAAML,EAAQ,EAa7BM,EACR,CACA,MAAO9E,GAQH,YADAyE,QAAQM,KAAK,+CAA+C/E,IAEhE,GAsCEgF,EAAsB,KAAQ,IAAIC,EAAI,OAAgC,QAAxBA,EAAKhB,WAAkC,IAAPgB,OAAgB,EAASA,EAAGC,MAAM,EAwBtH,MAAMC,EACF,WAAA1B,GACI3D,KAAKsF,OAAS,OACdtF,KAAKuF,QAAU,OACfvF,KAAKwF,QAAU,IAAIC,SAAQ,CAACF,EAASD,KACjCtF,KAAKuF,QAAUA,EACfvF,KAAKsF,OAASA,CAAM,GAE5B,CAMA,YAAAI,CAAaC,GACT,MAAO,CAACf,EAAOgB,KACPhB,EACA5E,KAAKsF,OAAOV,GAGZ5E,KAAKuF,QAAQK,GAEO,mBAAbD,IAGP3F,KAAKwF,QAAQK,OAAM,SAGK,IAApBF,EAASlF,OACTkF,EAASf,GAGTe,EAASf,EAAOgB,GAExB,CAER,EA0LJ,SAAS,IACL,IACI,MAA4B,iBAAdE,SAClB,CACA,MAAO5F,GACH,OAAO,CACX,CACJ,CAQA,SAAS,IACL,OAAO,IAAIuF,SAAQ,CAACF,EAASD,KACzB,IACI,IAAIS,GAAW,EACf,MAAMC,EAAgB,0DAChBC,EAAU7B,KAAK0B,UAAUI,KAAKF,GACpCC,EAAQE,UAAY,KAChBF,EAAQG,OAAOC,QAEVN,GACD3B,KAAK0B,UAAUQ,eAAeN,GAElCT,GAAQ,EAAK,EAEjBU,EAAQM,gBAAkB,KACtBR,GAAW,CAAK,EAEpBE,EAAQO,QAAU,KACd,IAAIrB,EACJG,GAAiC,QAAxBH,EAAKc,EAAQrB,aAA0B,IAAPO,OAAgB,EAASA,EAAGsB,UAAY,GAAG,CAE5F,CACA,MAAO7B,GACHU,EAAOV,EACX,IAER,CAwEA,MAAM8B,UAAsB/E,MACxB,WAAAgC,CAEAgD,EAAMF,EAENG,GACIhD,MAAM6C,GACNzG,KAAK2G,KAAOA,EACZ3G,KAAK4G,WAAaA,EAElB5G,KAAK8D,KAbM,gBAkBX+C,OAAOC,eAAe9G,KAAM0G,EAAcK,WAGtCpF,MAAMqF,mBACNrF,MAAMqF,kBAAkBhH,KAAMiH,EAAaF,UAAUG,OAE7D,EAEJ,MAAMD,EACF,WAAAtD,CAAYwD,EAASC,EAAaC,GAC9BrH,KAAKmH,QAAUA,EACfnH,KAAKoH,YAAcA,EACnBpH,KAAKqH,OAASA,CAClB,CACA,MAAAH,CAAOP,KAASW,GACZ,MAAMV,EAAaU,EAAK,IAAM,CAAC,EACzBC,EAAW,GAAGvH,KAAKmH,WAAWR,IAC9Ba,EAAWxH,KAAKqH,OAAOV,GACvBF,EAAUe,EAOxB,SAAyBA,EAAUF,GAC/B,OAAOE,EAAStD,QAAQuD,GAAS,CAACC,EAAGC,KACjC,MAAM/B,EAAQ0B,EAAKK,GACnB,OAAgB,MAAT/B,EAAgB5C,OAAO4C,GAAS,IAAI+B,KAAO,GAE1D,CAZmCC,CAAgBJ,EAAUZ,GAAc,QAE7DiB,EAAc,GAAG7H,KAAKoH,gBAAgBX,MAAYc,MAExD,OADc,IAAIb,EAAca,EAAUM,EAAajB,EAE3D,EAQJ,MAAMa,EAAU,gBAkMhB,SAASK,EAAUC,EAAGC,GAClB,GAAID,IAAMC,EACN,OAAO,EAEX,MAAMC,EAAQpB,OAAOqB,KAAKH,GACpBI,EAAQtB,OAAOqB,KAAKF,GAC1B,IAAK,MAAMI,KAAKH,EAAO,CACnB,IAAKE,EAAME,SAASD,GAChB,OAAO,EAEX,MAAME,EAAQP,EAAEK,GACVG,EAAQP,EAAEI,GAChB,GAAII,EAASF,IAAUE,EAASD,IAC5B,IAAKT,EAAUQ,EAAOC,GAClB,OAAO,OAGV,GAAID,IAAUC,EACf,OAAO,CAEf,CACA,IAAK,MAAMH,KAAKD,EACZ,IAAKF,EAAMI,SAASD,GAChB,OAAO,EAGf,OAAO,CACX,CACA,SAASI,EAASC,GACd,OAAiB,OAAVA,GAAmC,iBAAVA,CACpC,CA+wBA,SAASC,EAAuBC,EAAcC,EA1Bd,IA0BwDC,EArBzD,GAyB3B,MAAMC,EAAgBF,EAAiBG,KAAKC,IAAIH,EAAeF,GAGzDM,EAAaF,KAAKG,MAbN,GAiBdJ,GAGCC,KAAKI,SAAW,IACjB,GAEJ,OAAOJ,KAAKK,IAhCS,MAgCaN,EAAgBG,EACtD,CA8DA,SAAS,EAAmB9B,GACxB,OAAIA,GAAWA,EAAQkC,UACZlC,EAAQkC,UAGRlC,CAEf,CCjjEA,MAAMmC,EAOF,WAAA3F,CAAYG,EAAMyF,EAAiBC,GAC/BxJ,KAAK8D,KAAOA,EACZ9D,KAAKuJ,gBAAkBA,EACvBvJ,KAAKwJ,KAAOA,EACZxJ,KAAKyJ,mBAAoB,EAIzBzJ,KAAK0J,aAAe,CAAC,EACrB1J,KAAK2J,kBAAoB,OACzB3J,KAAK4J,kBAAoB,IAC7B,CACA,oBAAAC,CAAqBC,GAEjB,OADA9J,KAAK2J,kBAAoBG,EAClB9J,IACX,CACA,oBAAA+J,CAAqBN,GAEjB,OADAzJ,KAAKyJ,kBAAoBA,EAClBzJ,IACX,CACA,eAAAgK,CAAgBC,GAEZ,OADAjK,KAAK0J,aAAeO,EACbjK,IACX,CACA,0BAAAkK,CAA2BvE,GAEvB,OADA3F,KAAK4J,kBAAoBjE,EAClB3F,IACX,EAmBJ,MAAMmK,EAAqB,YAsB3B,MAAMC,EACF,WAAAzG,CAAYG,EAAMuG,GACdrK,KAAK8D,KAAOA,EACZ9D,KAAKqK,UAAYA,EACjBrK,KAAKsK,UAAY,KACjBtK,KAAKuK,UAAY,IAAIC,IACrBxK,KAAKyK,kBAAoB,IAAID,IAC7BxK,KAAK0K,iBAAmB,IAAIF,IAC5BxK,KAAK2K,gBAAkB,IAAIH,GAC/B,CAKA,GAAAI,CAAIC,GAEA,MAAMC,EAAuB9K,KAAK+K,4BAA4BF,GAC9D,IAAK7K,KAAKyK,kBAAkBO,IAAIF,GAAuB,CACnD,MAAMG,EAAW,IAAI5F,EAErB,GADArF,KAAKyK,kBAAkBS,IAAIJ,EAAsBG,GAC7CjL,KAAKmL,cAAcL,IACnB9K,KAAKoL,uBAEL,IACI,MAAMC,EAAWrL,KAAKsL,uBAAuB,CACzCC,mBAAoBT,IAEpBO,GACAJ,EAAS1F,QAAQ8F,EAEzB,CACA,MAAOnL,GAGP,CAER,CACA,OAAOF,KAAKyK,kBAAkBG,IAAIE,GAAsBtF,OAC5D,CACA,YAAAgG,CAAaC,GACT,IAAItG,EAEJ,MAAM2F,EAAuB9K,KAAK+K,4BAA4BU,aAAyC,EAASA,EAAQZ,YAClHa,EAAyF,QAA7EvG,EAAKsG,aAAyC,EAASA,EAAQC,gBAA6B,IAAPvG,GAAgBA,EACvH,IAAInF,KAAKmL,cAAcL,KACnB9K,KAAKoL,uBAeJ,CAED,GAAIM,EACA,OAAO,KAGP,MAAM/J,MAAM,WAAW3B,KAAK8D,wBAEpC,CAtBI,IACI,OAAO9D,KAAKsL,uBAAuB,CAC/BC,mBAAoBT,GAE5B,CACA,MAAO5K,GACH,GAAIwL,EACA,OAAO,KAGP,MAAMxL,CAEd,CAWR,CACA,YAAAyL,GACI,OAAO3L,KAAKsK,SAChB,CACA,YAAAsB,CAAatB,GACT,GAAIA,EAAUxG,OAAS9D,KAAK8D,KACxB,MAAMnC,MAAM,yBAAyB2I,EAAUxG,qBAAqB9D,KAAK8D,SAE7E,GAAI9D,KAAKsK,UACL,MAAM3I,MAAM,iBAAiB3B,KAAK8D,kCAItC,GAFA9D,KAAKsK,UAAYA,EAEZtK,KAAKoL,uBAAV,CAIA,GAwKR,SAA0Bd,GACtB,MAAuC,UAAhCA,EAAUX,iBACrB,CA1KYkC,CAAiBvB,GACjB,IACItK,KAAKsL,uBAAuB,CAAEC,mBAAoBpB,GACtD,CACA,MAAOjK,GAKP,CAKJ,IAAK,MAAOqL,EAAoBO,KAAqB9L,KAAKyK,kBAAkBsB,UAAW,CACnF,MAAMjB,EAAuB9K,KAAK+K,4BAA4BQ,GAC9D,IAEI,MAAMF,EAAWrL,KAAKsL,uBAAuB,CACzCC,mBAAoBT,IAExBgB,EAAiBvG,QAAQ8F,EAC7B,CACA,MAAOnL,GAGP,CACJ,CA7BA,CA8BJ,CACA,aAAA8L,CAAcnB,EAAaV,GACvBnK,KAAKyK,kBAAkBwB,OAAOpB,GAC9B7K,KAAK0K,iBAAiBuB,OAAOpB,GAC7B7K,KAAKuK,UAAU0B,OAAOpB,EAC1B,CAGA,YAAM,GACF,MAAMqB,EAAWzK,MAAM0K,KAAKnM,KAAKuK,UAAU6B,gBACrC3G,QAAQ4G,IAAI,IACXH,EACEI,QAAOnF,GAAW,aAAcA,IAEhCoF,KAAIpF,GAAWA,EAAQqF,SAASP,cAClCC,EACEI,QAAOnF,GAAW,YAAaA,IAE/BoF,KAAIpF,GAAWA,EAAQsF,aAEpC,CACA,cAAAC,GACI,OAAyB,MAAlB1M,KAAKsK,SAChB,CACA,aAAAa,CAAcN,EAAaV,GACvB,OAAOnK,KAAKuK,UAAUS,IAAIH,EAC9B,CACA,UAAA8B,CAAW9B,EAAaV,GACpB,OAAOnK,KAAK0K,iBAAiBE,IAAIC,IAAe,CAAC,CACrD,CACA,UAAA+B,CAAWC,EAAO,CAAC,GACf,MAAM,QAAEpB,EAAU,CAAC,GAAMoB,EACnB/B,EAAuB9K,KAAK+K,4BAA4B8B,EAAKtB,oBACnE,GAAIvL,KAAKmL,cAAcL,GACnB,MAAMnJ,MAAM,GAAG3B,KAAK8D,QAAQgH,mCAEhC,IAAK9K,KAAK0M,iBACN,MAAM/K,MAAM,aAAa3B,KAAK8D,oCAElC,MAAMuH,EAAWrL,KAAKsL,uBAAuB,CACzCC,mBAAoBT,EACpBW,YAGJ,IAAK,MAAOF,EAAoBO,KAAqB9L,KAAKyK,kBAAkBsB,UAEpEjB,IADiC9K,KAAK+K,4BAA4BQ,IAElEO,EAAiBvG,QAAQ8F,GAGjC,OAAOA,CACX,CASA,MAAAyB,CAAOnH,EAAUkF,GACb,IAAI1F,EACJ,MAAM2F,EAAuB9K,KAAK+K,4BAA4BF,GACxDkC,EAA8E,QAAzD5H,EAAKnF,KAAK2K,gBAAgBC,IAAIE,UAA0C,IAAP3F,EAAgBA,EAAK,IAAI6H,IACrHD,EAAkBE,IAAItH,GACtB3F,KAAK2K,gBAAgBO,IAAIJ,EAAsBiC,GAC/C,MAAMG,EAAmBlN,KAAKuK,UAAUK,IAAIE,GAI5C,OAHIoC,GACAvH,EAASuH,EAAkBpC,GAExB,KACHiC,EAAkBd,OAAOtG,EAAS,CAE1C,CAKA,qBAAAwH,CAAsB9B,EAAUR,GAC5B,MAAMuC,EAAYpN,KAAK2K,gBAAgBC,IAAIC,GAC3C,GAAKuC,EAGL,IAAK,MAAMzH,KAAYyH,EACnB,IACIzH,EAAS0F,EAAUR,EACvB,CACA,MAAO1F,GAEP,CAER,CACA,sBAAAmG,EAAuB,mBAAEC,EAAkB,QAAEE,EAAU,CAAC,IACpD,IAAIJ,EAAWrL,KAAKuK,UAAUK,IAAIW,GAClC,IAAKF,GAAYrL,KAAKsK,YAClBe,EAAWrL,KAAKsK,UAAUf,gBAAgBvJ,KAAKqK,UAAW,CACtDkB,oBAyCuBV,EAzC2BU,EA0CvDV,IAAeV,OAAqBkD,EAAYxC,GAzC3CY,YAEJzL,KAAKuK,UAAUW,IAAIK,EAAoBF,GACvCrL,KAAK0K,iBAAiBQ,IAAIK,EAAoBE,GAM9CzL,KAAKmN,sBAAsB9B,EAAUE,GAMjCvL,KAAKsK,UAAUV,mBACf,IACI5J,KAAKsK,UAAUV,kBAAkB5J,KAAKqK,UAAWkB,EAAoBF,EACzE,CACA,MAAOlG,GAEP,CAmBhB,IAAuC0F,EAhB/B,OAAOQ,GAAY,IACvB,CACA,2BAAAN,CAA4BF,EAAaV,GACrC,OAAInK,KAAKsK,UACEtK,KAAKsK,UAAUb,kBAAoBoB,EAAaV,EAGhDU,CAEf,CACA,oBAAAO,GACI,QAAUpL,KAAKsK,WAC0B,aAArCtK,KAAKsK,UAAUX,iBACvB,EA6BJ,MAAM,EACF,WAAAhG,CAAYG,GACR9D,KAAK8D,KAAOA,EACZ9D,KAAKsN,UAAY,IAAI9C,GACzB,CAUA,YAAA+C,CAAajD,GACT,MAAMkD,EAAWxN,KAAKyN,YAAYnD,EAAUxG,MAC5C,GAAI0J,EAASd,iBACT,MAAM,IAAI/K,MAAM,aAAa2I,EAAUxG,yCAAyC9D,KAAK8D,QAEzF0J,EAAS5B,aAAatB,EAC1B,CACA,uBAAAoD,CAAwBpD,GACHtK,KAAKyN,YAAYnD,EAAUxG,MAC/B4I,kBAET1M,KAAKsN,UAAUrB,OAAO3B,EAAUxG,MAEpC9D,KAAKuN,aAAajD,EACtB,CAQA,WAAAmD,CAAY3J,GACR,GAAI9D,KAAKsN,UAAUtC,IAAIlH,GACnB,OAAO9D,KAAKsN,UAAU1C,IAAI9G,GAG9B,MAAM0J,EAAW,IAAIpD,EAAStG,EAAM9D,MAEpC,OADAA,KAAKsN,UAAUpC,IAAIpH,EAAM0J,GAClBA,CACX,CACA,YAAAG,GACI,OAAOlM,MAAM0K,KAAKnM,KAAKsN,UAAUlB,SACrC,ECjYJ,MAAM7B,EAAY,GAYlB,IAAIqD,GACJ,SAAWA,GACPA,EAASA,EAAgB,MAAI,GAAK,QAClCA,EAASA,EAAkB,QAAI,GAAK,UACpCA,EAASA,EAAe,KAAI,GAAK,OACjCA,EAASA,EAAe,KAAI,GAAK,OACjCA,EAASA,EAAgB,MAAI,GAAK,QAClCA,EAASA,EAAiB,OAAI,GAAK,QACtC,CAPD,CAOGA,IAAaA,EAAW,CAAC,IAC5B,MAAMC,EAAoB,CACtB,MAASD,EAASE,MAClB,QAAWF,EAASG,QACpB,KAAQH,EAASI,KACjB,KAAQJ,EAASK,KACjB,MAASL,EAASM,MAClB,OAAUN,EAASO,QAKjBC,EAAkBR,EAASI,KAO3BK,EAAgB,CAClB,CAACT,EAASE,OAAQ,MAClB,CAACF,EAASG,SAAU,MACpB,CAACH,EAASI,MAAO,OACjB,CAACJ,EAASK,MAAO,OACjB,CAACL,EAASM,OAAQ,SAOhBI,EAAoB,CAACjD,EAAUkD,KAAYC,KAC7C,GAAID,EAAUlD,EAASoD,SACnB,OAEJ,MAAMC,GAAM,IAAIC,MAAOC,cACjBC,EAASR,EAAcE,GAC7B,IAAIM,EAIA,MAAM,IAAIlN,MAAM,8DAA8D4M,MAH9E5J,QAAQkK,GAAQ,IAAIH,OAASrD,EAASvH,WAAY0K,EAItD,EAEJ,MAAMM,EAOF,WAAAnL,CAAYG,GACR9D,KAAK8D,KAAOA,EAIZ9D,KAAK+O,UAAYX,EAKjBpO,KAAKgP,YAAcV,EAInBtO,KAAKiP,gBAAkB,KAIvB1E,EAAU/H,KAAKxC,KACnB,CACA,YAAIyO,GACA,OAAOzO,KAAK+O,SAChB,CACA,YAAIN,CAASS,GACT,KAAMA,KAAOtB,GACT,MAAM,IAAIuB,UAAU,kBAAkBD,+BAE1ClP,KAAK+O,UAAYG,CACrB,CAEA,WAAAE,CAAYF,GACRlP,KAAK+O,UAA2B,iBAARG,EAAmBrB,EAAkBqB,GAAOA,CACxE,CACA,cAAIG,GACA,OAAOrP,KAAKgP,WAChB,CACA,cAAIK,CAAWH,GACX,GAAmB,mBAARA,EACP,MAAM,IAAIC,UAAU,qDAExBnP,KAAKgP,YAAcE,CACvB,CACA,kBAAII,GACA,OAAOtP,KAAKiP,eAChB,CACA,kBAAIK,CAAeJ,GACflP,KAAKiP,gBAAkBC,CAC3B,CAIA,KAAAK,IAASf,GACLxO,KAAKiP,iBAAmBjP,KAAKiP,gBAAgBjP,KAAM4N,EAASE,SAAUU,GACtExO,KAAKgP,YAAYhP,KAAM4N,EAASE,SAAUU,EAC9C,CACA,GAAAgB,IAAOhB,GACHxO,KAAKiP,iBACDjP,KAAKiP,gBAAgBjP,KAAM4N,EAASG,WAAYS,GACpDxO,KAAKgP,YAAYhP,KAAM4N,EAASG,WAAYS,EAChD,CACA,IAAAvJ,IAAQuJ,GACJxO,KAAKiP,iBAAmBjP,KAAKiP,gBAAgBjP,KAAM4N,EAASI,QAASQ,GACrExO,KAAKgP,YAAYhP,KAAM4N,EAASI,QAASQ,EAC7C,CACA,IAAAiB,IAAQjB,GACJxO,KAAKiP,iBAAmBjP,KAAKiP,gBAAgBjP,KAAM4N,EAASK,QAASO,GACrExO,KAAKgP,YAAYhP,KAAM4N,EAASK,QAASO,EAC7C,CACA,KAAA5J,IAAS4J,GACLxO,KAAKiP,iBAAmBjP,KAAKiP,gBAAgBjP,KAAM4N,EAASM,SAAUM,GACtExO,KAAKgP,YAAYhP,KAAM4N,EAASM,SAAUM,EAC9C,EC/JJ,IAAIkB,EACAC,EAqBJ,MAAMC,EAAmB,IAAIC,QACvBC,EAAqB,IAAID,QACzBE,EAA2B,IAAIF,QAC/BG,EAAiB,IAAIH,QACrBI,EAAwB,IAAIJ,QA0DlC,IAAIK,EAAgB,CAChB,GAAAtF,CAAIuF,EAAQC,EAAMC,GACd,GAAIF,aAAkBG,eAAgB,CAElC,GAAa,SAATF,EACA,OAAON,EAAmBlF,IAAIuF,GAElC,GAAa,qBAATC,EACA,OAAOD,EAAOI,kBAAoBR,EAAyBnF,IAAIuF,GAGnE,GAAa,UAATC,EACA,OAAOC,EAASE,iBAAiB,QAC3BlD,EACAgD,EAASG,YAAYH,EAASE,iBAAiB,GAE7D,CAEA,OAAO,EAAKJ,EAAOC,GACvB,EACAlF,IAAG,CAACiF,EAAQC,EAAMxK,KACduK,EAAOC,GAAQxK,GACR,GAEXoF,IAAG,CAACmF,EAAQC,IACJD,aAAkBG,iBACR,SAATF,GAA4B,UAATA,IAGjBA,KAAQD,GAqCvB,SAASM,EAAuB7K,GAC5B,MAAqB,mBAAVA,GAhCO8K,EAiCM9K,KA7BX+K,YAAY5J,UAAU6J,aAC7B,qBAAsBN,eAAevJ,WA7GnC4I,IACHA,EAAuB,CACpBkB,UAAU9J,UAAU+J,QACpBD,UAAU9J,UAAUgK,SACpBF,UAAU9J,UAAUiK,sBAqHE3I,SAASqI,GAC5B,YAAalC,GAIhB,OADAkC,EAAKO,MAAMC,EAAOlR,MAAOwO,GAClB,EAAKoB,EAAiBhF,IAAI5K,MACrC,EAEG,YAAawO,GAGhB,OAAO,EAAKkC,EAAKO,MAAMC,EAAOlR,MAAOwO,GACzC,EAvBW,SAAU2C,KAAe3C,GAC5B,MAAM4C,EAAKV,EAAKW,KAAKH,EAAOlR,MAAOmR,KAAe3C,GAElD,OADAuB,EAAyB7E,IAAIkG,EAAID,EAAWG,KAAOH,EAAWG,OAAS,CAACH,IACjE,EAAKC,EAChB,GA0BAxL,aAAiB0K,gBAhGzB,SAAwCc,GAEpC,GAAItB,EAAmB9E,IAAIoG,GACvB,OACJ,MAAMG,EAAO,IAAI9L,SAAQ,CAACF,EAASD,KAC/B,MAAMkM,EAAW,KACbJ,EAAGK,oBAAoB,WAAYC,GACnCN,EAAGK,oBAAoB,QAAS7M,GAChCwM,EAAGK,oBAAoB,QAAS7M,EAAM,EAEpC8M,EAAW,KACbnM,IACAiM,GAAU,EAER5M,EAAQ,KACVU,EAAO8L,EAAGxM,OAAS,IAAI+M,aAAa,aAAc,eAClDH,GAAU,EAEdJ,EAAGQ,iBAAiB,WAAYF,GAChCN,EAAGQ,iBAAiB,QAAShN,GAC7BwM,EAAGQ,iBAAiB,QAAShN,EAAM,IAGvCkL,EAAmB5E,IAAIkG,EAAIG,EAC/B,CAyEQM,CAA+BjM,GA9JhBkM,EA+JDlM,GAzJV8J,IACHA,EAAoB,CACjBiB,YACAoB,eACAC,SACAnB,UACAP,kBAZiD2B,MAAMvR,GAAMoR,aAAkBpR,IAgK5E,IAAIwR,MAAMtM,EAAOsK,GAErBtK,GAzCX,IAAsB8K,EAzHCoB,CAmKvB,CACA,SAAS,EAAKlM,GAGV,GAAIA,aAAiBuM,WACjB,OA3IR,SAA0BlM,GACtB,MAAMT,EAAU,IAAIC,SAAQ,CAACF,EAASD,KAClC,MAAMkM,EAAW,KACbvL,EAAQwL,oBAAoB,UAAWW,GACvCnM,EAAQwL,oBAAoB,QAAS7M,EAAM,EAEzCwN,EAAU,KACZ7M,EAAQ,EAAKU,EAAQG,SACrBoL,GAAU,EAER5M,EAAQ,KACVU,EAAOW,EAAQrB,OACf4M,GAAU,EAEdvL,EAAQ2L,iBAAiB,UAAWQ,GACpCnM,EAAQ2L,iBAAiB,QAAShN,EAAM,IAe5C,OAbAY,EACK6M,MAAMzM,IAGHA,aAAiBiL,WACjBjB,EAAiB1E,IAAItF,EAAOK,EAChC,IAGCJ,OAAM,SAGXoK,EAAsB/E,IAAI1F,EAASS,GAC5BT,CACX,CA4Ge8M,CAAiB1M,GAG5B,GAAIoK,EAAehF,IAAIpF,GACnB,OAAOoK,EAAepF,IAAIhF,GAC9B,MAAM2M,EAAW9B,EAAuB7K,GAOxC,OAJI2M,IAAa3M,IACboK,EAAe9E,IAAItF,EAAO2M,GAC1BtC,EAAsB/E,IAAIqH,EAAU3M,IAEjC2M,CACX,CACA,MAAMrB,EAAUtL,GAAUqK,EAAsBrF,IAAIhF,GC5KpD,SAAS4M,EAAO1O,EAAM2O,GAAS,QAAEC,EAAO,QAAEC,EAAO,SAAEC,EAAQ,WAAEC,GAAe,CAAC,GACzE,MAAM5M,EAAUH,UAAUI,KAAKpC,EAAM2O,GAC/BK,EAAc,EAAK7M,GAoBzB,OAnBI0M,GACA1M,EAAQ2L,iBAAiB,iBAAkBmB,IACvCJ,EAAQ,EAAK1M,EAAQG,QAAS2M,EAAMC,WAAYD,EAAME,WAAY,EAAKhN,EAAQ2K,aAAcmC,EAAM,IAGvGL,GACAzM,EAAQ2L,iBAAiB,WAAYmB,GAAUL,EAE/CK,EAAMC,WAAYD,EAAME,WAAYF,KAExCD,EACKT,MAAMa,IACHL,GACAK,EAAGtB,iBAAiB,SAAS,IAAMiB,MACnCD,GACAM,EAAGtB,iBAAiB,iBAAkBmB,GAAUH,EAASG,EAAMC,WAAYD,EAAME,WAAYF,IACjG,IAEClN,OAAM,SACJiN,CACX,CAgBA,MAAMK,EAAc,CAAC,MAAO,SAAU,SAAU,aAAc,SACxDC,EAAe,CAAC,MAAO,MAAO,SAAU,SACxCC,EAAgB,IAAI7I,IAC1B,SAAS8I,EAAUnD,EAAQC,GACvB,KAAMD,aAAkBQ,cAClBP,KAAQD,GACM,iBAATC,EACP,OAEJ,GAAIiD,EAAczI,IAAIwF,GAClB,OAAOiD,EAAczI,IAAIwF,GAC7B,MAAMmD,EAAiBnD,EAAKlM,QAAQ,aAAc,IAC5CsP,EAAWpD,IAASmD,EACpBE,EAAUL,EAAa/K,SAASkL,GACtC,KAEEA,KAAmBC,EAAWxB,SAAWD,gBAAgBhL,aACrD0M,IAAWN,EAAY9K,SAASkL,GAClC,OAEJ,MAAM1E,EAAS6E,eAAgBC,KAAcnF,GAEzC,MAAM4C,EAAKpR,KAAK4Q,YAAY+C,EAAWF,EAAU,YAAc,YAC/D,IAAItD,EAASiB,EAAGwC,MAQhB,OAPIJ,IACArD,EAASA,EAAO0D,MAAMrF,EAAKsF,iBAMjBrO,QAAQ4G,IAAI,CACtB8D,EAAOoD,MAAmB/E,GAC1BiF,GAAWrC,EAAGG,QACd,EACR,EAEA,OADA8B,EAAcnI,IAAIkF,EAAMvB,GACjBA,CACX,CACa,IAACkF,ID+Be7D,EAAzBA,EC/BuB,IACpB6D,EACHnJ,IAAK,CAACuF,EAAQC,EAAMC,IAAaiD,EAAUnD,EAAQC,IAAS2D,EAASnJ,IAAIuF,EAAQC,EAAMC,GACvFrF,IAAK,CAACmF,EAAQC,MAAWkD,EAAUnD,EAAQC,IAAS2D,EAAS/I,IAAImF,EAAQC,ICrE7E,MAAM4D,EACF,WAAArQ,CAAY0G,GACRrK,KAAKqK,UAAYA,CACrB,CAGA,qBAAA4J,GAII,OAHkBjU,KAAKqK,UAAUsD,eAI5BpB,KAAIiB,IACL,GAoBZ,SAAkCA,GAC9B,MAAMlD,EAAYkD,EAAS7B,eAC3B,MAAkF,aAA1ErB,aAA6C,EAASA,EAAUd,KAC5E,CAvBgB0K,CAAyB1G,GAAW,CACpC,MAAMrG,EAAUqG,EAAShC,eACzB,MAAO,GAAGrE,EAAQgN,WAAWhN,EAAQsL,SACzC,CAEI,OAAO,IACX,IAECnG,QAAO8H,GAAaA,IACpB3R,KAAK,IACd,EAeJ,MAAM4R,EAAS,gBACTC,EAAY,SAkBZC,EAAS,IAAIzF,EAAO,iBAEpB0F,EAAS,uBAETC,EAAS,6BAETC,EAAS,sBAETC,EAAS,6BAETC,EAAS,sBAETC,GAAS,iBAETC,GAAS,wBAETC,GAAS,qBAETC,GAAS,yBAETC,GAAS,4BAETC,GAAS,sBAETC,GAAS,6BAETC,GAAS,0BAETC,GAAS,iCAETC,GAAS,sBAETC,GAAS,6BAETC,GAAS,wBAETC,GAAS,+BAETC,GAAS,0BAETC,GAAS,iCAETC,GAAS,oBAETC,GAAS,2BAETC,GAAS,sBAETC,GAAS,qBAETC,GAAS,6BAET,GAAO,WAwBP,GAAqB,YACrBC,GAAsB,CACxB,CAAC5B,GAAS,YACV,CAACG,GAAS,mBACV,CAACE,GAAS,iBACV,CAACD,GAAS,wBACV,CAACG,GAAS,iBACV,CAACD,GAAS,wBACV,CAACE,IAAS,YACV,CAACC,IAAS,mBACV,CAACC,IAAS,YACV,CAACC,IAAS,oBACV,CAACC,IAAS,mBACV,CAACC,IAAS,UACV,CAACC,IAAS,iBACV,CAACC,IAAS,WACV,CAACC,IAAS,kBACV,CAACC,IAAS,WACV,CAACC,IAAS,kBACV,CAACC,IAAS,YACV,CAACC,IAAS,mBACV,CAACC,IAAS,UACV,CAACC,IAAS,iBACV,CAACC,IAAS,WACV,CAACC,IAAS,kBACV,CAACC,IAAS,WACV,CAACE,IAAS,kBACV,CAACD,IAAS,cACV,UAAW,UACX,CAAC,IAAO,eAsBNG,GAAQ,IAAI1L,IAIZ2L,GAAc,IAAI3L,IAOlB4L,GAAc,IAAI5L,IAMxB,SAAS6L,GAAcC,EAAKhM,GACxB,IACIgM,EAAIjM,UAAUkD,aAAajD,EAC/B,CACA,MAAOpK,GACHqU,EAAOhF,MAAM,aAAajF,EAAUxG,4CAA4CwS,EAAIxS,OAAQ5D,EAChG,CACJ,CAeA,SAASqW,GAAmBjM,GACxB,MAAMkM,EAAgBlM,EAAUxG,KAChC,GAAIsS,GAAYpL,IAAIwL,GAEhB,OADAjC,EAAOhF,MAAM,sDAAsDiH,OAC5D,EAEXJ,GAAYlL,IAAIsL,EAAelM,GAE/B,IAAK,MAAMgM,KAAOJ,GAAM9J,SACpBiK,GAAcC,EAAKhM,GAEvB,IAAK,MAAMmM,KAAaN,GAAY/J,SAChCiK,GAAcI,EAAWnM,GAE7B,OAAO,CACX,CAUA,SAAS,GAAagM,EAAKxS,GACvB,MAAM4S,EAAsBJ,EAAIjM,UAC3BoD,YAAY,aACZjC,aAAa,CAAEE,UAAU,IAI9B,OAHIgL,GACKA,EAAoBC,mBAEtBL,EAAIjM,UAAUoD,YAAY3J,EACrC,CA8DA,MAkBM8S,GAAgB,IAAI3P,EAAa,MAAO,WAlB/B,CACX,SAAkC,6EAElC,eAA8C,iCAC9C,gBAAgD,kFAChD,cAA4C,kDAC5C,qBAA0D,uCAC1D,aAA0C,0EAC1C,uBAA8D,6EAE9D,uBAA8D,wDAC9D,WAAsC,gFACtC,UAAoC,qFACpC,UAAsC,mFACtC,aAA0C,sFAC1C,sCAA4F,0GAC5F,iCAAkF,8DAoBtF,MAAM4P,GACF,WAAAlT,CAAY8H,EAASrG,EAAQiF,GACzBrK,KAAK8W,YAAa,EAClB9W,KAAK+W,SAAWlQ,OAAOmQ,OAAO,CAAC,EAAGvL,GAClCzL,KAAKiX,QAAUpQ,OAAOmQ,OAAO,CAAC,EAAG5R,GACjCpF,KAAKkX,MAAQ9R,EAAOtB,KACpB9D,KAAKmX,gCACD/R,EAAOgS,+BACXpX,KAAKqX,WAAahN,EAClBrK,KAAKqK,UAAUkD,aAAa,IAAIjE,EAAU,OAAO,IAAMtJ,MAAM,UACjE,CACA,kCAAIoX,GAEA,OADApX,KAAKsX,iBACEtX,KAAKmX,+BAChB,CACA,kCAAIC,CAA+BlI,GAC/BlP,KAAKsX,iBACLtX,KAAKmX,gCAAkCjI,CAC3C,CACA,QAAIpL,GAEA,OADA9D,KAAKsX,iBACEtX,KAAKkX,KAChB,CACA,WAAIzL,GAEA,OADAzL,KAAKsX,iBACEtX,KAAK+W,QAChB,CACA,UAAI3R,GAEA,OADApF,KAAKsX,iBACEtX,KAAKiX,OAChB,CACA,aAAI5M,GACA,OAAOrK,KAAKqX,UAChB,CACA,aAAIE,GACA,OAAOvX,KAAK8W,UAChB,CACA,aAAIS,CAAUrI,GACVlP,KAAK8W,WAAa5H,CACtB,CAKA,cAAAoI,GACI,GAAItX,KAAKuX,UACL,MAAMX,GAAc1P,OAAO,cAA0C,CAAEsQ,QAASxX,KAAKkX,OAE7F,EAsJJ,SAASO,GAAcV,EAAUW,EAAY,CAAC,GAC1C,IAAIjM,EAAUsL,EACW,iBAAdW,IAEPA,EAAY,CAAE5T,KADD4T,IAGjB,MAAMtS,EAASyB,OAAOmQ,OAAO,CAAElT,KAAM,GAAoBsT,gCAAgC,GAASM,GAC5F5T,EAAOsB,EAAOtB,KACpB,GAAoB,iBAATA,IAAsBA,EAC7B,MAAM8S,GAAc1P,OAAO,eAA4C,CACnEsQ,QAASxU,OAAOc,KAIxB,GADA2H,IAAYA,EAAUvG,MACjBuG,EACD,MAAMmL,GAAc1P,OAAO,cAE/B,MAAMyQ,EAAczB,GAAMtL,IAAI9G,GAC9B,GAAI6T,EAAa,CAEb,GAAI7P,EAAU2D,EAASkM,EAAYlM,UAC/B3D,EAAU1C,EAAQuS,EAAYvS,QAC9B,OAAOuS,EAGP,MAAMf,GAAc1P,OAAO,gBAA8C,CAAEsQ,QAAS1T,GAE5F,CACA,MAAMuG,EAAY,IAAI,EAAmBvG,GACzC,IAAK,MAAMwG,KAAa8L,GAAYhK,SAChC/B,EAAUkD,aAAajD,GAE3B,MAAMsN,EAAS,IAAIf,GAAgBpL,EAASrG,EAAQiF,GAEpD,OADA6L,GAAMhL,IAAIpH,EAAM8T,GACTA,CACX,CAyIA,SAASC,GAAgBC,EAAkBrF,EAASsF,GAChD,IAAI5S,EAGJ,IAAIgP,EAA2D,QAAhDhP,EAAK8Q,GAAoB6B,UAAsC,IAAP3S,EAAgBA,EAAK2S,EACxFC,IACA5D,GAAW,IAAI4D,KAEnB,MAAMC,EAAkB7D,EAAQ3P,MAAM,SAChCyT,EAAkBxF,EAAQjO,MAAM,SACtC,GAAIwT,GAAmBC,EAAiB,CACpC,MAAMC,EAAU,CACZ,+BAA+B/D,oBAA0B1B,OAY7D,OAVIuF,GACAE,EAAQ1V,KAAK,iBAAiB2R,sDAE9B6D,GAAmBC,GACnBC,EAAQ1V,KAAK,OAEbyV,GACAC,EAAQ1V,KAAK,iBAAiBiQ,2DAElC8B,EAAO9E,KAAKyI,EAAQzV,KAAK,KAE7B,CACA8T,GAAmB,IAAIjN,EAAU,GAAG6K,aAAmB,KAAM,CAAGA,UAAS1B,aAAY,WACzF,CA2CA,MAEM0F,GAAa,2BACnB,IAAIC,GAAY,KAChB,SAASC,KA4BL,OA3BKD,KACDA,GAAY5F,EANJ,8BACG,EAK6B,CACpCG,QAAS,CAACO,EAAIF,KAMV,GACS,IADDA,EAEA,IACIE,EAAGoF,kBAAkBH,GACzB,CACA,MAAOjY,GAIHyE,QAAQ8K,KAAKvP,EACjB,CACR,IAEL2F,OAAM3F,IACL,MAAM0W,GAAc1P,OAAO,WAAoC,CAC3DqR,qBAAsBrY,EAAEuG,SAC1B,KAGH2R,EACX,CAuBA1E,eAAe8E,GAA2BlC,EAAKmC,GAC3C,IACI,MACMrH,SADWiH,MACHzH,YAAYuH,GAAY,aAChC3H,EAAcY,EAAGZ,YAAY2H,UAC7B3H,EAAYkI,IAAID,EAAiBE,GAAWrC,UAC5ClF,EAAGG,IACb,CACA,MAAOrR,GACH,GAAIA,aAAawG,EACb6N,EAAO9E,KAAKvP,EAAEuG,aAEb,CACD,MAAMmS,EAAchC,GAAc1P,OAAO,UAAoC,CACzEqR,qBAAsBrY,aAA6B,EAASA,EAAEuG,UAElE8N,EAAO9E,KAAKmJ,EAAYnS,QAC5B,CACJ,CACJ,CACA,SAASkS,GAAWrC,GAChB,MAAO,GAAGA,EAAIxS,QAAQwS,EAAI7K,QAAQoN,OACtC,CAoBA,MAAMC,GACF,WAAAnV,CAAY0G,GACRrK,KAAKqK,UAAYA,EAUjBrK,KAAK+Y,iBAAmB,KACxB,MAAMzC,EAAMtW,KAAKqK,UAAUoD,YAAY,OAAOjC,eAC9CxL,KAAKgZ,SAAW,IAAIC,GAAqB3C,GACzCtW,KAAKkZ,wBAA0BlZ,KAAKgZ,SAASG,OAAO9G,MAAKjM,IACrDpG,KAAK+Y,iBAAmB3S,EACjBA,IAEf,CAQA,sBAAMuQ,GACF,IAAIxR,EAAIiU,EACR,IACI,MAKMC,EALiBrZ,KAAKqK,UACvBoD,YAAY,mBACZjC,eAGwByI,wBACvBqF,EAAOC,KACb,GAAyF,OAAnD,QAAhCpU,EAAKnF,KAAK+Y,wBAAqC,IAAP5T,OAAgB,EAASA,EAAGqU,cACtExZ,KAAK+Y,uBAAyB/Y,KAAKkZ,wBAEsD,OAAnD,QAAhCE,EAAKpZ,KAAK+Y,wBAAqC,IAAPK,OAAgB,EAASA,EAAGI,aACtE,OAKR,GAAIxZ,KAAK+Y,iBAAiBU,wBAA0BH,GAChDtZ,KAAK+Y,iBAAiBS,WAAWvH,MAAKyH,GAAuBA,EAAoBJ,OAASA,IAC1F,OAOA,GAHAtZ,KAAK+Y,iBAAiBS,WAAWhX,KAAK,CAAE8W,OAAMD,UAG1CrZ,KAAK+Y,iBAAiBS,WAAW/Y,OAxDnB,GAwDuD,CACrE,MAAMkZ,EAsL1B,SAAiCH,GAC7B,GAA0B,IAAtBA,EAAW/Y,OACX,OAAQ,EAEZ,IAAIkZ,EAAuB,EACvBC,EAAwBJ,EAAW,GAAGF,KAC1C,IAAK,IAAI9Y,EAAI,EAAGA,EAAIgZ,EAAW/Y,OAAQD,IAC/BgZ,EAAWhZ,GAAG8Y,KAAOM,IACrBA,EAAwBJ,EAAWhZ,GAAG8Y,KACtCK,EAAuBnZ,GAG/B,OAAOmZ,CACX,CAnMiDE,CAAwB7Z,KAAK+Y,iBAAiBS,YAC3ExZ,KAAK+Y,iBAAiBS,WAAWM,OAAOH,EAAsB,EAClE,CAEJ,OAAO3Z,KAAKgZ,SAASe,UAAU/Z,KAAK+Y,iBACxC,CACA,MAAO7Y,GACHqU,EAAO9E,KAAKvP,EAChB,CACJ,CAQA,yBAAM8Z,GACF,IAAI7U,EACJ,IAKI,GAJ8B,OAA1BnF,KAAK+Y,wBACC/Y,KAAKkZ,wBAG0E,OAAnD,QAAhC/T,EAAKnF,KAAK+Y,wBAAqC,IAAP5T,OAAgB,EAASA,EAAGqU,aAC1B,IAA5CxZ,KAAK+Y,iBAAiBS,WAAW/Y,OACjC,MAAO,GAEX,MAAM6Y,EAAOC,MAEP,iBAAEU,EAAgB,cAAEC,GA8BtC,SAAoCC,EAAiBC,EAtH5B,MAyHrB,MAAMH,EAAmB,GAEzB,IAAIC,EAAgBC,EAAgBE,QACpC,IAAK,MAAMX,KAAuBS,EAAiB,CAE/C,MAAMG,EAAiBL,EAAiBM,MAAKC,GAAMA,EAAGnB,QAAUK,EAAoBL,QACpF,GAAKiB,GAiBD,GAHAA,EAAeG,MAAMjY,KAAKkX,EAAoBJ,MAG1CoB,GAAWT,GAAoBG,EAAS,CACxCE,EAAeG,MAAME,MACrB,KACJ,OAdA,GAJAV,EAAiBzX,KAAK,CAClB6W,MAAOK,EAAoBL,MAC3BoB,MAAO,CAACf,EAAoBJ,QAE5BoB,GAAWT,GAAoBG,EAAS,CAGxCH,EAAiBU,MACjB,KACJ,CAaJT,EAAgBA,EAAcG,MAAM,EACxC,CACA,MAAO,CACHJ,mBACAC,gBAER,CArEwDU,CAA2B5a,KAAK+Y,iBAAiBS,YACvFqB,EAAe9W,EAA8Be,KAAKgW,UAAU,CAAErI,QAAS,EAAG+G,WAAYS,KAgB5F,OAdAja,KAAK+Y,iBAAiBU,sBAAwBH,EAC1CY,EAAczZ,OAAS,GAEvBT,KAAK+Y,iBAAiBS,WAAaU,QAI7Bla,KAAKgZ,SAASe,UAAU/Z,KAAK+Y,oBAGnC/Y,KAAK+Y,iBAAiBS,WAAa,GAE9BxZ,KAAKgZ,SAASe,UAAU/Z,KAAK+Y,mBAE/B8B,CACX,CACA,MAAO3a,GAEH,OADAqU,EAAO9E,KAAKvP,GACL,EACX,CACJ,EAEJ,SAASqZ,KAGL,OAFc,IAAI5K,MAELC,cAAcmM,UAAU,EAAG,GAC5C,CAyCA,MAAM9B,GACF,WAAAtV,CAAY2S,GACRtW,KAAKsW,IAAMA,EACXtW,KAAKgb,wBAA0Bhb,KAAKib,8BACxC,CACA,kCAAMA,GACF,QAAK,KAIM,IACF5I,MAAK,KAAM,IACXxM,OAAM,KAAM,GAEzB,CAIA,UAAMsT,GAEF,SAD8BnZ,KAAKgb,wBAI9B,CACD,MAAME,QApPlBxH,eAA2C4C,GACvC,IACI,MACMlF,SADWiH,MACHzH,YAAYuH,IACpB/R,QAAegL,EAAGZ,YAAY2H,IAAYvN,IAAI+N,GAAWrC,IAI/D,aADMlF,EAAGG,KACFnL,CACX,CACA,MAAOlG,GACH,GAAIA,aAAawG,EACb6N,EAAO9E,KAAKvP,EAAEuG,aAEb,CACD,MAAMmS,EAAchC,GAAc1P,OAAO,UAAkC,CACvEqR,qBAAsBrY,aAA6B,EAASA,EAAEuG,UAElE8N,EAAO9E,KAAKmJ,EAAYnS,QAC5B,CACJ,CACJ,CA+N6C0U,CAA4Bnb,KAAKsW,KAClE,OAAI4E,aAA+D,EAASA,EAAmB1B,YACpF0B,EAGA,CAAE1B,WAAY,GAE7B,CAVI,MAAO,CAAEA,WAAY,GAW7B,CAEA,eAAMO,CAAUqB,GACZ,IAAIjW,EAEJ,SAD8BnF,KAAKgb,wBAI9B,CACD,MAAMK,QAAiCrb,KAAKmZ,OAC5C,OAAOX,GAA2BxY,KAAKsW,IAAK,CACxCmD,sBAAyE,QAAjDtU,EAAKiW,EAAiB3B,6BAA0C,IAAPtU,EAAgBA,EAAKkW,EAAyB5B,sBAC/HD,WAAY4B,EAAiB5B,YAErC,CACJ,CAEA,SAAMvM,CAAImO,GACN,IAAIjW,EAEJ,SAD8BnF,KAAKgb,wBAI9B,CACD,MAAMK,QAAiCrb,KAAKmZ,OAC5C,OAAOX,GAA2BxY,KAAKsW,IAAK,CACxCmD,sBAAyE,QAAjDtU,EAAKiW,EAAiB3B,6BAA0C,IAAPtU,EAAgBA,EAAKkW,EAAyB5B,sBAC/HD,WAAY,IACL6B,EAAyB7B,cACzB4B,EAAiB5B,aAGhC,CACJ,EAOJ,SAASkB,GAAWP,GAEhB,OAAOpW,EAEPe,KAAKgW,UAAU,CAAErI,QAAS,EAAG+G,WAAYW,KAAoB1Z,MACjE,CAqCI8V,GAAmB,IAAIjN,EAAU,mBAAmBe,GAAa,IAAI2J,EAA0B3J,IAAY,YAC3GkM,GAAmB,IAAIjN,EAAU,aAAae,GAAa,IAAIyO,GAAqBzO,IAAY,YAEhGwN,GAAgBxD,EAAQC,EAaL,IAXnBuD,GAAgBxD,EAAQC,EAAW,WAEnCuD,GAAgB,UAAW,ICjqC/B,MAAM,GAAO,0BACP,GAAU,SAmBVyD,GAAkB,KAAK,KACvBC,GAAwB,SA8BxB,GAAgB,IAAItU,EA3BV,gBACK,gBAkBS,CAC1B,4BAAyE,kDACzE,iBAAmD,2CACnD,yBAAmE,mCACnE,iBAAmD,6FACnD,cAA6C,kDAC7C,8BAA6E,6EAIjF,SAASuU,GAAc5W,GACnB,OAAQA,aAAiB8B,GACrB9B,EAAM+B,KAAK0B,SAAS,iBAC5B,CAkBA,SAASoT,IAAyB,UAAEC,IAChC,MAAO,4DAAqCA,iBAChD,CACA,SAASC,GAAiCC,GACtC,MAAO,CACHC,MAAOD,EAASC,MAChBC,cAAe,EACfC,WAuCmCC,EAvCUJ,EAASG,UAyCnDE,OAAOD,EAAkB9X,QAAQ,IAAK,SAxCzCgY,aAAcvN,KAAKD,OAsC3B,IAA2CsN,CApC3C,CACAtI,eAAeyI,GAAqBC,EAAaR,GAC7C,MACMS,SADqBT,EAASU,QACL1X,MAC/B,OAAO,GAAcsC,OAAO,iBAAiD,CACzEkV,cACAG,WAAYF,EAAU1V,KACtB6V,cAAeH,EAAU5V,QACzBgW,aAAcJ,EAAUK,QAEhC,CACA,SAASC,IAAW,OAAEC,IAClB,OAAO,IAAIC,QAAQ,CACf,eAAgB,mBAChBC,OAAQ,mBACR,iBAAkBF,GAE1B,CAWAlJ,eAAeqJ,GAAmBC,GAC9B,MAAM5W,QAAe4W,IACrB,OAAI5W,EAAOsW,QAAU,KAAOtW,EAAOsW,OAAS,IAEjCM,IAEJ5W,CACX,CAkFA,SAAS6W,GAAMC,GACX,OAAO,IAAIzX,SAAQF,IACf4X,WAAW5X,EAAS2X,EAAG,GAE/B,CAuCA,MAAME,GAAoB,oBAM1B,SAASC,KACL,IAGI,MAAMC,EAAe,IAAIC,WAAW,KACrBnZ,KAAKoZ,QAAUpZ,KAAKqZ,UAC5BC,gBAAgBJ,GAEvBA,EAAa,GAAK,IAAcA,EAAa,GAAK,GAClD,MAAMK,EASd,SAAgBL,GA7ChB,IAA+BM,EAiD3B,OAjD2BA,EA8CaN,EA7C5B3a,KAAKK,OAAOC,gBAAgB2a,IAC7B1Z,QAAQ,MAAO,KAAKA,QAAQ,MAAO,MA+C7B2Z,OAAO,EAAG,GAC/B,CAdoBC,CAAOR,GACnB,OAAOF,GAAkBW,KAAKJ,GAAOA,EAfzB,EAgBhB,CACA,MAAOxY,GAEH,MAnBY,EAoBhB,CACJ,CA0BA,SAAS6Y,GAAOC,GACZ,MAAO,GAAGA,EAAUzG,WAAWyG,EAAUpF,OAC7C,CAkBA,MAAMqF,GAAqB,IAAI1T,IAK/B,SAAS2T,GAAWF,EAAWN,GAC3B,MAAMhW,EAAMqW,GAAOC,GACnBG,GAAuBzW,EAAKgW,GAqChC,SAA4BhW,EAAKgW,GAC7B,MAAMU,IASDC,IAAoB,qBAAsBla,OAC3Cka,GAAmB,IAAIC,iBAAiB,yBACxCD,GAAiBE,UAAYte,IACzBke,GAAuBle,EAAEoH,KAAKK,IAAKzH,EAAEoH,KAAKqW,IAAI,GAG/CW,IAdHD,GACAA,EAAQI,YAAY,CAAE9W,MAAKgW,QAgBC,IAA5BO,GAAmBQ,MAAcJ,KACjCA,GAAiBjY,QACjBiY,GAAmB,KAf3B,CA1CIK,CAAmBhX,EAAKgW,EAC5B,CA0BA,SAASS,GAAuBzW,EAAKgW,GACjC,MAAMvQ,EAAY8Q,GAAmBtT,IAAIjD,GACzC,GAAKyF,EAGL,IAAK,MAAMzH,KAAYyH,EACnBzH,EAASgY,EAEjB,CAQA,IAAIW,GAAmB,KAkCvB,MAEMM,GAAoB,+BAC1B,IAAI,GAAY,KAChB,SAAS,KAgBL,OAfK,KACD,GAAYpM,EANE,kCACG,EAKmC,CAChDG,QAAS,CAACO,EAAIF,KAOD,IADDA,GAEAE,EAAGoF,kBAAkBsG,GAC7B,KAIL,EACX,CAEAlL,eAAexI,GAAI+S,EAAWrY,GAC1B,MAAM+B,EAAMqW,GAAOC,GAEb7M,SADW,MACHR,YAAYgO,GAAmB,aACvCpO,EAAcY,EAAGZ,YAAYoO,IAC7BC,QAAkBrO,EAAY5F,IAAIjD,GAMxC,aALM6I,EAAYkI,IAAI9S,EAAO+B,SACvByJ,EAAGG,KACJsN,GAAYA,EAASlB,MAAQ/X,EAAM+X,KACpCQ,GAAWF,EAAWrY,EAAM+X,KAEzB/X,CACX,CAEA8N,eAAeoL,GAAOb,GAClB,MAAMtW,EAAMqW,GAAOC,GAEb7M,SADW,MACHR,YAAYgO,GAAmB,mBACvCxN,EAAGZ,YAAYoO,IAAmB3S,OAAOtE,SACzCyJ,EAAGG,IACb,CAOAmC,eAAeqL,GAAOd,EAAWe,GAC7B,MAAMrX,EAAMqW,GAAOC,GAEb7M,SADW,MACHR,YAAYgO,GAAmB,aACvChL,EAAQxC,EAAGZ,YAAYoO,IACvBC,QAAkBjL,EAAMhJ,IAAIjD,GAC5B4K,EAAWyM,EAASH,GAW1B,YAViBxR,IAAbkF,QACMqB,EAAM3H,OAAOtE,SAGbiM,EAAM8E,IAAInG,EAAU5K,SAExByJ,EAAGG,MACLgB,GAAcsM,GAAYA,EAASlB,MAAQpL,EAASoL,KACpDQ,GAAWF,EAAW1L,EAASoL,KAE5BpL,CACX,CAsBAmB,eAAeuL,GAAqBC,GAChC,IAAIC,EACJ,MAAMC,QAA0BL,GAAOG,EAAcjB,WAAWoB,IAC5D,MAAMD,EAkBd,SAAyCC,GAKrC,OAAOC,GAJOD,GAAY,CACtB1B,IAAKN,KACLkC,mBAAoB,GAG5B,CAxBkCC,CAAgCH,GACpDI,EA+Bd,SAAwCP,EAAeE,GACnD,GAA6C,IAAzCA,EAAkBG,mBAA0D,CAC5E,IAAKG,UAAUC,OAGX,MAAO,CACHP,oBACAD,oBAHiC1Z,QAAQH,OAAO,GAAc4B,OAAO,iBAO7E,MAAM0Y,EAAkB,CACpBjC,IAAKyB,EAAkBzB,IACvB4B,mBAAoB,EACpBM,iBAAkBlR,KAAKD,OAErByQ,EAcdzL,eAAoCwL,EAAeE,GAC/C,IACI,MAAMU,QA1ZdpM,gBAAyC,UAAEuK,EAAS,yBAAE8B,IAA4B,IAAEpC,IAChF,MAAMqC,EAAWvE,GAAyBwC,GACpCgC,EAAUtD,GAAWsB,GAErBiC,EAAmBH,EAAyBvU,aAAa,CAC3DE,UAAU,IAEd,GAAIwU,EAAkB,CAClB,MAAMC,QAAyBD,EAAiBlG,sBAC5CmG,GACAF,EAAQG,OAAO,oBAAqBD,EAE5C,CACA,MAAME,EAAO,CACT1C,MACA2C,YAAa/E,GACb1C,MAAOoF,EAAUpF,MACjB0H,WAAYjF,IAEVrV,EAAU,CACZ4I,OAAQ,OACRoR,UACAI,KAAMvb,KAAKgW,UAAUuF,IAEnBzE,QAAiBmB,IAAmB,IAAMyD,MAAMR,EAAU/Z,KAChE,GAAI2V,EAAS6E,GAAI,CACb,MAAMC,QAAsB9E,EAASU,OAOrC,MANoC,CAChCqB,IAAK+C,EAAc/C,KAAOA,EAC1B4B,mBAAoB,EACpBoB,aAAcD,EAAcC,aAC5BC,UAAWjF,GAAiC+E,EAAcE,WAGlE,CAEI,YAAYzE,GAAqB,sBAAuBP,EAEhE,CAoXkDiF,CAA0B3B,EAAeE,GACnF,OAAOlU,GAAIgU,EAAcjB,UAAW6B,EACxC,CACA,MAAO5f,GAaH,MAZIsb,GAActb,IAAkC,MAA5BA,EAAE0G,WAAW2V,iBAG3BuC,GAAOI,EAAcjB,iBAIrB/S,GAAIgU,EAAcjB,UAAW,CAC/BN,IAAKyB,EAAkBzB,IACvB4B,mBAAoB,IAGtBrf,CACV,CACJ,CAlCoC4gB,CAAqB5B,EAAeU,GAChE,MAAO,CAAER,kBAAmBQ,EAAiBT,sBACjD,CACK,OAA6C,IAAzCC,EAAkBG,mBAChB,CACHH,oBACAD,oBAAqB4B,GAAyB7B,IAI3C,CAAEE,oBAEjB,CA3DiC4B,CAA+B9B,EAAeE,GAEvE,OADAD,EAAsBM,EAAiBN,oBAChCM,EAAiBL,iBAAiB,IAE7C,MA1PgB,KA0PZA,EAAkBzB,IAEX,CAAEyB,wBAAyBD,GAE/B,CACHC,oBACAD,sBAER,CAuEAzL,eAAeqN,GAAyB7B,GAIpC,IAAI+B,QAAcC,GAA0BhC,EAAcjB,WAC1D,KAAoC,IAA7BgD,EAAM1B,0BAEHtC,GAAM,KACZgE,QAAcC,GAA0BhC,EAAcjB,WAE1D,GAAiC,IAA7BgD,EAAM1B,mBAA0D,CAEhE,MAAM,kBAAEH,EAAiB,oBAAED,SAA8BF,GAAqBC,GAC9E,OAAIC,GAKOC,CAEf,CACA,OAAO6B,CACX,CASA,SAASC,GAA0BjD,GAC/B,OAAOc,GAAOd,GAAWoB,IACrB,IAAKA,EACD,MAAM,GAAcnY,OAAO,0BAE/B,OAAOoY,GAAqBD,EAAS,GAE7C,CACA,SAASC,GAAqB2B,GAC1B,OASiD,KADb7B,EARD6B,GAST1B,oBACtBH,EAAkBS,iBA7lBC,IA6lBuClR,KAAKD,MATxD,CACHiP,IAAKsD,EAAMtD,IACX4B,mBAAoB,GAGrB0B,EAEX,IAAwC7B,CADxC,CAsBA1L,eAAeyN,IAAyB,UAAElD,EAAS,yBAAE8B,GAA4BX,GAC7E,MAAMY,EAiCV,SAAsC/B,GAAW,IAAEN,IAC/C,MAAO,GAAGlC,GAAyBwC,MAAcN,uBACrD,CAnCqByD,CAA6BnD,EAAWmB,GACnDa,EA/hBV,SAA4BhC,GAAW,aAAE0C,IACrC,MAAMV,EAAUtD,GAAWsB,GAE3B,OADAgC,EAAQG,OAAO,gBAoBnB,SAAgCO,GAC5B,MAAO,GAAGpF,MAAyBoF,GACvC,CAtBoCU,CAAuBV,IAChDV,CACX,CA2hBoBqB,CAAmBrD,EAAWmB,GAExCc,EAAmBH,EAAyBvU,aAAa,CAC3DE,UAAU,IAEd,GAAIwU,EAAkB,CAClB,MAAMC,QAAyBD,EAAiBlG,sBAC5CmG,GACAF,EAAQG,OAAO,oBAAqBD,EAE5C,CACA,MAAME,EAAO,CACTkB,aAAc,CACVhB,WAAYjF,GACZzC,MAAOoF,EAAUpF,QAGnB5S,EAAU,CACZ4I,OAAQ,OACRoR,UACAI,KAAMvb,KAAKgW,UAAUuF,IAEnBzE,QAAiBmB,IAAmB,IAAMyD,MAAMR,EAAU/Z,KAChE,GAAI2V,EAAS6E,GAGT,OAD2B9E,SADCC,EAASU,QAKrC,YAAYH,GAAqB,sBAAuBP,EAEhE,CA2BAlI,eAAe8N,GAAiBtC,EAAeuC,GAAe,GAC1D,IAAIC,EACJ,MAAMT,QAAclC,GAAOG,EAAcjB,WAAWoB,IAChD,IAAKsC,GAAkBtC,GACnB,MAAM,GAAcnY,OAAO,kBAE/B,MAAM0a,EAAevC,EAASuB,UAC9B,IAAKa,IA+F2B,KADdb,EA9FoBgB,GA+FxB9F,gBAGtB,SAA4B8E,GACxB,MAAMlS,EAAMC,KAAKD,MACjB,OAAQA,EAAMkS,EAAU1E,cACpB0E,EAAU1E,aAAe0E,EAAU7E,UAAYrN,EApxBvB,IAqxBhC,CANSmT,CAAmBjB,IA9FhB,OAAOvB,EA4FnB,IAA0BuB,EA1Fb,GAAmC,IAA/BgB,EAAa9F,cAGlB,OADA4F,EAwBZhO,eAAyCwL,EAAeuC,GAIpD,IAAIR,QAAca,GAAuB5C,EAAcjB,WACvD,KAAyC,IAAlCgD,EAAML,UAAU9E,qBAEbmB,GAAM,KACZgE,QAAca,GAAuB5C,EAAcjB,WAEvD,MAAM2C,EAAYK,EAAML,UACxB,OAAgC,IAA5BA,EAAU9E,cAEH0F,GAAiBtC,EAAeuC,GAGhCb,CAEf,CA1C2BmB,CAA0B7C,EAAeuC,GACjDpC,EAEN,CAED,IAAKK,UAAUC,OACX,MAAM,GAAczY,OAAO,eAE/B,MAAM0Y,EA0FlB,SAA6CP,GACzC,MAAM2C,EAAsB,CACxBlG,cAAe,EACfmG,YAAatT,KAAKD,OAEtB,OAAO7H,OAAOmQ,OAAOnQ,OAAOmQ,OAAO,CAAC,EAAGqI,GAAW,CAAEuB,UAAWoB,GACnE,CAhGoCE,CAAoC7C,GAE5D,OADAqC,EAsDZhO,eAAwCwL,EAAeE,GACnD,IACI,MAAMwB,QAAkBO,GAAyBjC,EAAeE,GAC1D+C,EAA2Btb,OAAOmQ,OAAOnQ,OAAOmQ,OAAO,CAAC,EAAGoI,GAAoB,CAAEwB,cAEvF,aADM1V,GAAIgU,EAAcjB,UAAWkE,GAC5BvB,CACX,CACA,MAAO1gB,GACH,IAAIsb,GAActb,IACe,MAA5BA,EAAE0G,WAAW2V,YAAkD,MAA5Brc,EAAE0G,WAAW2V,WAKhD,CACD,MAAM4F,EAA2Btb,OAAOmQ,OAAOnQ,OAAOmQ,OAAO,CAAC,EAAGoI,GAAoB,CAAEwB,UAAW,CAAE9E,cAAe,WAC7G5Q,GAAIgU,EAAcjB,UAAWkE,EACvC,YALUrD,GAAOI,EAAcjB,WAM/B,MAAM/d,CACV,CACJ,CA1E2BkiB,CAAyBlD,EAAeU,GAChDA,CACX,KAKJ,OAHkB8B,QACNA,EACNT,EAAML,SAEhB,CAkCA,SAASkB,GAAuB7D,GAC5B,OAAOc,GAAOd,GAAWoB,IACrB,IAAKsC,GAAkBtC,GACnB,MAAM,GAAcnY,OAAO,kBAG/B,OAiDgC,KADH0Z,EAjDRvB,EAASuB,WAkDhB9E,eACd8E,EAAUqB,YApyBS,IAoyB0BtT,KAAKD,MAjDvC7H,OAAOmQ,OAAOnQ,OAAOmQ,OAAO,CAAC,EAAGqI,GAAW,CAAEuB,UAAW,CAAE9E,cAAe,KAE7EuD,EA6Cf,IAAqCuB,CA7Cd,GAEvB,CAsBA,SAASe,GAAkBvC,GACvB,YAA8B/R,IAAtB+R,GACqC,IAAzCA,EAAkBG,kBAC1B,CA0RA,SAAS8C,GAAqBC,GAC1B,OAAO,GAAcpb,OAAO,4BAAuE,CAC/Fob,aAER,CAkBA,MAAMC,GAAqB,gBA0BvBhM,GAAmB,IAAIjN,EAAUiZ,IAxBdlY,IACnB,MAAMiM,EAAMjM,EAAUoD,YAAY,OAAOjC,eAEnCyS,EApDV,SAA0B3H,GACtB,IAAKA,IAAQA,EAAI7K,QACb,MAAM4W,GAAqB,qBAE/B,IAAK/L,EAAIxS,KACL,MAAMue,GAAqB,YAG/B,MAAMG,EAAa,CACf,YACA,SACA,SAEJ,IAAK,MAAMC,KAAWD,EAClB,IAAKlM,EAAI7K,QAAQgX,GACb,MAAMJ,GAAqBI,GAGnC,MAAO,CACHjL,QAASlB,EAAIxS,KACb4X,UAAWpF,EAAI7K,QAAQiQ,UACvBkB,OAAQtG,EAAI7K,QAAQmR,OACpB/D,MAAOvC,EAAI7K,QAAQoN,MAE3B,CA4BsB6J,CAAiBpM,GAQnC,MAN0B,CACtBA,MACA2H,YACA8B,yBAJ6B,GAAazJ,EAAK,aAK/C7J,QAAS,IAAMhH,QAAQF,UAEH,GAa4C,WACpEgR,GAAmB,IAAIjN,EA1BS,0BAcXe,IACrB,MAEM6U,EAAgB,GAFV7U,EAAUoD,YAAY,OAAOjC,eAED+W,IAAoB/W,eAK5D,MAJ8B,CAC1BmX,MAAO,IAtRfjP,eAAqBwL,GACjB,MAAM0D,EAAoB1D,GACpB,kBAAEE,EAAiB,oBAAED,SAA8BF,GAAqB2D,GAS9E,OARIzD,EACAA,EAAoBtZ,MAAMlB,QAAQC,OAKlC4c,GAAiBoB,GAAmB/c,MAAMlB,QAAQC,OAE/Cwa,EAAkBzB,GAC7B,CA0QqBgF,CAAMzD,GACnB2D,SAAWpB,GAjPnB/N,eAAwBwL,EAAeuC,GAAe,GAClD,MAAMmB,EAAoB1D,EAK1B,aAEJxL,eAAgDwL,GAC5C,MAAM,oBAAEC,SAA8BF,GAAqBC,GACvDC,SAEMA,CAEd,CAZU2D,CAAiCF,UAGfpB,GAAiBoB,EAAmBnB,IAC3C5F,KACrB,CA0OoCgH,CAAS3D,EAAeuC,GAE5B,GAImD,YAUnF5J,GAAgB,GAAM,IAEtBA,GAAgB,GAAM,GAAS,WCtmC/B,MAAMkL,GAAiB,YAMjBC,GAAW,2CAkBX,GAAS,IAAIlU,EAAO,uBA8CpB,GAAgB,IAAI7H,EAAa,YAAa,YA5BrC,CACX,iBAAwD,0IAGxD,sBAAkE,mRAIlE,+BAAoF,iJAGpF,+BAAoF,wEACpF,4BAA8E,oMAG9E,wBAAsE,oMAGtE,iBAAwD,yKAExD,sBAAkE,kEAClE,aAAgD,8HAEhD,YAA8C,4HAE9C,eAAoD,kCACpD,wBAAsE,iEAuB1E,SAASgc,GAAgCC,GACrC,IAAKA,EAAIC,WAAWH,IAAW,CAC3B,MAAMI,EAAM,GAAclc,OAAO,wBAAoE,CACjGmc,QAASH,IAGb,OADA,GAAOzT,KAAK2T,EAAI3c,SACT,EACX,CACA,OAAOyc,CACX,CAOA,SAASI,GAAkBC,GACvB,OAAO9d,QAAQ4G,IAAIkX,EAAShX,KAAI/G,GAAWA,EAAQK,OAAM3F,GAAKA,MAClE,CA4SA,MAAMsjB,GAAmB,IAfzB,MACI,WAAA7f,CAAY8f,EAAmB,CAAC,EAAG7a,EALV,KAMrB5I,KAAKyjB,iBAAmBA,EACxBzjB,KAAK4I,eAAiBA,CAC1B,CACA,mBAAA8a,CAAoB7K,GAChB,OAAO7Y,KAAKyjB,iBAAiB5K,EACjC,CACA,mBAAA8K,CAAoB9K,EAAO+K,GACvB5jB,KAAKyjB,iBAAiB5K,GAAS+K,CACnC,CACA,sBAAAC,CAAuBhL,UACZ7Y,KAAKyjB,iBAAiB5K,EACjC,GAOJ,SAAS,GAAW+D,GAChB,OAAO,IAAIC,QAAQ,CACfC,OAAQ,mBACR,iBAAkBF,GAE1B,CAmCAlJ,eAAeoQ,GAA4BxN,EAE3CyN,EAAYP,GAAkBQ,GAC1B,MAAM,MAAEnL,EAAK,OAAE+D,EAAM,cAAEqH,GAAkB3N,EAAI7K,QAC7C,IAAKoN,EACD,MAAM,GAAc3R,OAAO,aAE/B,IAAK0V,EAAQ,CACT,GAAIqH,EACA,MAAO,CACHA,gBACApL,SAGR,MAAM,GAAc3R,OAAO,aAC/B,CACA,MAAMuc,EAAmBM,EAAUL,oBAAoB7K,IAAU,CAC7DlQ,aAAc,EACdub,sBAAuBvV,KAAKD,OAE1ByV,EAAS,IAAIC,GAKnB,OAJAjH,YAAWzJ,UAEPyQ,EAAOE,OAAO,QACGhX,IAAlB2W,EAA8BA,EA1dR,KA2dlBM,GAAmC,CAAEzL,QAAO+D,SAAQqH,iBAAiBR,EAAkBU,EAAQJ,EAC1G,CAOArQ,eAAe4Q,GAAmCC,GAAW,sBAAEL,EAAqB,aAAEvb,GAAgBwb,EAAQJ,EAAYP,IAEtH,IAAIre,EACJ,MAAM,MAAE0T,EAAK,cAAEoL,GAAkBM,EAIjC,UA0DJ,SAA6BJ,EAAQD,GACjC,OAAO,IAAIze,SAAQ,CAACF,EAASD,KAEzB,MAAMkf,EAAgBzb,KAAK0b,IAAIP,EAAwBvV,KAAKD,MAAO,GAC7DgW,EAAUvH,WAAW5X,EAASif,GAEpCL,EAAOvS,kBAAiB,KACpB+S,aAAaD,GAEbpf,EAAO,GAAc4B,OAAO,iBAAsD,CAC9Egd,0BACD,GACL,GAEV,CAvEcU,CAAoBT,EAAQD,EACtC,CACA,MAAOhkB,GACH,GAAI+jB,EAIA,OAHA,GAAOxU,KACH,6GAAuCwU,0EACkC/jB,aAA6B,EAASA,EAAEuG,YAC9G,CAAEoS,QAAOoL,iBAEpB,MAAM/jB,CACV,CACA,IACI,MAAM0b,QAnFdlI,eAAkC6Q,GAC9B,IAAIpf,EACJ,MAAM,MAAE0T,EAAK,OAAE+D,GAAW2H,EACpBte,EAAU,CACZ4I,OAAQ,MACRoR,QAAS,GAAWrD,IAElBiI,EA1aiB,6EA0aW3gB,QAAQ,WAAY2U,GAChD+C,QAAiB4E,MAAMqE,EAAQ5e,GACrC,GAAwB,MAApB2V,EAASc,QAAsC,MAApBd,EAASc,OAAgB,CACpD,IAAIoI,EAAe,GACnB,IAEI,MAAMC,QAAsBnJ,EAASU,QACH,QAA7BnX,EAAK4f,EAAangB,aAA0B,IAAPO,OAAgB,EAASA,EAAGsB,WAClEqe,EAAeC,EAAangB,MAAM6B,QAE1C,CACA,MAAOue,GAAY,CACnB,MAAM,GAAc9d,OAAO,sBAAgE,CACvF+d,WAAYrJ,EAASc,OACrBwI,gBAAiBJ,GAEzB,CACA,OAAOlJ,EAASU,MACpB,CA0D+B6I,CAAmBZ,GAG1C,OADAR,EAAUF,uBAAuBhL,GAC1B+C,CACX,CACA,MAAO1b,GACH,MAAM0E,EAAQ1E,EACd,IAwDR,SAA0BA,GACtB,KAAMA,aAAawG,GAAmBxG,EAAE0G,YACpC,OAAO,EAGX,MAAMqe,EAAahJ,OAAO/b,EAAE0G,WAAuB,YACnD,OAAuB,MAAfqe,GACW,MAAfA,GACe,MAAfA,GACe,MAAfA,CACR,CAlEaG,CAAiBxgB,GAAQ,CAE1B,GADAmf,EAAUF,uBAAuBhL,GAC7BoL,EAIA,OAHA,GAAOxU,KACH,0GAAuCwU,0EACkCrf,aAAqC,EAASA,EAAM6B,YAC1H,CAAEoS,QAAOoL,iBAGhB,MAAM/jB,CAEd,CACA,MAAMskB,EAAqJ,MAArIvI,OAAiF,QAAzE9W,EAAKP,aAAqC,EAASA,EAAMgC,kBAA+B,IAAPzB,OAAgB,EAASA,EAAG8f,YACrIvc,EAAuBC,EAAcob,EAAUnb,eA7InC,IA8IZF,EAAuBC,EAAcob,EAAUnb,gBAE/C6a,EAAmB,CACrBS,sBAAuBvV,KAAKD,MAAQ8V,EACpC7b,aAAcA,EAAe,GAKjC,OAFAob,EAAUJ,oBAAoB9K,EAAO4K,GACrC,GAAOlU,MAAM,iCAAiCiV,YACvCF,GAAmCC,EAAWd,EAAkBU,EAAQJ,EACnF,CACJ,CAkDA,MAAMK,GACF,WAAAzgB,GACI3D,KAAKqlB,UAAY,EACrB,CACA,gBAAAzT,CAAiB0T,GACbtlB,KAAKqlB,UAAU7iB,KAAK8iB,EACxB,CACA,KAAAjB,GACIrkB,KAAKqlB,UAAUE,SAAQD,GAAYA,KACvC,EAsBJ,IAAIE,GAiHAC,GAqEJ/R,eAAegS,GAAqBpP,EAAKqP,EAA2BC,EAAsB1G,EAAe2G,EAAUC,EAAera,GAC9H,IAAItG,EACJ,MAAM4gB,EAAuBjC,GAA4BxN,GAEzDyP,EACK1T,MAAKjN,IACNwgB,EAAqBxgB,EAAO6e,eAAiB7e,EAAOyT,MAChDvC,EAAI7K,QAAQwY,eACZ7e,EAAO6e,gBAAkB3N,EAAI7K,QAAQwY,eACrC,GAAOxU,KAAK,oDAAoD6G,EAAI7K,QAAQwY,6EACT7e,EAAO6e,wLAI9E,IAECpe,OAAM3F,GAAK,GAAO0E,MAAM1E,KAE7BylB,EAA0BnjB,KAAKujB,GAC/B,MAAMC,EApDVtS,iBACI,IAAK,IAID,OAHA,GAAOjE,KAAK,GAAcvI,OAAO,wBAAoE,CACjG+e,UAAW,oDACZxf,UACI,EAGP,UACU,GACV,CACA,MAAOvG,GAIH,OAHA,GAAOuP,KAAK,GAAcvI,OAAO,wBAAoE,CACjG+e,UAAW/lB,aAA6B,EAASA,EAAEgmB,aACpDzf,UACI,CACX,CAEJ,OAAO,CACX,CAiCuB0f,GAAoB9T,MAAK+T,GACpCA,EACOlH,EAAcyD,aAGrB,KAGD0D,EAAe1I,SAAalY,QAAQ4G,IAAI,CAC3C0Z,EACAC,KA/dR,SAA8BF,GAC1B,MAAMQ,EAAanmB,OAAOoE,SAASgiB,qBAAqB,UACxD,IAAK,MAAMC,KAAO3f,OAAOuF,OAAOka,GAC5B,GAAIE,EAAIC,KACJD,EAAIC,IAAIpe,SAAS2a,KACjBwD,EAAIC,IAAIpe,SAASyd,GACjB,OAAOU,EAGf,OAAO,IACX,EAydSE,CAAqBZ,IAjsB9B,SAAyBA,EAAe7B,GACpC,MAAM0C,EAdV,SAAkCC,EAAYC,GAG1C,IAAIF,EAIJ,OAHIxmB,OAAO2mB,eACPH,EAAqBxmB,OAAO2mB,aAAaC,aASO,yBATkBF,IAE/DF,CACX,CAM+BK,CAAyB,EAA0B,CAC1EC,gBAAiBhE,KAEfiE,EAAS3iB,SAAS4iB,cAAc,UAGhCC,EAAgB,GAAGpE,QAAc8C,QAAoB7B,IAC3DiD,EAAOT,IAAME,EACPA,aAA+D,EAASA,EAAmBM,gBAAgBG,GAC3GA,EACNF,EAAOxT,OAAQ,EACfnP,SAAS8iB,KAAKC,YAAYJ,EAC9B,CAqrBQK,CAAgBzB,EAAeO,EAAcpC,eAG7CwB,KACAI,EAAS,UAAqC,UAAWJ,IAnG7DA,QAoG8BpY,GAM9BwY,EAAS,KAAM,IAAIlX,MAGnB,MAAM6Y,EAA+F,QAA3EriB,EAAKsG,aAAyC,EAASA,EAAQrG,cAA2B,IAAPD,EAAgBA,EAAK,CAAC,EAiBnI,OAfAqiB,EAA2B,OAAI,WAC/BA,EAAiBzI,QAAS,EACf,MAAPpB,IACA6J,EAA2B,YAAI7J,GAMnCkI,EAAS,SAAmCQ,EAAcpC,cAAeuD,GAErEhC,KACAK,EAAS,MAA6BL,IAlH1CA,QAmHsCnY,GAE/BgZ,EAAcpC,aACzB,CAqBA,MAAMwD,GACF,WAAA9jB,CAAY2S,GACRtW,KAAKsW,IAAMA,CACf,CACA,OAAA7J,GAEI,cADOib,GAA0B1nB,KAAKsW,IAAI7K,QAAQoN,OAC3CpT,QAAQF,SACnB,EAOJ,IAAImiB,GAA4B,CAAC,EAM7B/B,GAA4B,GAOhC,MAAMC,GAAuB,CAAC,EAI9B,IASI+B,GAKAC,GAdA9B,GAAgB,YAmBhB+B,IAAiB,EAmDrB,SAASC,GAAQxR,EAAK4I,EAAezT,IAtBrC,WACI,MAAMsc,EAAwB,GAO9B,GPxMJ,WACI,MAAMC,EAA4B,iBAAXC,OACjBA,OAAOD,QACY,iBAAZE,QACHA,QAAQF,aACR3a,EACV,MAA0B,iBAAZ2a,QAAuC3a,IAAf2a,EAAQG,EAClD,CO2LQ,IACAJ,EAAsBvlB,KAAK,4CPnGN,oBAAdkd,WAA8BA,UAAU0I,eOsG/CL,EAAsBvlB,KAAK,8BAE3BulB,EAAsBtnB,OAAS,EAAG,CAClC,MAAM4nB,EAAUN,EACXxb,KAAI,CAAC9F,EAASoN,IAAU,IAAIA,EAAQ,MAAMpN,MAC1ChE,KAAK,KACJ2gB,EAAM,GAAclc,OAAO,4BAA4E,CACzG+e,UAAWoC,IAEf,GAAO5Y,KAAK2T,EAAI3c,QACpB,CACJ,CAMI6hB,GACA,MAAMzP,EAAQvC,EAAI7K,QAAQoN,MAC1B,IAAKA,EACD,MAAM,GAAc3R,OAAO,aAE/B,IAAKoP,EAAI7K,QAAQmR,OAAQ,CACrB,IAAItG,EAAI7K,QAAQwY,cAMZ,MAAM,GAAc/c,OAAO,cAL3B,GAAOuI,KACH,yKAA6E6G,EAAI7K,QAAQwY,oFAMrG,CACA,GAAwC,MAApCyD,GAA0B7O,GAC1B,MAAM,GAAc3R,OAAO,iBAAsD,CAC7EihB,GAAItP,IAGZ,IAAKgP,GAAgB,EA/1BzB,SAA8B/B,GAE1B,IAAIyC,EAAY,GACZ9mB,MAAMC,QAAQvB,OAAO2lB,IACrByC,EAAYpoB,OAAO2lB,GAGnB3lB,OAAO2lB,GAAiByC,CAGhC,CAw1BQC,CAAqB1C,IACrB,MAAM,YAAE2C,EAAW,SAAE5C,GA7qB7B,SAA0B6B,EAA2B/B,EAA2BC,EAAsBE,EAAe4C,GAEjH,IAAI7C,EAAW,YAAa8C,GAExBxoB,OAAO2lB,GAAetjB,KAAKqB,UAC/B,EAQA,OANI1D,OAAOuoB,IAC6B,mBAA7BvoB,OAAOuoB,KAEd7C,EAAW1lB,OAAOuoB,IAEtBvoB,OAAOuoB,GAnFX,SAAkB7C,EAKlB6B,EAKA/B,EAMAC,GA0CI,OAnCAlS,eAA2BkV,KAAYpa,GACnC,IAEI,GAAgB,UAAZoa,EAA6C,CAC7C,MAAO3E,EAAe4E,GAAcra,QAnFpDkF,eAA2BmS,EAAU6B,EAA2B/B,EAA2B1B,EAAe4E,GACtG,IACI,IAAIC,EAAkC,GAGtC,GAAID,GAAcA,EAAoB,QAAG,CACrC,IAAIE,EAAeF,EAAoB,QAElCpnB,MAAMC,QAAQqnB,KACfA,EAAe,CAACA,IAIpB,MAAMC,QAA6B1F,GAAkBqC,GACrD,IAAK,MAAMsD,KAAYF,EAAc,CAEjC,MAAMG,EAAcF,EAAqBzO,MAAKnV,GAAUA,EAAO6e,gBAAkBgF,IAC3EE,EAAwBD,GAAexB,EAA0BwB,EAAYrQ,OACnF,IAAIsQ,EAGC,CAIDL,EAAkC,GAClC,KACJ,CARIA,EAAgCtmB,KAAK2mB,EAS7C,CACJ,CAI+C,IAA3CL,EAAgCroB,SAEhCqoB,EAAkCjiB,OAAOuF,OAAOsb,UAI9CjiB,QAAQ4G,IAAIyc,GAElBjD,EAAS,QAAiC5B,EAAe4E,GAAc,CAAC,EAC5E,CACA,MAAO3oB,GACH,GAAO0E,MAAM1E,EACjB,CACJ,CAuCsBkpB,CAAYvD,EAAU6B,EAA2B/B,EAA2B1B,EAAe4E,EACrG,MACK,GAAgB,WAAZD,EAA+C,CACpD,MAAO3E,EAAe4E,GAAcra,QA1HpDkF,eAA4BmS,EAAU6B,EAA2B/B,EAA2BC,EAAsB3B,EAAe4E,GAG7H,MAAMQ,EAAqBzD,EAAqB3B,GAChD,IACI,GAAIoF,QACM3B,EAA0B2B,OAE/B,CAKD,MACMH,SAD6B5F,GAAkBqC,IACZpL,MAAKnV,GAAUA,EAAO6e,gBAAkBA,IAC7EiF,SACMxB,EAA0BwB,EAAYrQ,MAEpD,CACJ,CACA,MAAO3Y,GACH,GAAO0E,MAAM1E,EACjB,CACA2lB,EAAS,SAAmC5B,EAAe4E,EAC/D,CAoGsBS,CAAazD,EAAU6B,EAA2B/B,EAA2BC,EAAsB3B,EAAe4E,EAC5H,MACK,GAAgB,YAAZD,EAAiD,CACtD,MAAOW,EAAeV,GAAcra,EAEpCqX,EAAS,UAAqC0D,EAAeV,EACjE,MACK,GAAgB,QAAZD,EAAyC,CAC9C,MAAO3E,EAAeuF,EAAW7jB,GAAY6I,EAC7CqX,EAAS,MAA6B5B,EAAeuF,EAAW7jB,EACpE,MACK,GAAgB,QAAZijB,EAAyC,CAC9C,MAAOa,GAAgBjb,EAEvBqX,EAAS,MAA6B4D,EAC1C,MAEI5D,EAAS+C,KAAYpa,EAE7B,CACA,MAAOtO,GACH,GAAO0E,MAAM1E,EACjB,CACJ,CAEJ,CAwB+BwpB,CAAS7D,EAAU6B,EAA2B/B,EAA2BC,GAC7F,CACHC,WACA4C,YAAatoB,OAAOuoB,GAE5B,CA4pB0CiB,CAAiBjC,GAA2B/B,GAA2BC,GAAsBE,GA3FxH,QA4FP8B,GAAsBa,EACtBd,GAAmB9B,EACnBgC,IAAiB,CACrB,CAKA,OAFAH,GAA0B7O,GAAS6M,GAAqBpP,EAAKqP,GAA2BC,GAAsB1G,EAAeyI,GAAkB7B,GAAera,GACpI,IAAIgc,GAAiBnR,EAEnD,CAqLA,MAAM,GAAO,sBACP,GAAU,iQC/sChBsT,GAAA,kBAAA1pB,CAAA,MAAA2pB,EAAA3pB,EAAA,GAAA4pB,EAAAjjB,OAAAE,UAAAgjB,EAAAD,EAAAE,eAAAC,EAAApjB,OAAAqjB,gBAAA,SAAAL,EAAA3pB,EAAA4pB,GAAAD,EAAA3pB,GAAA4pB,EAAAlkB,KAAA,EAAApF,EAAA,mBAAA2pB,OAAAA,OAAA,GAAApiB,EAAAvH,EAAA4pB,UAAA,aAAA1pB,EAAAF,EAAA6pB,eAAA,kBAAAlnB,EAAA3C,EAAA8pB,aAAA,yBAAAC,EAAAV,EAAA3pB,EAAA4pB,GAAA,OAAAjjB,OAAAqjB,eAAAL,EAAA3pB,EAAA,CAAA0F,MAAAkkB,EAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAb,EAAA3pB,EAAA,KAAAqqB,EAAA,aAAAV,GAAAU,EAAA,SAAAV,EAAA3pB,EAAA4pB,GAAA,OAAAD,EAAA3pB,GAAA4pB,CAAA,WAAAa,EAAAd,EAAA3pB,EAAA4pB,EAAAC,GAAA,IAAAvpB,EAAAN,GAAAA,EAAA6G,qBAAA6jB,EAAA1qB,EAAA0qB,EAAA7iB,EAAAlB,OAAAK,OAAA1G,EAAAuG,WAAArG,EAAA,IAAAmqB,EAAAd,GAAA,WAAAE,EAAAliB,EAAA,WAAAnC,MAAAklB,EAAAjB,EAAAC,EAAAppB,KAAAqH,CAAA,UAAAgjB,EAAAlB,EAAA3pB,EAAA4pB,GAAA,WAAAtgB,KAAA,SAAAwhB,IAAAnB,EAAAxY,KAAAnR,EAAA4pB,GAAA,OAAAD,GAAA,OAAArgB,KAAA,QAAAwhB,IAAAnB,EAAA,EAAA3pB,EAAAyqB,KAAAA,EAAA,IAAAM,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAT,IAAA,UAAAU,IAAA,UAAAC,IAAA,KAAAhrB,EAAA,GAAAgqB,EAAAhqB,EAAAwH,GAAA,8BAAAyjB,EAAA3kB,OAAA4kB,eAAAC,EAAAF,GAAAA,EAAAA,EAAApf,EAAA,MAAAsf,GAAAA,IAAA5B,GAAAC,EAAA1Y,KAAAqa,EAAA3jB,KAAAxH,EAAAmrB,GAAA,IAAA5rB,EAAAyrB,EAAAxkB,UAAA6jB,EAAA7jB,UAAAF,OAAAK,OAAA3G,GAAA,SAAAorB,EAAA9B,GAAA,0BAAAtE,SAAA,SAAArlB,GAAAqqB,EAAAV,EAAA3pB,GAAA,SAAA2pB,GAAA,YAAA+B,QAAA1rB,EAAA2pB,EAAA,gBAAAgC,EAAAhC,EAAA3pB,GAAA,SAAA4rB,EAAAhC,EAAAG,EAAAzpB,EAAAuH,GAAA,IAAArH,EAAAqqB,EAAAlB,EAAAC,GAAAD,EAAAI,GAAA,aAAAvpB,EAAA8I,KAAA,KAAArG,EAAAzC,EAAAsqB,IAAAC,EAAA9nB,EAAAyC,MAAA,OAAAqlB,GAAA,UAAAc,GAAAd,IAAAlB,EAAA1Y,KAAA4Z,EAAA,WAAA/qB,EAAAqF,QAAA0lB,EAAAe,SAAA3Z,MAAA,SAAAwX,GAAAiC,EAAA,OAAAjC,EAAArpB,EAAAuH,EAAA,aAAA8hB,GAAAiC,EAAA,QAAAjC,EAAArpB,EAAAuH,EAAA,IAAA7H,EAAAqF,QAAA0lB,GAAA5Y,MAAA,SAAAwX,GAAA1mB,EAAAyC,MAAAikB,EAAArpB,EAAA2C,EAAA,aAAA0mB,GAAA,OAAAiC,EAAA,QAAAjC,EAAArpB,EAAAuH,EAAA,IAAAA,EAAArH,EAAAsqB,IAAA,KAAAlB,EAAAG,EAAA,gBAAArkB,MAAA,SAAAikB,EAAAE,GAAA,SAAAkC,IAAA,WAAA/rB,GAAA,SAAAA,EAAA4pB,GAAAgC,EAAAjC,EAAAE,EAAA7pB,EAAA4pB,EAAA,WAAAA,EAAAA,EAAAA,EAAAzX,KAAA4Z,EAAAA,GAAAA,GAAA,aAAAnB,EAAA5qB,EAAA4pB,EAAAC,GAAA,IAAAE,EAAAgB,EAAA,gBAAAzqB,EAAAuH,GAAA,GAAAkiB,IAAAkB,EAAA,MAAAxpB,MAAA,mCAAAsoB,IAAAmB,EAAA,cAAA5qB,EAAA,MAAAuH,EAAA,OAAAnC,MAAAikB,EAAAtY,MAAA,OAAAwY,EAAAlb,OAAArO,EAAAupB,EAAAiB,IAAAjjB,IAAA,KAAArH,EAAAqpB,EAAAmC,SAAA,GAAAxrB,EAAA,KAAAyC,EAAAgpB,EAAAzrB,EAAAqpB,GAAA,GAAA5mB,EAAA,IAAAA,IAAAkoB,EAAA,gBAAAloB,CAAA,cAAA4mB,EAAAlb,OAAAkb,EAAAqC,KAAArC,EAAAsC,MAAAtC,EAAAiB,SAAA,aAAAjB,EAAAlb,OAAA,IAAAob,IAAAgB,EAAA,MAAAhB,EAAAmB,EAAArB,EAAAiB,IAAAjB,EAAAuC,kBAAAvC,EAAAiB,IAAA,gBAAAjB,EAAAlb,QAAAkb,EAAAwC,OAAA,SAAAxC,EAAAiB,KAAAf,EAAAkB,EAAA,IAAA5qB,EAAAwqB,EAAA7qB,EAAA4pB,EAAAC,GAAA,cAAAxpB,EAAAiJ,KAAA,IAAAygB,EAAAF,EAAAxY,KAAA6Z,EAAAF,EAAA3qB,EAAAyqB,MAAAK,EAAA,gBAAAzlB,MAAArF,EAAAyqB,IAAAzZ,KAAAwY,EAAAxY,KAAA,WAAAhR,EAAAiJ,OAAAygB,EAAAmB,EAAArB,EAAAlb,OAAA,QAAAkb,EAAAiB,IAAAzqB,EAAAyqB,IAAA,YAAAmB,EAAAjsB,EAAA4pB,GAAA,IAAAC,EAAAD,EAAAjb,OAAAob,EAAA/pB,EAAAkqB,SAAAL,GAAA,GAAAE,IAAAJ,EAAA,OAAAC,EAAAoC,SAAA,eAAAnC,GAAA7pB,EAAAkqB,SAAA,SAAAN,EAAAjb,OAAA,SAAAib,EAAAkB,IAAAnB,EAAAsC,EAAAjsB,EAAA4pB,GAAA,UAAAA,EAAAjb,SAAA,WAAAkb,IAAAD,EAAAjb,OAAA,QAAAib,EAAAkB,IAAA,IAAA7b,UAAA,oCAAA4a,EAAA,aAAAsB,EAAA,IAAA7qB,EAAAuqB,EAAAd,EAAA/pB,EAAAkqB,SAAAN,EAAAkB,KAAA,aAAAxqB,EAAAgJ,KAAA,OAAAsgB,EAAAjb,OAAA,QAAAib,EAAAkB,IAAAxqB,EAAAwqB,IAAAlB,EAAAoC,SAAA,KAAAb,EAAA,IAAAtjB,EAAAvH,EAAAwqB,IAAA,OAAAjjB,EAAAA,EAAAwJ,MAAAuY,EAAA5pB,EAAAssB,YAAAzkB,EAAAnC,MAAAkkB,EAAA2C,KAAAvsB,EAAAwsB,QAAA,WAAA5C,EAAAjb,SAAAib,EAAAjb,OAAA,OAAAib,EAAAkB,IAAAnB,GAAAC,EAAAoC,SAAA,KAAAb,GAAAtjB,GAAA+hB,EAAAjb,OAAA,QAAAib,EAAAkB,IAAA,IAAA7b,UAAA,oCAAA2a,EAAAoC,SAAA,KAAAb,EAAA,UAAAsB,EAAA9C,GAAA,IAAA3pB,EAAA,CAAA0sB,OAAA/C,EAAA,SAAAA,IAAA3pB,EAAA2sB,SAAAhD,EAAA,SAAAA,IAAA3pB,EAAA4sB,WAAAjD,EAAA,GAAA3pB,EAAA6sB,SAAAlD,EAAA,SAAAmD,WAAAxqB,KAAAtC,EAAA,UAAA+sB,EAAApD,GAAA,IAAA3pB,EAAA2pB,EAAAqD,YAAA,GAAAhtB,EAAAsJ,KAAA,gBAAAtJ,EAAA8qB,IAAAnB,EAAAqD,WAAAhtB,CAAA,UAAA2qB,EAAAhB,GAAA,KAAAmD,WAAA,EAAAJ,OAAA,SAAA/C,EAAAtE,QAAAoH,EAAA,WAAAQ,OAAA,YAAA/gB,EAAAlM,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAA4pB,EAAA5pB,EAAA6H,GAAA,GAAA+hB,EAAA,OAAAA,EAAAzY,KAAAnR,GAAA,sBAAAA,EAAAusB,KAAA,OAAAvsB,EAAA,IAAAktB,MAAAltB,EAAAO,QAAA,KAAAwpB,GAAA,EAAAzpB,EAAA,SAAAisB,IAAA,OAAAxC,EAAA/pB,EAAAO,QAAA,GAAAspB,EAAA1Y,KAAAnR,EAAA+pB,GAAA,OAAAwC,EAAA7mB,MAAA1F,EAAA+pB,GAAAwC,EAAAlb,MAAA,EAAAkb,EAAA,OAAAA,EAAA7mB,MAAAikB,EAAA4C,EAAAlb,MAAA,EAAAkb,CAAA,SAAAjsB,EAAAisB,KAAAjsB,CAAA,YAAA2O,UAAA4c,GAAA7rB,GAAA,2BAAAorB,EAAAvkB,UAAAwkB,EAAAtB,EAAAnqB,EAAA,eAAA8F,MAAA2lB,EAAAd,cAAA,IAAAR,EAAAsB,EAAA,eAAA3lB,MAAA0lB,EAAAb,cAAA,IAAAa,EAAA+B,YAAA9C,EAAAgB,EAAApoB,EAAA,qBAAAjD,EAAAotB,oBAAA,SAAAzD,GAAA,IAAA3pB,EAAA,mBAAA2pB,GAAAA,EAAAlmB,YAAA,QAAAzD,IAAAA,IAAAorB,GAAA,uBAAAprB,EAAAmtB,aAAAntB,EAAA4D,MAAA,EAAA5D,EAAAqtB,KAAA,SAAA1D,GAAA,OAAAhjB,OAAAC,eAAAD,OAAAC,eAAA+iB,EAAA0B,IAAA1B,EAAA2D,UAAAjC,EAAAhB,EAAAV,EAAA1mB,EAAA,sBAAA0mB,EAAA9iB,UAAAF,OAAAK,OAAApH,GAAA+pB,CAAA,EAAA3pB,EAAAutB,MAAA,SAAA5D,GAAA,OAAAmC,QAAAnC,EAAA,EAAA8B,EAAAE,EAAA9kB,WAAAwjB,EAAAsB,EAAA9kB,UAAArG,GAAA,0BAAAR,EAAA2rB,cAAAA,EAAA3rB,EAAAwT,MAAA,SAAAmW,EAAAC,EAAAC,EAAAE,EAAAzpB,QAAA,IAAAA,IAAAA,EAAAiF,SAAA,IAAAsC,EAAA,IAAA8jB,EAAAlB,EAAAd,EAAAC,EAAAC,EAAAE,GAAAzpB,GAAA,OAAAN,EAAAotB,oBAAAxD,GAAA/hB,EAAAA,EAAA0kB,OAAApa,MAAA,SAAAwX,GAAA,OAAAA,EAAAtY,KAAAsY,EAAAjkB,MAAAmC,EAAA0kB,MAAA,KAAAd,EAAA7rB,GAAAyqB,EAAAzqB,EAAAqD,EAAA,aAAAonB,EAAAzqB,EAAAiI,GAAA,0BAAAwiB,EAAAzqB,EAAA,qDAAAI,EAAAgI,KAAA,SAAA2hB,GAAA,IAAA3pB,EAAA2G,OAAAgjB,GAAAC,EAAA,WAAAC,KAAA7pB,EAAA4pB,EAAAtnB,KAAAunB,GAAA,OAAAD,EAAA4D,UAAA,SAAAjB,IAAA,KAAA3C,EAAArpB,QAAA,KAAAopB,EAAAC,EAAAnP,MAAA,GAAAkP,KAAA3pB,EAAA,OAAAusB,EAAA7mB,MAAAikB,EAAA4C,EAAAlb,MAAA,EAAAkb,CAAA,QAAAA,EAAAlb,MAAA,EAAAkb,CAAA,GAAAvsB,EAAAkM,OAAAA,EAAAye,EAAA9jB,UAAA,CAAApD,YAAAknB,EAAAsC,MAAA,SAAAjtB,GAAA,QAAAytB,KAAA,OAAAlB,KAAA,OAAAL,KAAA,KAAAC,MAAAxC,EAAA,KAAAtY,MAAA,OAAA2a,SAAA,UAAArd,OAAA,YAAAmc,IAAAnB,EAAA,KAAAmD,WAAAzH,QAAA0H,IAAA/sB,EAAA,QAAA4pB,KAAA,WAAAA,EAAAtmB,OAAA,IAAAumB,EAAA1Y,KAAA,KAAAyY,KAAAsD,OAAAtD,EAAAzP,MAAA,WAAAyP,GAAAD,EAAA,EAAA+D,KAAA,gBAAArc,MAAA,MAAAsY,EAAA,KAAAmD,WAAA,GAAAE,WAAA,aAAArD,EAAArgB,KAAA,MAAAqgB,EAAAmB,IAAA,YAAA6C,IAAA,EAAAvB,kBAAA,SAAApsB,GAAA,QAAAqR,KAAA,MAAArR,EAAA,IAAA4pB,EAAA,cAAAgE,EAAA/D,EAAAE,GAAA,OAAAliB,EAAAyB,KAAA,QAAAzB,EAAAijB,IAAA9qB,EAAA4pB,EAAA2C,KAAA1C,EAAAE,IAAAH,EAAAjb,OAAA,OAAAib,EAAAkB,IAAAnB,KAAAI,CAAA,SAAAA,EAAA,KAAA+C,WAAAvsB,OAAA,EAAAwpB,GAAA,IAAAA,EAAA,KAAAzpB,EAAA,KAAAwsB,WAAA/C,GAAAliB,EAAAvH,EAAA0sB,WAAA,YAAA1sB,EAAAosB,OAAA,OAAAkB,EAAA,UAAAttB,EAAAosB,QAAA,KAAAe,KAAA,KAAAjtB,EAAAqpB,EAAA1Y,KAAA7Q,EAAA,YAAA2C,EAAA4mB,EAAA1Y,KAAA7Q,EAAA,iBAAAE,GAAAyC,EAAA,SAAAwqB,KAAAntB,EAAAqsB,SAAA,OAAAiB,EAAAttB,EAAAqsB,UAAA,WAAAc,KAAAntB,EAAAssB,WAAA,OAAAgB,EAAAttB,EAAAssB,WAAA,SAAApsB,GAAA,QAAAitB,KAAAntB,EAAAqsB,SAAA,OAAAiB,EAAAttB,EAAAqsB,UAAA,YAAA1pB,EAAA,MAAAxB,MAAA,kDAAAgsB,KAAAntB,EAAAssB,WAAA,OAAAgB,EAAAttB,EAAAssB,WAAA,KAAAP,OAAA,SAAA1C,EAAA3pB,GAAA,QAAA4pB,EAAA,KAAAkD,WAAAvsB,OAAA,EAAAqpB,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA+C,WAAAlD,GAAA,GAAAG,EAAA2C,QAAA,KAAAe,MAAA5D,EAAA1Y,KAAA4Y,EAAA,oBAAA0D,KAAA1D,EAAA6C,WAAA,KAAAtsB,EAAAypB,EAAA,OAAAzpB,IAAA,UAAAqpB,GAAA,aAAAA,IAAArpB,EAAAosB,QAAA1sB,GAAAA,GAAAM,EAAAssB,aAAAtsB,EAAA,UAAAuH,EAAAvH,EAAAA,EAAA0sB,WAAA,UAAAnlB,EAAAyB,KAAAqgB,EAAA9hB,EAAAijB,IAAA9qB,EAAAM,GAAA,KAAAqO,OAAA,YAAA4d,KAAAjsB,EAAAssB,WAAAzB,GAAA,KAAA3Z,SAAA3J,EAAA,EAAA2J,SAAA,SAAAmY,EAAA3pB,GAAA,aAAA2pB,EAAArgB,KAAA,MAAAqgB,EAAAmB,IAAA,gBAAAnB,EAAArgB,MAAA,aAAAqgB,EAAArgB,KAAA,KAAAijB,KAAA5C,EAAAmB,IAAA,WAAAnB,EAAArgB,MAAA,KAAAqkB,KAAA,KAAA7C,IAAAnB,EAAAmB,IAAA,KAAAnc,OAAA,cAAA4d,KAAA,kBAAA5C,EAAArgB,MAAAtJ,IAAA,KAAAusB,KAAAvsB,GAAAmrB,CAAA,EAAA0C,OAAA,SAAAlE,GAAA,QAAA3pB,EAAA,KAAA8sB,WAAAvsB,OAAA,EAAAP,GAAA,IAAAA,EAAA,KAAA4pB,EAAA,KAAAkD,WAAA9sB,GAAA,GAAA4pB,EAAAgD,aAAAjD,EAAA,YAAAnY,SAAAoY,EAAAoD,WAAApD,EAAAiD,UAAAE,EAAAnD,GAAAuB,CAAA,kBAAAxB,GAAA,QAAA3pB,EAAA,KAAA8sB,WAAAvsB,OAAA,EAAAP,GAAA,IAAAA,EAAA,KAAA4pB,EAAA,KAAAkD,WAAA9sB,GAAA,GAAA4pB,EAAA8C,SAAA/C,EAAA,KAAAE,EAAAD,EAAAoD,WAAA,aAAAnD,EAAAvgB,KAAA,KAAAygB,EAAAF,EAAAiB,IAAAiC,EAAAnD,EAAA,QAAAG,CAAA,QAAAtoB,MAAA,0BAAAqsB,cAAA,SAAA9tB,EAAA4pB,EAAAC,GAAA,YAAAmC,SAAA,CAAA9B,SAAAhe,EAAAlM,GAAAssB,WAAA1C,EAAA4C,QAAA3C,GAAA,cAAAlb,SAAA,KAAAmc,IAAAnB,GAAAwB,CAAA,GAAAnrB,CAAA,UAAA+tB,GAAAlE,EAAAF,EAAA3pB,EAAA4pB,EAAAG,EAAAliB,EAAArH,GAAA,QAAAF,EAAAupB,EAAAhiB,GAAArH,GAAAyC,EAAA3C,EAAAoF,KAAA,OAAAmkB,GAAA,YAAA7pB,EAAA6pB,EAAA,CAAAvpB,EAAA+Q,KAAAsY,EAAA1mB,GAAAsC,QAAAF,QAAApC,GAAAkP,KAAAyX,EAAAG,EAAA,UAAAiE,GAAApE,EAAA5pB,GAAA,gBAAA4pB,GAAA,GAAAroB,MAAAC,QAAAooB,GAAA,OAAAA,CAAA,CAAAqE,CAAArE,IAAA,SAAAA,EAAAoB,GAAA,IAAArB,EAAA,MAAAC,EAAA,yBAAAK,QAAAL,EAAAK,OAAAC,WAAAN,EAAA,uBAAAD,EAAA,KAAA3pB,EAAA6pB,EAAAvpB,EAAA2C,EAAA4E,EAAA,GAAAojB,GAAA,EAAAlB,GAAA,SAAAzpB,GAAAqpB,EAAAA,EAAAxY,KAAAyY,IAAA2C,KAAA,IAAAvB,EAAA,IAAArkB,OAAAgjB,KAAAA,EAAA,OAAAsB,GAAA,cAAAA,GAAAjrB,EAAAM,EAAA6Q,KAAAwY,IAAAtY,QAAAxJ,EAAAvF,KAAAtC,EAAA0F,OAAAmC,EAAAtH,SAAAyqB,GAAAC,GAAA,UAAArB,GAAAG,GAAA,EAAAF,EAAAD,CAAA,iBAAAqB,GAAA,MAAAtB,EAAA,SAAA1mB,EAAA0mB,EAAA,SAAAhjB,OAAA1D,KAAAA,GAAA,kBAAA8mB,EAAA,MAAAF,CAAA,SAAAhiB,CAAA,EAAAqmB,CAAAtE,EAAA5pB,IAAA,SAAA4pB,EAAA/hB,GAAA,GAAA+hB,EAAA,qBAAAA,EAAA,OAAAuE,GAAAvE,EAAA/hB,GAAA,IAAA8hB,EAAA,GAAA3D,SAAA7U,KAAAyY,GAAAzP,MAAA,uBAAAwP,GAAAC,EAAAnmB,cAAAkmB,EAAAC,EAAAnmB,YAAAG,MAAA,QAAA+lB,GAAA,QAAAA,EAAApoB,MAAA0K,KAAA2d,GAAA,cAAAD,GAAA,2CAAA9L,KAAA8L,GAAAwE,GAAAvE,EAAA/hB,QAAA,GAAAumB,CAAAxE,EAAA5pB,IAAA,qBAAAiP,UAAA,6IAAAof,EAAA,UAAAF,GAAAvE,EAAA/hB,IAAA,MAAAA,GAAAA,EAAA+hB,EAAArpB,UAAAsH,EAAA+hB,EAAArpB,QAAA,QAAAP,EAAA,EAAA6pB,EAAAtoB,MAAAsG,GAAA7H,EAAA6H,EAAA7H,IAAA6pB,EAAA7pB,GAAA4pB,EAAA5pB,GAAA,OAAA6pB,CAAA,UAAAyE,GAAAtuB,EAAA4pB,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAArpB,OAAAopB,IAAA,KAAAI,EAAAH,EAAAD,GAAAI,EAAAO,WAAAP,EAAAO,aAAA,EAAAP,EAAAQ,cAAA,YAAAR,IAAAA,EAAAS,UAAA,GAAA7jB,OAAAqjB,eAAAhqB,EAAAuuB,GAAAxE,EAAAtiB,KAAAsiB,EAAA,WAAAwE,GAAA5E,GAAA,IAAArpB,EAAA,SAAAqpB,GAAA,aAAAkC,GAAAlC,KAAAA,EAAA,OAAAA,EAAA,IAAA3pB,EAAA2pB,EAAAM,OAAAuE,aAAA,YAAAxuB,EAAA,KAAAM,EAAAN,EAAAmR,KAAAwY,EAAAC,UAAA,aAAAiC,GAAAvrB,GAAA,OAAAA,EAAA,UAAA2O,UAAA,uDAAAnM,OAAA6mB,EAAA,CAAA8E,CAAA9E,GAAA,gBAAAkC,GAAAvrB,GAAAA,EAAAA,EAAA,GDwtCI+V,GAAmB,IAAIjN,EAAUyZ,IAAgB,CAAC1Y,GAAaoB,QAASmjB,KAM7D9G,GAJKzd,EAAUoD,YAAY,OAAOjC,eACnBnB,EACjBoD,YAAY,0BACZjC,eAC8BojB,IACpC,WACHrY,GAAmB,IAAIjN,EAAU,sBAIjC,SAAyBe,GACrB,IACI,MAAMwkB,EAAYxkB,EAAUoD,YAAYsV,IAAgBvX,eACxD,MAAO,CACHsjB,SAAU,CAACC,EAAWC,EAAavjB,IAjDnD,SAAkBwjB,EAAmBF,EAAWC,EAAavjB,GACzDwjB,EAAoB,EAAmBA,GA5iB3Cvb,eAA0Bwb,EAAc/F,EAAuB4F,EAAWC,EAAavjB,GACnF,GAAIA,GAAWA,EAAQ0jB,OACnBD,EAAa,QAAiCH,EAAWC,OAGxD,CACD,MAAM/K,QAAsBkF,EAE5B+F,EAAa,QAAiCH,EAD/BloB,OAAOmQ,OAAOnQ,OAAOmQ,OAAO,CAAC,EAAGgY,GAAc,CAAE,QAAW/K,IAE9E,CACJ,CAmiBImL,CAAWxH,GAAqBF,GAA0BuH,EAAkB3Y,IAAI7K,QAAQoN,OAAQkW,EAAWC,EAAavjB,GAAS5F,OAAM3F,GAAK,GAAO0E,MAAM1E,IAC7J,CA8C+D4uB,CAASD,EAAWE,EAAWC,EAAavjB,GAEnG,CACA,MAAOvL,GACH,MAAM,GAAcgH,OAAO,+BAAkF,CACzGmoB,OAAQnvB,GAEhB,CACJ,GAhBwE,YACxE2X,GAAgB,GAAM,IAEtBA,GAAgB,GAAM,GAAS,WE9sCnCA,GAnBW,WACG,SAkBiB,ODnBxB,IAAMyX,GAAK,WAgBf,OAlBHpvB,EAGE,SAAAovB,KAHF,SAAAvnB,EAAAgiB,GAAA,KAAAhiB,aAAAgiB,GAAA,UAAA5a,UAAA,qCAGgBogB,CAAA,KAAAD,GACZtvB,KAAKwvB,MAAQjrB,SAASkrB,cAAc,UAEpCzvB,KAAK0vB,SAAW1vB,KAAKwvB,MAAMC,cAAc,SACzCzvB,KAAK2vB,UAAY3vB,KAAKwvB,MAAMC,cAAc,UAC1CzvB,KAAK4vB,YAAc5vB,KAAKwvB,MAAMC,cAAc,YAC5CzvB,KAAK6vB,YAAc7vB,KAAKwvB,MAAMC,cAAc,YAE5CzvB,KAAK8vB,sBAAwBvrB,SAASkrB,cAAc,kBACpDzvB,KAAK+vB,oBAAsBxrB,SAASkrB,cAAc,gBAElDzvB,KAAKgwB,eAAiB,GACtBhwB,KAAKiwB,aAAe,GAEpBjwB,KAAKkwB,MACP,EAlBFpG,EAkBG,EAAAniB,IAAA,OAAA/B,MAED,WACE5F,KAAKmwB,eAELC,YAAYpwB,KAAKqwB,gBAAgBC,KAAKtwB,MAAO,KAC7CA,KAAKqwB,iBACP,GAAC,CAAA1oB,IAAA,eAAA/B,MAED,WACE,GAA+C,KAA3C5F,KAAK8vB,sBAAsBS,aAA+D,KAAzCvwB,KAAK+vB,oBAAoBQ,YAAoB,CAChG,IAAMC,EAAc,IAAI7hB,KAClB8hB,EAAY,IAAI9hB,KAAK6hB,EAAYE,UAAY,QACnD1wB,KAAK8vB,sBAAsBS,YAAcE,EAAUE,qBACnD3wB,KAAKgwB,eAAiBS,EAAUE,qBAEhC,IAAMC,EAAU,IAAIjiB,KAAK8hB,EAAUC,UAAY,SAC/C1wB,KAAK+vB,oBAAoBQ,YAAcK,EAAQD,qBAC/C3wB,KAAKiwB,aAAeW,EAAQD,oBAC9B,MACE3wB,KAAKgwB,eAAiBhwB,KAAK8vB,sBAAsBS,YACjDvwB,KAAKiwB,aAAejwB,KAAK+vB,oBAAoBQ,WAEjD,GAAC,CAAA5oB,IAAA,kBAAA/B,MAED,WACE,IAAuDirB,EAAA3C,GAA5BluB,KAAKiwB,aAAaa,MAAM,KAAI,GAAhDC,EAAGF,EAAA,GAAEG,EAAKH,EAAA,GAAEI,EAAIJ,EAAA,GACvB,OAAO,IAAIliB,KAAK,GAADuiB,OAAID,EAAI,KAAAC,OAAIF,EAAK,KAAAE,OAAIH,EAAG,cAAaL,SACtD,GAAC,CAAA/oB,IAAA,oBAAA/B,MAED,WACE,IAAyDurB,EAAAjD,GAA9BluB,KAAKgwB,eAAec,MAAM,KAAI,GAAlDC,EAAGI,EAAA,GAAEH,EAAKG,EAAA,GAAEF,EAAIE,EAAA,GACvB,OAAO,IAAIxiB,KAAK,GAADuiB,OAAID,EAAI,KAAAC,OAAIF,EAAK,KAAAE,OAAIH,EAAG,cAAaL,SACtD,GAAC,CAAA/oB,IAAA,kBAAA/B,MAED,WACE,IAAM8I,GAAM,IAAIC,MAAO+hB,UACjBU,EAAepxB,KAAKqxB,kBAEtB3iB,GAAO0iB,GACTpxB,KAAKsxB,kBAGP,IAAMC,EAAWH,EAAe1iB,EAChC1O,KAAK0vB,SAAS8B,UAAYzoB,KAAK0oB,MAAMF,EAAW,OAChDvxB,KAAK2vB,UAAU6B,UAAYzoB,KAAK0oB,MAAOF,EAAW,MAAqB,MACvEvxB,KAAK4vB,YAAY4B,UAAYzoB,KAAK0oB,MAAOF,EAAW,KAAgB,KACpEvxB,KAAK6vB,YAAY2B,UAAYzoB,KAAK0oB,MAAOF,EAAW,IAAe,IACrE,GAAC,CAAA5pB,IAAA,kBAAA/B,MAED,WACE,IAAM8rB,EAAe,IAAI/iB,KAAK3O,KAAK2xB,oBAAsB,QACnDC,EAAa,IAAIjjB,KAAK3O,KAAKqxB,kBAAoB,SAErDrxB,KAAK8vB,sBAAsBS,YAAcmB,EAAaf,qBACtD3wB,KAAK+vB,oBAAoBQ,YAAcqB,EAAWjB,qBAElD3wB,KAAKgwB,eAAiB0B,EAAaf,qBACnC3wB,KAAKiwB,aAAe2B,EAAWjB,qBAE/B,IAAMkB,EAAO,0BAAHX,OAA6BlxB,KAAKgwB,eAAc,QAAAkB,OAAOlxB,KAAKiwB,cACtEjwB,KAAK8xB,oBAAoBD,EAC3B,GAAC,CAAAlqB,IAAA,sBAAA/B,OAhFHmkB,EAgFGH,KAAA2D,MAED,SAAAwE,EAA0BF,GAAI,IAAAjW,EAAA,OAAAgO,KAAAe,MAAA,SAAAqH,GAAA,cAAAA,EAAArE,KAAAqE,EAAAvF,MAAA,cAAAuF,EAAAvF,KAAA,EACLjM,MAAMyR,yFAAiB,CAC5CpjB,OAAQ,OACRoR,QAAS,CACP,eAAgB,kCAElBI,KAAMvb,KAAKgW,UAAU,CACnBoX,QAASD,cACTJ,KAAAA,EACAM,sBAAsB,MAExB,OAVY,IAARvW,EAAQoW,EAAA5F,MAYA3L,GAAI,CAAFuR,EAAAvF,KAAA,cACR,IAAI9qB,MAAMia,EAASwW,YAAW,wBAAAJ,EAAApE,OAAA,GAAAmE,EAAA,IAhBvCM,EAhFH,eAAAxI,EAAA,KAAA3pB,EAAA2D,UAAA,WAAA4B,SAAA,SAAAqkB,EAAAG,GAAA,IAAAliB,EAAAgiB,EAAA9Y,MAAA4Y,EAAA3pB,GAAA,SAAAoyB,EAAAvI,GAAAkE,GAAAlmB,EAAA+hB,EAAAG,EAAAqI,EAAAC,EAAA,OAAAxI,EAAA,UAAAwI,EAAAxI,GAAAkE,GAAAlmB,EAAA+hB,EAAAG,EAAAqI,EAAAC,EAAA,QAAAxI,EAAA,CAAAuI,OAAA,OAkGG,SAhBwBE,GAAA,OAAAH,EAAAphB,MAAC,KAADpN,UAAA,KAlF3BimB,GAAA0E,GAAAtuB,EAAA6G,UAAA+iB,GAAAjjB,OAAAqjB,eAAAhqB,EAAA,aAAAwqB,UAAA,IAAAxqB,EAAA,IAAAA,EAAA4pB,EAAAC,EAgFGsI,CAEwB,CAhFT,8qBEHX,IAAMI,GAAa,6BAAAA,iGAAAlD,CAAA,KAAAkD,EAAA,MAAA9qB,IAAA,cAAA/B,MACxB,SAAmB4D,EAAMqoB,GACvB,IAAMa,EAAkBnuB,SAASkrB,cAAc,QAEzCnlB,EAAY/F,SAAS4iB,cAAc,OACzC7c,EAAUqoB,UAAY,aACtBroB,EAAUsoB,UAAY,sGAAH1B,OAGQ1nB,EAAI,+CAAA0nB,OACD1nB,EAAI,WAAA0nB,OAAUW,EAAI,2EAAAX,OAGjC,OAAT1nB,EAAgB,qDAAuD,GAAE,oCAK/EkpB,EAAgBpL,YAAYhd,GAE5BuoB,uBAAsB,WACpBvoB,EAAUwoB,UAAU7lB,IAAI,OAC1B,IAEAkQ,YAAW,WACT7S,EAAUwoB,UAAU7lB,IAAI,OAC1B,GAAG,KAEHkQ,YAAW,WACT7S,EAAUwU,QACZ,GAAG,KACL,IA/BwB,kGA+BvB,CA/BuB,8qBCAnB,IAAMiU,GAAc,6BAAAA,iGAAAxD,CAAA,KAAAwD,EAAA,MAAAprB,IAAA,gBAAA/B,MACzB,SAAqBotB,GAEnB,MADmB,0BACDjV,KAAKiV,EAAY9uB,QAAQ,MAAO,IACpD,GAAC,CAAAyD,IAAA,cAAA/B,MAED,SAAmB9B,GAEjB,MADkB,2IACDia,KAAKja,EACxB,GAAC,CAAA6D,IAAA,UAAA/B,MAED,SAAeA,GACb,QAASA,CACX,IAbyB,kGAaxB,CAbwB,GCsBpB,SAASqtB,GAAUruB,EAAO6B,GAC/B,IAAMorB,EAAO,GAAHX,OAAMtsB,EAAK,OAAAssB,OAAMzqB,GACrByc,EAAM,GAAHgO,OAAMe,yFAAqB,aAAAf,OAAYe,YAAkC,UAAAf,OAASW,GACrFqB,EAAM,IAAIC,eAChBD,EAAIhtB,KAAK,MAAOgd,GAChBgQ,EAAIE,MACN,wPC3BAxJ,GAAA,kBAAA1pB,CAAA,MAAA2pB,EAAA3pB,EAAA,GAAA4pB,EAAAjjB,OAAAE,UAAAgjB,EAAAD,EAAAE,eAAAC,EAAApjB,OAAAqjB,gBAAA,SAAAL,EAAA3pB,EAAA4pB,GAAAD,EAAA3pB,GAAA4pB,EAAAlkB,KAAA,EAAApF,EAAA,mBAAA2pB,OAAAA,OAAA,GAAApiB,EAAAvH,EAAA4pB,UAAA,aAAA1pB,EAAAF,EAAA6pB,eAAA,kBAAAlnB,EAAA3C,EAAA8pB,aAAA,yBAAAC,EAAAV,EAAA3pB,EAAA4pB,GAAA,OAAAjjB,OAAAqjB,eAAAL,EAAA3pB,EAAA,CAAA0F,MAAAkkB,EAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAb,EAAA3pB,EAAA,KAAAqqB,EAAA,aAAAV,GAAAU,EAAA,SAAAV,EAAA3pB,EAAA4pB,GAAA,OAAAD,EAAA3pB,GAAA4pB,CAAA,WAAAa,EAAAd,EAAA3pB,EAAA4pB,EAAAC,GAAA,IAAAvpB,EAAAN,GAAAA,EAAA6G,qBAAA6jB,EAAA1qB,EAAA0qB,EAAA7iB,EAAAlB,OAAAK,OAAA1G,EAAAuG,WAAArG,EAAA,IAAAmqB,EAAAd,GAAA,WAAAE,EAAAliB,EAAA,WAAAnC,MAAAklB,EAAAjB,EAAAC,EAAAppB,KAAAqH,CAAA,UAAAgjB,EAAAlB,EAAA3pB,EAAA4pB,GAAA,WAAAtgB,KAAA,SAAAwhB,IAAAnB,EAAAxY,KAAAnR,EAAA4pB,GAAA,OAAAD,GAAA,OAAArgB,KAAA,QAAAwhB,IAAAnB,EAAA,EAAA3pB,EAAAyqB,KAAAA,EAAA,IAAAM,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAT,IAAA,UAAAU,IAAA,UAAAC,IAAA,KAAAhrB,EAAA,GAAAgqB,EAAAhqB,EAAAwH,GAAA,8BAAAyjB,EAAA3kB,OAAA4kB,eAAAC,EAAAF,GAAAA,EAAAA,EAAApf,EAAA,MAAAsf,GAAAA,IAAA5B,GAAAC,EAAA1Y,KAAAqa,EAAA3jB,KAAAxH,EAAAmrB,GAAA,IAAA5rB,EAAAyrB,EAAAxkB,UAAA6jB,EAAA7jB,UAAAF,OAAAK,OAAA3G,GAAA,SAAAorB,EAAA9B,GAAA,0BAAAtE,SAAA,SAAArlB,GAAAqqB,EAAAV,EAAA3pB,GAAA,SAAA2pB,GAAA,YAAA+B,QAAA1rB,EAAA2pB,EAAA,gBAAAgC,EAAAhC,EAAA3pB,GAAA,SAAA4rB,EAAAhC,EAAAG,EAAAzpB,EAAAuH,GAAA,IAAArH,EAAAqqB,EAAAlB,EAAAC,GAAAD,EAAAI,GAAA,aAAAvpB,EAAA8I,KAAA,KAAArG,EAAAzC,EAAAsqB,IAAAC,EAAA9nB,EAAAyC,MAAA,OAAAqlB,GAAA,UAAAc,GAAAd,IAAAlB,EAAA1Y,KAAA4Z,EAAA,WAAA/qB,EAAAqF,QAAA0lB,EAAAe,SAAA3Z,MAAA,SAAAwX,GAAAiC,EAAA,OAAAjC,EAAArpB,EAAAuH,EAAA,aAAA8hB,GAAAiC,EAAA,QAAAjC,EAAArpB,EAAAuH,EAAA,IAAA7H,EAAAqF,QAAA0lB,GAAA5Y,MAAA,SAAAwX,GAAA1mB,EAAAyC,MAAAikB,EAAArpB,EAAA2C,EAAA,aAAA0mB,GAAA,OAAAiC,EAAA,QAAAjC,EAAArpB,EAAAuH,EAAA,IAAAA,EAAArH,EAAAsqB,IAAA,KAAAlB,EAAAG,EAAA,gBAAArkB,MAAA,SAAAikB,EAAAE,GAAA,SAAAkC,IAAA,WAAA/rB,GAAA,SAAAA,EAAA4pB,GAAAgC,EAAAjC,EAAAE,EAAA7pB,EAAA4pB,EAAA,WAAAA,EAAAA,EAAAA,EAAAzX,KAAA4Z,EAAAA,GAAAA,GAAA,aAAAnB,EAAA5qB,EAAA4pB,EAAAC,GAAA,IAAAE,EAAAgB,EAAA,gBAAAzqB,EAAAuH,GAAA,GAAAkiB,IAAAkB,EAAA,MAAAxpB,MAAA,mCAAAsoB,IAAAmB,EAAA,cAAA5qB,EAAA,MAAAuH,EAAA,OAAAnC,MAAAikB,EAAAtY,MAAA,OAAAwY,EAAAlb,OAAArO,EAAAupB,EAAAiB,IAAAjjB,IAAA,KAAArH,EAAAqpB,EAAAmC,SAAA,GAAAxrB,EAAA,KAAAyC,EAAAgpB,EAAAzrB,EAAAqpB,GAAA,GAAA5mB,EAAA,IAAAA,IAAAkoB,EAAA,gBAAAloB,CAAA,cAAA4mB,EAAAlb,OAAAkb,EAAAqC,KAAArC,EAAAsC,MAAAtC,EAAAiB,SAAA,aAAAjB,EAAAlb,OAAA,IAAAob,IAAAgB,EAAA,MAAAhB,EAAAmB,EAAArB,EAAAiB,IAAAjB,EAAAuC,kBAAAvC,EAAAiB,IAAA,gBAAAjB,EAAAlb,QAAAkb,EAAAwC,OAAA,SAAAxC,EAAAiB,KAAAf,EAAAkB,EAAA,IAAA5qB,EAAAwqB,EAAA7qB,EAAA4pB,EAAAC,GAAA,cAAAxpB,EAAAiJ,KAAA,IAAAygB,EAAAF,EAAAxY,KAAA6Z,EAAAF,EAAA3qB,EAAAyqB,MAAAK,EAAA,gBAAAzlB,MAAArF,EAAAyqB,IAAAzZ,KAAAwY,EAAAxY,KAAA,WAAAhR,EAAAiJ,OAAAygB,EAAAmB,EAAArB,EAAAlb,OAAA,QAAAkb,EAAAiB,IAAAzqB,EAAAyqB,IAAA,YAAAmB,EAAAjsB,EAAA4pB,GAAA,IAAAC,EAAAD,EAAAjb,OAAAob,EAAA/pB,EAAAkqB,SAAAL,GAAA,GAAAE,IAAAJ,EAAA,OAAAC,EAAAoC,SAAA,eAAAnC,GAAA7pB,EAAAkqB,SAAA,SAAAN,EAAAjb,OAAA,SAAAib,EAAAkB,IAAAnB,EAAAsC,EAAAjsB,EAAA4pB,GAAA,UAAAA,EAAAjb,SAAA,WAAAkb,IAAAD,EAAAjb,OAAA,QAAAib,EAAAkB,IAAA,IAAA7b,UAAA,oCAAA4a,EAAA,aAAAsB,EAAA,IAAA7qB,EAAAuqB,EAAAd,EAAA/pB,EAAAkqB,SAAAN,EAAAkB,KAAA,aAAAxqB,EAAAgJ,KAAA,OAAAsgB,EAAAjb,OAAA,QAAAib,EAAAkB,IAAAxqB,EAAAwqB,IAAAlB,EAAAoC,SAAA,KAAAb,EAAA,IAAAtjB,EAAAvH,EAAAwqB,IAAA,OAAAjjB,EAAAA,EAAAwJ,MAAAuY,EAAA5pB,EAAAssB,YAAAzkB,EAAAnC,MAAAkkB,EAAA2C,KAAAvsB,EAAAwsB,QAAA,WAAA5C,EAAAjb,SAAAib,EAAAjb,OAAA,OAAAib,EAAAkB,IAAAnB,GAAAC,EAAAoC,SAAA,KAAAb,GAAAtjB,GAAA+hB,EAAAjb,OAAA,QAAAib,EAAAkB,IAAA,IAAA7b,UAAA,oCAAA2a,EAAAoC,SAAA,KAAAb,EAAA,UAAAsB,EAAA9C,GAAA,IAAA3pB,EAAA,CAAA0sB,OAAA/C,EAAA,SAAAA,IAAA3pB,EAAA2sB,SAAAhD,EAAA,SAAAA,IAAA3pB,EAAA4sB,WAAAjD,EAAA,GAAA3pB,EAAA6sB,SAAAlD,EAAA,SAAAmD,WAAAxqB,KAAAtC,EAAA,UAAA+sB,EAAApD,GAAA,IAAA3pB,EAAA2pB,EAAAqD,YAAA,GAAAhtB,EAAAsJ,KAAA,gBAAAtJ,EAAA8qB,IAAAnB,EAAAqD,WAAAhtB,CAAA,UAAA2qB,EAAAhB,GAAA,KAAAmD,WAAA,EAAAJ,OAAA,SAAA/C,EAAAtE,QAAAoH,EAAA,WAAAQ,OAAA,YAAA/gB,EAAAlM,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAA4pB,EAAA5pB,EAAA6H,GAAA,GAAA+hB,EAAA,OAAAA,EAAAzY,KAAAnR,GAAA,sBAAAA,EAAAusB,KAAA,OAAAvsB,EAAA,IAAAktB,MAAAltB,EAAAO,QAAA,KAAAwpB,GAAA,EAAAzpB,EAAA,SAAAisB,IAAA,OAAAxC,EAAA/pB,EAAAO,QAAA,GAAAspB,EAAA1Y,KAAAnR,EAAA+pB,GAAA,OAAAwC,EAAA7mB,MAAA1F,EAAA+pB,GAAAwC,EAAAlb,MAAA,EAAAkb,EAAA,OAAAA,EAAA7mB,MAAAikB,EAAA4C,EAAAlb,MAAA,EAAAkb,CAAA,SAAAjsB,EAAAisB,KAAAjsB,CAAA,YAAA2O,UAAA4c,GAAA7rB,GAAA,2BAAAorB,EAAAvkB,UAAAwkB,EAAAtB,EAAAnqB,EAAA,eAAA8F,MAAA2lB,EAAAd,cAAA,IAAAR,EAAAsB,EAAA,eAAA3lB,MAAA0lB,EAAAb,cAAA,IAAAa,EAAA+B,YAAA9C,EAAAgB,EAAApoB,EAAA,qBAAAjD,EAAAotB,oBAAA,SAAAzD,GAAA,IAAA3pB,EAAA,mBAAA2pB,GAAAA,EAAAlmB,YAAA,QAAAzD,IAAAA,IAAAorB,GAAA,uBAAAprB,EAAAmtB,aAAAntB,EAAA4D,MAAA,EAAA5D,EAAAqtB,KAAA,SAAA1D,GAAA,OAAAhjB,OAAAC,eAAAD,OAAAC,eAAA+iB,EAAA0B,IAAA1B,EAAA2D,UAAAjC,EAAAhB,EAAAV,EAAA1mB,EAAA,sBAAA0mB,EAAA9iB,UAAAF,OAAAK,OAAApH,GAAA+pB,CAAA,EAAA3pB,EAAAutB,MAAA,SAAA5D,GAAA,OAAAmC,QAAAnC,EAAA,EAAA8B,EAAAE,EAAA9kB,WAAAwjB,EAAAsB,EAAA9kB,UAAArG,GAAA,0BAAAR,EAAA2rB,cAAAA,EAAA3rB,EAAAwT,MAAA,SAAAmW,EAAAC,EAAAC,EAAAE,EAAAzpB,QAAA,IAAAA,IAAAA,EAAAiF,SAAA,IAAAsC,EAAA,IAAA8jB,EAAAlB,EAAAd,EAAAC,EAAAC,EAAAE,GAAAzpB,GAAA,OAAAN,EAAAotB,oBAAAxD,GAAA/hB,EAAAA,EAAA0kB,OAAApa,MAAA,SAAAwX,GAAA,OAAAA,EAAAtY,KAAAsY,EAAAjkB,MAAAmC,EAAA0kB,MAAA,KAAAd,EAAA7rB,GAAAyqB,EAAAzqB,EAAAqD,EAAA,aAAAonB,EAAAzqB,EAAAiI,GAAA,0BAAAwiB,EAAAzqB,EAAA,qDAAAI,EAAAgI,KAAA,SAAA2hB,GAAA,IAAA3pB,EAAA2G,OAAAgjB,GAAAC,EAAA,WAAAC,KAAA7pB,EAAA4pB,EAAAtnB,KAAAunB,GAAA,OAAAD,EAAA4D,UAAA,SAAAjB,IAAA,KAAA3C,EAAArpB,QAAA,KAAAopB,EAAAC,EAAAnP,MAAA,GAAAkP,KAAA3pB,EAAA,OAAAusB,EAAA7mB,MAAAikB,EAAA4C,EAAAlb,MAAA,EAAAkb,CAAA,QAAAA,EAAAlb,MAAA,EAAAkb,CAAA,GAAAvsB,EAAAkM,OAAAA,EAAAye,EAAA9jB,UAAA,CAAApD,YAAAknB,EAAAsC,MAAA,SAAAjtB,GAAA,QAAAytB,KAAA,OAAAlB,KAAA,OAAAL,KAAA,KAAAC,MAAAxC,EAAA,KAAAtY,MAAA,OAAA2a,SAAA,UAAArd,OAAA,YAAAmc,IAAAnB,EAAA,KAAAmD,WAAAzH,QAAA0H,IAAA/sB,EAAA,QAAA4pB,KAAA,WAAAA,EAAAtmB,OAAA,IAAAumB,EAAA1Y,KAAA,KAAAyY,KAAAsD,OAAAtD,EAAAzP,MAAA,WAAAyP,GAAAD,EAAA,EAAA+D,KAAA,gBAAArc,MAAA,MAAAsY,EAAA,KAAAmD,WAAA,GAAAE,WAAA,aAAArD,EAAArgB,KAAA,MAAAqgB,EAAAmB,IAAA,YAAA6C,IAAA,EAAAvB,kBAAA,SAAApsB,GAAA,QAAAqR,KAAA,MAAArR,EAAA,IAAA4pB,EAAA,cAAAgE,EAAA/D,EAAAE,GAAA,OAAAliB,EAAAyB,KAAA,QAAAzB,EAAAijB,IAAA9qB,EAAA4pB,EAAA2C,KAAA1C,EAAAE,IAAAH,EAAAjb,OAAA,OAAAib,EAAAkB,IAAAnB,KAAAI,CAAA,SAAAA,EAAA,KAAA+C,WAAAvsB,OAAA,EAAAwpB,GAAA,IAAAA,EAAA,KAAAzpB,EAAA,KAAAwsB,WAAA/C,GAAAliB,EAAAvH,EAAA0sB,WAAA,YAAA1sB,EAAAosB,OAAA,OAAAkB,EAAA,UAAAttB,EAAAosB,QAAA,KAAAe,KAAA,KAAAjtB,EAAAqpB,EAAA1Y,KAAA7Q,EAAA,YAAA2C,EAAA4mB,EAAA1Y,KAAA7Q,EAAA,iBAAAE,GAAAyC,EAAA,SAAAwqB,KAAAntB,EAAAqsB,SAAA,OAAAiB,EAAAttB,EAAAqsB,UAAA,WAAAc,KAAAntB,EAAAssB,WAAA,OAAAgB,EAAAttB,EAAAssB,WAAA,SAAApsB,GAAA,QAAAitB,KAAAntB,EAAAqsB,SAAA,OAAAiB,EAAAttB,EAAAqsB,UAAA,YAAA1pB,EAAA,MAAAxB,MAAA,kDAAAgsB,KAAAntB,EAAAssB,WAAA,OAAAgB,EAAAttB,EAAAssB,WAAA,KAAAP,OAAA,SAAA1C,EAAA3pB,GAAA,QAAA4pB,EAAA,KAAAkD,WAAAvsB,OAAA,EAAAqpB,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA+C,WAAAlD,GAAA,GAAAG,EAAA2C,QAAA,KAAAe,MAAA5D,EAAA1Y,KAAA4Y,EAAA,oBAAA0D,KAAA1D,EAAA6C,WAAA,KAAAtsB,EAAAypB,EAAA,OAAAzpB,IAAA,UAAAqpB,GAAA,aAAAA,IAAArpB,EAAAosB,QAAA1sB,GAAAA,GAAAM,EAAAssB,aAAAtsB,EAAA,UAAAuH,EAAAvH,EAAAA,EAAA0sB,WAAA,UAAAnlB,EAAAyB,KAAAqgB,EAAA9hB,EAAAijB,IAAA9qB,EAAAM,GAAA,KAAAqO,OAAA,YAAA4d,KAAAjsB,EAAAssB,WAAAzB,GAAA,KAAA3Z,SAAA3J,EAAA,EAAA2J,SAAA,SAAAmY,EAAA3pB,GAAA,aAAA2pB,EAAArgB,KAAA,MAAAqgB,EAAAmB,IAAA,gBAAAnB,EAAArgB,MAAA,aAAAqgB,EAAArgB,KAAA,KAAAijB,KAAA5C,EAAAmB,IAAA,WAAAnB,EAAArgB,MAAA,KAAAqkB,KAAA,KAAA7C,IAAAnB,EAAAmB,IAAA,KAAAnc,OAAA,cAAA4d,KAAA,kBAAA5C,EAAArgB,MAAAtJ,IAAA,KAAAusB,KAAAvsB,GAAAmrB,CAAA,EAAA0C,OAAA,SAAAlE,GAAA,QAAA3pB,EAAA,KAAA8sB,WAAAvsB,OAAA,EAAAP,GAAA,IAAAA,EAAA,KAAA4pB,EAAA,KAAAkD,WAAA9sB,GAAA,GAAA4pB,EAAAgD,aAAAjD,EAAA,YAAAnY,SAAAoY,EAAAoD,WAAApD,EAAAiD,UAAAE,EAAAnD,GAAAuB,CAAA,kBAAAxB,GAAA,QAAA3pB,EAAA,KAAA8sB,WAAAvsB,OAAA,EAAAP,GAAA,IAAAA,EAAA,KAAA4pB,EAAA,KAAAkD,WAAA9sB,GAAA,GAAA4pB,EAAA8C,SAAA/C,EAAA,KAAAE,EAAAD,EAAAoD,WAAA,aAAAnD,EAAAvgB,KAAA,KAAAygB,EAAAF,EAAAiB,IAAAiC,EAAAnD,EAAA,QAAAG,CAAA,QAAAtoB,MAAA,0BAAAqsB,cAAA,SAAA9tB,EAAA4pB,EAAAC,GAAA,YAAAmC,SAAA,CAAA9B,SAAAhe,EAAAlM,GAAAssB,WAAA1C,EAAA4C,QAAA3C,GAAA,cAAAlb,SAAA,KAAAmc,IAAAnB,GAAAwB,CAAA,GAAAnrB,CAAA,UAAA+tB,GAAAlE,EAAAF,EAAA3pB,EAAA4pB,EAAAG,EAAAliB,EAAArH,GAAA,QAAAF,EAAAupB,EAAAhiB,GAAArH,GAAAyC,EAAA3C,EAAAoF,KAAA,OAAAmkB,GAAA,YAAA7pB,EAAA6pB,EAAA,CAAAvpB,EAAA+Q,KAAAsY,EAAA1mB,GAAAsC,QAAAF,QAAApC,GAAAkP,KAAAyX,EAAAG,EAAA,UAAAuE,GAAAtuB,EAAA4pB,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAArpB,OAAAopB,IAAA,KAAAI,EAAAH,EAAAD,GAAAI,EAAAO,WAAAP,EAAAO,aAAA,EAAAP,EAAAQ,cAAA,YAAAR,IAAAA,EAAAS,UAAA,GAAA7jB,OAAAqjB,eAAAhqB,EAAAuuB,GAAAxE,EAAAtiB,KAAAsiB,EAAA,WAAAwE,GAAA5E,GAAA,IAAArpB,EAAA,SAAAqpB,GAAA,aAAAkC,GAAAlC,KAAAA,EAAA,OAAAA,EAAA,IAAA3pB,EAAA2pB,EAAAM,OAAAuE,aAAA,YAAAxuB,EAAA,KAAAM,EAAAN,EAAAmR,KAAAwY,EAAAC,UAAA,aAAAiC,GAAAvrB,GAAA,OAAAA,EAAA,UAAA2O,UAAA,uDAAAnM,OAAA6mB,EAAA,CAAA8E,CAAA9E,GAAA,gBAAAkC,GAAAvrB,GAAAA,EAAAA,EAAA,GAGO,IAAM6yB,GAAI,WAad,OAhBHnzB,EAIE,SAAAmzB,EAAYC,IAJd,SAAAvrB,EAAAgiB,GAAA,KAAAhiB,aAAAgiB,GAAA,UAAA5a,UAAA,qCAIoBogB,CAAA,KAAA8D,GAChBrzB,KAAKszB,KAAOA,EAEZtzB,KAAKuzB,OAASvzB,KAAKszB,KAAKE,iBAAiB,SACzCxzB,KAAKyzB,UAAYzzB,KAAKszB,KAAK7D,cAAc,UACzCzvB,KAAK4E,MAAQ5E,KAAKszB,KAAK7D,cAAc,UAErCzvB,KAAK0zB,UAAY1zB,KAAKszB,KAAK7D,cAAc,SACzCzvB,KAAK0zB,UAAU9tB,MAAQ5F,KAAK0zB,UAAU9tB,MAClC5F,KAAK0zB,UAAU9tB,MACf,wDACJ5F,KAAK2zB,qBACP,EAhBF7J,EAgBG,EAAAniB,IAAA,sBAAA/B,MAED,WAAsB,IAAAguB,EAAA,KACpB5zB,KAAKuzB,OAAOhO,SAAQ,SAAChkB,GACnBA,EAAMqQ,iBAAiB,SAAS,kBAAMgiB,EAAKC,YAAYtyB,EAAM,GAC/D,IAEAvB,KAAKyzB,UAAU7hB,iBAAiB,SAAS,SAACmB,GAAK,OAAK6gB,EAAKE,aAAa/gB,EAAM,GAC9E,GAAC,CAAApL,IAAA,cAAA/B,MAED,SAAYrE,GACS,QAAfA,EAAMiI,MACRxJ,KAAK+zB,eAAexyB,EAExB,GAAC,CAAAoG,IAAA,iBAAA/B,MAED,SAAerE,GACbA,EAAMqE,MAAQ5F,KAAKg0B,kBAAkBzyB,EAAMqE,MAC7C,GAAC,CAAA+B,IAAA,oBAAA/B,MAED,SAAkBotB,GAChB,IAAMiB,EAAUjB,EAAY9uB,QAAQ,MAAO,IAE3C,GAAI+vB,EAAQ9Q,WAAW,KAAM,CAC3B,IAAM3e,EAAQyvB,EAAQzvB,MAAM,6CAC5B,MAAO,CACLA,EAAM,GACNA,EAAM,IAAMA,EAAM,GAAK,IAAM,GAC7BA,EAAM,GACNA,EAAM,IAAMA,EAAM,GAAK,IAAM,GAC7BA,EAAM,GACNA,EAAM,IAAMA,EAAM,GAAK,IAAM,GAC7BA,EAAM,IACN/B,KAAK,GACT,CAAO,GAAIwxB,EAAQ9Q,WAAW,OAAQ,CACpC,IAAM3e,EAAQyvB,EAAQzvB,MAAM,gDAC5B,MAAO,CACL,OACAA,EAAM,GAAK,IAAH0sB,OAAO1sB,EAAM,IAAO,GAC5BA,EAAM,GAAK,IAAH0sB,OAAO1sB,EAAM,IAAO,GAC5BA,EAAM,GAAK,IAAH0sB,OAAO1sB,EAAM,IAAO,GAC5BA,EAAM,GAAK,IAAH0sB,OAAO1sB,EAAM,IAAO,IAC5B/B,KAAK,GACT,CAEA,OAAOuwB,CACT,GAAC,CAAArrB,IAAA,eAAA/B,MAED,SAAamN,GACXA,EAAMmhB,iBAENl0B,KAAKm0B,aACP,GAAC,CAAAxsB,IAAA,cAAA/B,MAED,WACE,IAAMwuB,EAAUp0B,KAAKq0B,iBAEfC,EAAct0B,KAAKu0B,iBAEnB1C,EAAO,+BAAHX,OAAkCoD,EAAYE,KAAI,eAAAtD,OAAcoD,EAAYxwB,KAAI,iBAAAotB,OAAgBoD,EAAYG,OAEjHL,IACHp0B,KAAK8xB,oBAAoBD,GACzB7xB,KAAK00B,YAET,GAAC,CAAA/sB,IAAA,iBAAA/B,MAED,WACE,MAAO,CACL4uB,KAAMx0B,KAAKuzB,OAAO,GAAG3tB,MACrB9B,KAAM9D,KAAKuzB,OAAO,GAAG3tB,MACrB6uB,MAAOz0B,KAAKuzB,OAAO,GAAG3tB,MAE1B,GAAC,CAAA+B,IAAA,sBAAA/B,OAzFHmkB,EAyFGH,KAAA2D,MAED,SAAAwE,EAA0BF,GAAI,IAAAjW,EAAA,OAAAgO,KAAAe,MAAA,SAAAqH,GAAA,cAAAA,EAAArE,KAAAqE,EAAAvF,MAAA,cAAAuF,EAAArE,KAAA,EAAAqE,EAAAvF,KAAA,EAEHjM,MAAMyR,yFAAiB,CAC5CpjB,OAAQ,OACRoR,QAAS,CACP,eAAgB,kCAElBI,KAAMvb,KAAKgW,UAAU,CACnBoX,QAASD,cACTJ,KAAAA,EACAM,sBAAsB,MAExB,OAVY,IAARvW,EAAQoW,EAAA5F,MAYA3L,GAAI,CAAFuR,EAAAvF,KAAA,cACR,IAAI9qB,MAAMia,EAASwW,YAAW,OAEtCK,GAAckC,YAAY,KAAM,2BAA2B3C,EAAAvF,KAAA,gBAAAuF,EAAArE,KAAA,EAAAqE,EAAA4C,GAAA5C,EAAA,SAE3DiB,GAASjB,EAAA4C,GAAQ,0BACjBnC,GAAckC,YAAY,QAAS,6CAA6C,yBAAA3C,EAAApE,OAAA,GAAAmE,EAAA,iBAtBnFM,EAzFH,eAAAxI,EAAA,KAAA3pB,EAAA2D,UAAA,WAAA4B,SAAA,SAAAqkB,EAAAG,GAAA,IAAAliB,EAAAgiB,EAAA9Y,MAAA4Y,EAAA3pB,GAAA,SAAAoyB,EAAAvI,GAAAkE,GAAAlmB,EAAA+hB,EAAAG,EAAAqI,EAAAC,EAAA,OAAAxI,EAAA,UAAAwI,EAAAxI,GAAAkE,GAAAlmB,EAAA+hB,EAAAG,EAAAqI,EAAAC,EAAA,QAAAxI,EAAA,CAAAuI,OAAA,OAiHG,SAtBwBE,GAAA,OAAAH,EAAAphB,MAAC,KAADpN,UAAA,KAAA8D,IAAA,iBAAA/B,MAwBzB,WAAiB,IAAAivB,EAAA,KACXT,GAAU,EAmBd,OAjBAp0B,KAAKuzB,OAAOhO,SAAQ,SAAChkB,GACdwxB,GAAe+B,QAAQvzB,EAAMqE,OAGvBrE,EAAMuxB,UAAUiC,SAAS,SAC7BhC,GAAeiC,cAAczzB,EAAMqE,SACtCivB,EAAKI,iBAAiB1zB,EAAO,8CAC7B6yB,GAAU,GAEH7yB,EAAMuxB,UAAUiC,SAAS,UAC7BhC,GAAemC,YAAY3zB,EAAMqE,SACpCivB,EAAKI,iBAAiB1zB,EAAO,0BAC7B6yB,GAAU,KAVZS,EAAKI,iBAAiB1zB,EAAO,uBAC7B6yB,GAAU,EAYd,IAEOA,CACT,GAAC,CAAAzsB,IAAA,mBAAA/B,MAED,SAAiBrE,EAAOkF,GAAS,IDnID0hB,EAC1BgN,ECkI2BC,EAAA,KACzBC,EAAU9zB,EAAM+zB,aAAa,MDpILnN,ECsIZkN,GDrIdF,EAAU5wB,SAASgxB,eAAepN,KAEtCgN,EAAQrC,UAAU7lB,ICmIS,UAC3BjN,KAAK4E,MAAM4sB,UAAY/qB,EAEvB0W,YAAW,YDlIR,SAAgCgL,GACrC,IAAMgN,EAAU5wB,SAASgxB,eAAepN,GACpCgN,GACFA,EAAQrC,UAAUhU,OCgIgB,SD9HtC,CC8HM0W,CAAuBH,GACvBD,EAAKxwB,MAAM4sB,UAAY,EACzB,GAAG,IACL,GAAC,CAAA7pB,IAAA,YAAA/B,MAED,WAAY,IAAA6vB,EAAA,KACVz1B,KAAKuzB,OAAOhO,SAAQ,SAAChkB,GACA,UAAfA,EAAMiI,KACJjI,EAAMqE,QAAU6vB,EAAKnC,KAAK7D,cAAc,iCAC1CluB,EAAMm0B,SAAU,GAGlBn0B,EAAMqE,MAAQ,EAElB,GACF,IAhKFkkB,GAAA0E,GAAAtuB,EAAA6G,UAAA+iB,GAAAjjB,OAAAqjB,eAAAhqB,EAAA,aAAAwqB,UAAA,IAAAxqB,EAAA,IAAAA,EAAA4pB,EAAAC,EAyFGsI,CAuEA,CA7Jc,8qBCJV,IAAMsD,GAAgB,WAG1B,SAFD,SAAAA,iGAAcpG,CAAA,KAAAoG,GACZ31B,KAAK41B,YACP,KAAC,EAAAjuB,IAAA,aAAA/B,MAED,WAEiB,IAAIiwB,OAAO,oBAAqB,CAC7CC,MAAM,EACNC,cAAe,EACfC,aAAc,GACdC,WAAY,CACVC,GAAI,cACJC,YAAa,qBACbC,kBAAmB,8BAErBC,WAAY,CACVC,OAAQ,wBACRC,OAAQ,0BAGd,oFAAC,CArB0B,8qBCItB,IAAMC,GAAI,WAMd,SALD,SAAAA,iGAAcjH,CAAA,KAAAiH,GACZx2B,KAAKy2B,aAAelyB,SAASkrB,cAAc,WAC3CzvB,KAAK02B,cAAgBnyB,SAASkrB,cAAc,YAE5CzvB,KAAKkwB,MACP,KAAC,EAAAvoB,IAAA,OAAA/B,MAED,WACE5F,KAAK22B,oBAEL,IAAIrH,GACJtvB,KAAK42B,WACL,IAAIjB,EACN,GAAC,CAAAhuB,IAAA,WAAA/B,MAED,WACE,IAAM0tB,EAAO/uB,SAASkrB,cAAc,kBACpC,IAAI4D,GAAKC,EACX,GAAC,CAAA3rB,IAAA,oBAAA/B,MAED,WACE5F,KAAKy2B,aAAa7kB,iBAAiB,QAAS5R,KAAK62B,gBAAgBvG,KAAKtwB,MACxE,GAAC,CAAA2H,IAAA,kBAAA/B,MAED,SAAgBmN,GACdA,EAAMmhB,iBACNl0B,KAAK02B,cAAcI,eAAe,CAChCC,SAAU,SACVC,MAAO,SAEX,oFAAC,CA/Bc,GCmBjBzyB,SAASqN,iBAAiB,oBAhBnB,WACL,IAAI4kB,GT4hCN,SAAsBlgB,EF1XtB,SAAgBxS,EAAO,IACnB,MAAMwS,EAAMJ,GAAMtL,IAAI9G,GACtB,IAAKwS,GAAOxS,IAAS,IAAsBoB,IACvC,OAAOuS,KAEX,IAAKnB,EACD,MAAMM,GAAc1P,OAAO,SAAgC,CAAEsQ,QAAS1T,IAE1E,OAAOwS,CACX,CEiX4B,IAGxB,MAAM2gB,EAAoB,GAF1B3gB,EAAM,EAAmBA,GAEmByM,IACxCkU,EAAkB9rB,gBACX8rB,EAAkBzrB,eAWjC,SAA6B8K,EAAK7K,EAAU,CAAC,GAEzC,MAAMwrB,EAAoB,GAAa3gB,EAAKyM,IAC5C,GAAIkU,EAAkB9rB,gBAAiB,CACnC,MAAM+B,EAAmB+pB,EAAkBzrB,eAC3C,GAAI1D,EAAU2D,EAASwrB,EAAkBtqB,cACrC,OAAOO,EAGP,MAAM,GAAchG,OAAO,sBAEnC,CAC0B+vB,EAAkBrqB,WAAW,CAAEnB,WAE7D,CAvBWyrB,CAAoB5gB,EAC/B,CSxhCoB6gB,CADN1f,GATW,CACrBmF,OAAQqV,0CACRmF,WAAYnF,qCACZvW,UAAWuW,qBACXoF,cAAepF,yCACfqF,kBAAmBrF,cACnBpZ,MAAOoZ,6CAKX","sources":["webpack://saucepan/webpack/bootstrap","webpack://saucepan/webpack/runtime/global","webpack://saucepan/./node_modules/@firebase/util/dist/index.esm2017.js","webpack://saucepan/./node_modules/@firebase/component/dist/esm/index.esm2017.js","webpack://saucepan/./node_modules/@firebase/logger/dist/esm/index.esm2017.js","webpack://saucepan/./node_modules/idb/build/wrap-idb-value.js","webpack://saucepan/./node_modules/idb/build/index.js","webpack://saucepan/./node_modules/@firebase/app/dist/esm/index.esm2017.js","webpack://saucepan/./node_modules/@firebase/installations/dist/esm/index.esm2017.js","webpack://saucepan/./node_modules/@firebase/analytics/dist/esm/index.esm2017.js","webpack://saucepan/./src/js/Clock.js","webpack://saucepan/./node_modules/firebase/app/dist/esm/index.esm.js","webpack://saucepan/./src/js/AlertRenderer.js","webpack://saucepan/./src/js/InputValidator.js","webpack://saucepan/./src/js/utils.js","webpack://saucepan/./src/js/Form.js","webpack://saucepan/./src/js/ReviewsComponent.js","webpack://saucepan/./src/js/Main.js","webpack://saucepan/./src/js/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\nconst CONSTANTS = {\n    /**\n     * @define {boolean} Whether this is the client Node.js SDK.\n     */\n    NODE_CLIENT: false,\n    /**\n     * @define {boolean} Whether this is the Admin Node.js SDK.\n     */\n    NODE_ADMIN: false,\n    /**\n     * Firebase SDK Version\n     */\n    SDK_VERSION: '${JSCORE_VERSION}'\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Throws an error if the provided assertion is falsy\n */\nconst assert = function (assertion, message) {\n    if (!assertion) {\n        throw assertionError(message);\n    }\n};\n/**\n * Returns an Error object suitable for throwing.\n */\nconst assertionError = function (message) {\n    return new Error('Firebase Database (' +\n        CONSTANTS.SDK_VERSION +\n        ') INTERNAL ASSERT FAILED: ' +\n        message);\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst stringToByteArray$1 = function (str) {\n    // TODO(user): Use native implementations if/when available\n    const out = [];\n    let p = 0;\n    for (let i = 0; i < str.length; i++) {\n        let c = str.charCodeAt(i);\n        if (c < 128) {\n            out[p++] = c;\n        }\n        else if (c < 2048) {\n            out[p++] = (c >> 6) | 192;\n            out[p++] = (c & 63) | 128;\n        }\n        else if ((c & 0xfc00) === 0xd800 &&\n            i + 1 < str.length &&\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n            // Surrogate Pair\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n            out[p++] = (c >> 18) | 240;\n            out[p++] = ((c >> 12) & 63) | 128;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n        else {\n            out[p++] = (c >> 12) | 224;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n    }\n    return out;\n};\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes) {\n    // TODO(user): Use native implementations if/when available\n    const out = [];\n    let pos = 0, c = 0;\n    while (pos < bytes.length) {\n        const c1 = bytes[pos++];\n        if (c1 < 128) {\n            out[c++] = String.fromCharCode(c1);\n        }\n        else if (c1 > 191 && c1 < 224) {\n            const c2 = bytes[pos++];\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n        }\n        else if (c1 > 239 && c1 < 365) {\n            // Surrogate Pair\n            const c2 = bytes[pos++];\n            const c3 = bytes[pos++];\n            const c4 = bytes[pos++];\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n                0x10000;\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n        }\n        else {\n            const c2 = bytes[pos++];\n            const c3 = bytes[pos++];\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n        }\n    }\n    return out.join('');\n};\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\n// TODO(dlarocque): Define this as a class, since we no longer target ES5.\nconst base64 = {\n    /**\n     * Maps bytes to characters.\n     */\n    byteToCharMap_: null,\n    /**\n     * Maps characters to bytes.\n     */\n    charToByteMap_: null,\n    /**\n     * Maps bytes to websafe characters.\n     * @private\n     */\n    byteToCharMapWebSafe_: null,\n    /**\n     * Maps websafe characters to bytes.\n     * @private\n     */\n    charToByteMapWebSafe_: null,\n    /**\n     * Our default alphabet, shared between\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n     */\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n    /**\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n     */\n    get ENCODED_VALS() {\n        return this.ENCODED_VALS_BASE + '+/=';\n    },\n    /**\n     * Our websafe alphabet.\n     */\n    get ENCODED_VALS_WEBSAFE() {\n        return this.ENCODED_VALS_BASE + '-_.';\n    },\n    /**\n     * Whether this browser supports the atob and btoa functions. This extension\n     * started at Mozilla but is now implemented by many browsers. We use the\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\n     * but still allowing the standard per-browser compilations.\n     *\n     */\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\n    /**\n     * Base64-encode an array of bytes.\n     *\n     * @param input An array of bytes (numbers with\n     *     value in [0, 255]) to encode.\n     * @param webSafe Boolean indicating we should use the\n     *     alternative alphabet.\n     * @return The base64 encoded string.\n     */\n    encodeByteArray(input, webSafe) {\n        if (!Array.isArray(input)) {\n            throw Error('encodeByteArray takes an array as a parameter');\n        }\n        this.init_();\n        const byteToCharMap = webSafe\n            ? this.byteToCharMapWebSafe_\n            : this.byteToCharMap_;\n        const output = [];\n        for (let i = 0; i < input.length; i += 3) {\n            const byte1 = input[i];\n            const haveByte2 = i + 1 < input.length;\n            const byte2 = haveByte2 ? input[i + 1] : 0;\n            const haveByte3 = i + 2 < input.length;\n            const byte3 = haveByte3 ? input[i + 2] : 0;\n            const outByte1 = byte1 >> 2;\n            const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n            let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n            let outByte4 = byte3 & 0x3f;\n            if (!haveByte3) {\n                outByte4 = 64;\n                if (!haveByte2) {\n                    outByte3 = 64;\n                }\n            }\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\n        }\n        return output.join('');\n    },\n    /**\n     * Base64-encode a string.\n     *\n     * @param input A string to encode.\n     * @param webSafe If true, we should use the\n     *     alternative alphabet.\n     * @return The base64 encoded string.\n     */\n    encodeString(input, webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n            return btoa(input);\n        }\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\n    },\n    /**\n     * Base64-decode a string.\n     *\n     * @param input to decode.\n     * @param webSafe True if we should use the\n     *     alternative alphabet.\n     * @return string representing the decoded value.\n     */\n    decodeString(input, webSafe) {\n        // Shortcut for Mozilla browsers that implement\n        // a native base64 encoder in the form of \"btoa/atob\"\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n            return atob(input);\n        }\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n    },\n    /**\n     * Base64-decode a string.\n     *\n     * In base-64 decoding, groups of four characters are converted into three\n     * bytes.  If the encoder did not apply padding, the input length may not\n     * be a multiple of 4.\n     *\n     * In this case, the last group will have fewer than 4 characters, and\n     * padding will be inferred.  If the group has one or two characters, it decodes\n     * to one byte.  If the group has three characters, it decodes to two bytes.\n     *\n     * @param input Input to decode.\n     * @param webSafe True if we should use the web-safe alphabet.\n     * @return bytes representing the decoded value.\n     */\n    decodeStringToByteArray(input, webSafe) {\n        this.init_();\n        const charToByteMap = webSafe\n            ? this.charToByteMapWebSafe_\n            : this.charToByteMap_;\n        const output = [];\n        for (let i = 0; i < input.length;) {\n            const byte1 = charToByteMap[input.charAt(i++)];\n            const haveByte2 = i < input.length;\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n            ++i;\n            const haveByte3 = i < input.length;\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            const haveByte4 = i < input.length;\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n            ++i;\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n                throw new DecodeBase64StringError();\n            }\n            const outByte1 = (byte1 << 2) | (byte2 >> 4);\n            output.push(outByte1);\n            if (byte3 !== 64) {\n                const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n                output.push(outByte2);\n                if (byte4 !== 64) {\n                    const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n                    output.push(outByte3);\n                }\n            }\n        }\n        return output;\n    },\n    /**\n     * Lazy static initialization function. Called before\n     * accessing any of the static map variables.\n     * @private\n     */\n    init_() {\n        if (!this.byteToCharMap_) {\n            this.byteToCharMap_ = {};\n            this.charToByteMap_ = {};\n            this.byteToCharMapWebSafe_ = {};\n            this.charToByteMapWebSafe_ = {};\n            // We want quick mappings back and forth, so we precompute two maps.\n            for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n                // Be forgiving when decoding and correctly decode both encodings.\n                if (i >= this.ENCODED_VALS_BASE.length) {\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n                }\n            }\n        }\n    }\n};\n/**\n * An error encountered while decoding base64 string.\n */\nclass DecodeBase64StringError extends Error {\n    constructor() {\n        super(...arguments);\n        this.name = 'DecodeBase64StringError';\n    }\n}\n/**\n * URL-safe base64 encoding\n */\nconst base64Encode = function (str) {\n    const utf8Bytes = stringToByteArray$1(str);\n    return base64.encodeByteArray(utf8Bytes, true);\n};\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nconst base64urlEncodeWithoutPadding = function (str) {\n    // Use base64url encoding and remove padding in the end (dot characters).\n    return base64Encode(str).replace(/\\./g, '');\n};\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nconst base64Decode = function (str) {\n    try {\n        return base64.decodeString(str, true);\n    }\n    catch (e) {\n        console.error('base64Decode failed: ', e);\n    }\n    return null;\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nfunction deepCopy(value) {\n    return deepExtend(undefined, value);\n}\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nfunction deepExtend(target, source) {\n    if (!(source instanceof Object)) {\n        return source;\n    }\n    switch (source.constructor) {\n        case Date:\n            // Treat Dates like scalars; if the target date object had any child\n            // properties - they will be lost!\n            const dateValue = source;\n            return new Date(dateValue.getTime());\n        case Object:\n            if (target === undefined) {\n                target = {};\n            }\n            break;\n        case Array:\n            // Always copy the array source and overwrite the target.\n            target = [];\n            break;\n        default:\n            // Not a plain Object - treat it as a scalar.\n            return source;\n    }\n    for (const prop in source) {\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n            continue;\n        }\n        target[prop] = deepExtend(target[prop], source[prop]);\n    }\n    return target;\n}\nfunction isValidKey(key) {\n    return key !== '__proto__';\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nfunction getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('Unable to locate global object.');\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst getDefaultsFromGlobal = () => getGlobal().__FIREBASE_DEFAULTS__;\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = () => {\n    if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n        return;\n    }\n    const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n    if (defaultsJsonString) {\n        return JSON.parse(defaultsJsonString);\n    }\n};\nconst getDefaultsFromCookie = () => {\n    if (typeof document === 'undefined') {\n        return;\n    }\n    let match;\n    try {\n        match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n    }\n    catch (e) {\n        // Some environments such as Angular Universal SSR have a\n        // `document` object but error on accessing `document.cookie`.\n        return;\n    }\n    const decoded = match && base64Decode(match[1]);\n    return decoded && JSON.parse(decoded);\n};\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nconst getDefaults = () => {\n    try {\n        return (getDefaultsFromGlobal() ||\n            getDefaultsFromEnvVariable() ||\n            getDefaultsFromCookie());\n    }\n    catch (e) {\n        /**\n         * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n         * to any environment case we have not accounted for. Log to\n         * info instead of swallowing so we can find these unknown cases\n         * and add paths for them if needed.\n         */\n        console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n        return;\n    }\n};\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nconst getDefaultEmulatorHost = (productName) => { var _a, _b; return (_b = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.emulatorHosts) === null || _b === void 0 ? void 0 : _b[productName]; };\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nconst getDefaultEmulatorHostnameAndPort = (productName) => {\n    const host = getDefaultEmulatorHost(productName);\n    if (!host) {\n        return undefined;\n    }\n    const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n    if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n        throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n    }\n    // eslint-disable-next-line no-restricted-globals\n    const port = parseInt(host.substring(separatorIndex + 1), 10);\n    if (host[0] === '[') {\n        // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n        return [host.substring(1, separatorIndex - 1), port];\n    }\n    else {\n        return [host.substring(0, separatorIndex), port];\n    }\n};\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nconst getDefaultAppConfig = () => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.config; };\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nconst getExperimentalSetting = (name) => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a[`_${name}`]; };\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Deferred {\n    constructor() {\n        this.reject = () => { };\n        this.resolve = () => { };\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n    /**\n     * Our API internals are not promisified and cannot because our callback APIs have subtle expectations around\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\n     */\n    wrapCallback(callback) {\n        return (error, value) => {\n            if (error) {\n                this.reject(error);\n            }\n            else {\n                this.resolve(value);\n            }\n            if (typeof callback === 'function') {\n                // Attaching noop handler just in case developer wasn't expecting\n                // promises\n                this.promise.catch(() => { });\n                // Some of our callbacks don't expect a value and our own tests\n                // assert that the parameter length is 1\n                if (callback.length === 1) {\n                    callback(error);\n                }\n                else {\n                    callback(error, value);\n                }\n            }\n        };\n    }\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction createMockUserToken(token, projectId) {\n    if (token.uid) {\n        throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\n    }\n    // Unsecured JWTs use \"none\" as the algorithm.\n    const header = {\n        alg: 'none',\n        type: 'JWT'\n    };\n    const project = projectId || 'demo-project';\n    const iat = token.iat || 0;\n    const sub = token.sub || token.user_id;\n    if (!sub) {\n        throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n    }\n    const payload = Object.assign({ \n        // Set all required fields to decent defaults\n        iss: `https://securetoken.google.com/${project}`, aud: project, iat, exp: iat + 3600, auth_time: iat, sub, user_id: sub, firebase: {\n            sign_in_provider: 'custom',\n            identities: {}\n        } }, token);\n    // Unsecured JWTs use the empty string as a signature.\n    const signature = '';\n    return [\n        base64urlEncodeWithoutPadding(JSON.stringify(header)),\n        base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n        signature\n    ].join('.');\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nfunction getUA() {\n    if (typeof navigator !== 'undefined' &&\n        typeof navigator['userAgent'] === 'string') {\n        return navigator['userAgent'];\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nfunction isMobileCordova() {\n    return (typeof window !== 'undefined' &&\n        // @ts-ignore Setting up an broadly applicable index signature for Window\n        // just to deal with this case would probably be a bad idea.\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\n}\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nfunction isNode() {\n    var _a;\n    const forceEnvironment = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.forceEnvironment;\n    if (forceEnvironment === 'node') {\n        return true;\n    }\n    else if (forceEnvironment === 'browser') {\n        return false;\n    }\n    try {\n        return (Object.prototype.toString.call(global.process) === '[object process]');\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Detect Browser Environment.\n * Note: This will return true for certain test frameworks that are incompletely\n * mimicking a browser, and should not lead to assuming all browser APIs are\n * available.\n */\nfunction isBrowser() {\n    return typeof window !== 'undefined' || isWebWorker();\n}\n/**\n * Detect Web Worker context.\n */\nfunction isWebWorker() {\n    return (typeof WorkerGlobalScope !== 'undefined' &&\n        typeof self !== 'undefined' &&\n        self instanceof WorkerGlobalScope);\n}\n/**\n * Detect Cloudflare Worker context.\n */\nfunction isCloudflareWorker() {\n    return (typeof navigator !== 'undefined' &&\n        navigator.userAgent === 'Cloudflare-Workers');\n}\nfunction isBrowserExtension() {\n    const runtime = typeof chrome === 'object'\n        ? chrome.runtime\n        : typeof browser === 'object'\n            ? browser.runtime\n            : undefined;\n    return typeof runtime === 'object' && runtime.id !== undefined;\n}\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nfunction isReactNative() {\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\n}\n/** Detects Electron apps. */\nfunction isElectron() {\n    return getUA().indexOf('Electron/') >= 0;\n}\n/** Detects Internet Explorer. */\nfunction isIE() {\n    const ua = getUA();\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n/** Detects Universal Windows Platform apps. */\nfunction isUWP() {\n    return getUA().indexOf('MSAppHost/') >= 0;\n}\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nfunction isNodeSdk() {\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n/** Returns true if we are running in Safari. */\nfunction isSafari() {\n    return (!isNode() &&\n        !!navigator.userAgent &&\n        navigator.userAgent.includes('Safari') &&\n        !navigator.userAgent.includes('Chrome'));\n}\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nfunction isIndexedDBAvailable() {\n    try {\n        return typeof indexedDB === 'object';\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nfunction validateIndexedDBOpenable() {\n    return new Promise((resolve, reject) => {\n        try {\n            let preExist = true;\n            const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\n            const request = self.indexedDB.open(DB_CHECK_NAME);\n            request.onsuccess = () => {\n                request.result.close();\n                // delete database only when it doesn't pre-exist\n                if (!preExist) {\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n                }\n                resolve(true);\n            };\n            request.onupgradeneeded = () => {\n                preExist = false;\n            };\n            request.onerror = () => {\n                var _a;\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\n            };\n        }\n        catch (error) {\n            reject(error);\n        }\n    });\n}\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nfunction areCookiesEnabled() {\n    if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // TypeScript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\nconst ERROR_NAME = 'FirebaseError';\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nclass FirebaseError extends Error {\n    constructor(\n    /** The error code for this error. */\n    code, message, \n    /** Custom data for this error. */\n    customData) {\n        super(message);\n        this.code = code;\n        this.customData = customData;\n        /** The custom name for all FirebaseErrors. */\n        this.name = ERROR_NAME;\n        // Fix For ES5\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        // TODO(dlarocque): Replace this with `new.target`: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#support-for-newtarget\n        //                   which we can now use since we no longer target ES5.\n        Object.setPrototypeOf(this, FirebaseError.prototype);\n        // Maintains proper stack trace for where our error was thrown.\n        // Only available on V8.\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, ErrorFactory.prototype.create);\n        }\n    }\n}\nclass ErrorFactory {\n    constructor(service, serviceName, errors) {\n        this.service = service;\n        this.serviceName = serviceName;\n        this.errors = errors;\n    }\n    create(code, ...data) {\n        const customData = data[0] || {};\n        const fullCode = `${this.service}/${code}`;\n        const template = this.errors[code];\n        const message = template ? replaceTemplate(template, customData) : 'Error';\n        // Service Name: Error message (service/code).\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n        const error = new FirebaseError(fullCode, fullMessage, customData);\n        return error;\n    }\n}\nfunction replaceTemplate(template, data) {\n    return template.replace(PATTERN, (_, key) => {\n        const value = data[key];\n        return value != null ? String(value) : `<${key}?>`;\n    });\n}\nconst PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nfunction jsonEval(str) {\n    return JSON.parse(str);\n}\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data JavaScript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nfunction stringify(data) {\n    return JSON.stringify(data);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nconst decode = function (token) {\n    let header = {}, claims = {}, data = {}, signature = '';\n    try {\n        const parts = token.split('.');\n        header = jsonEval(base64Decode(parts[0]) || '');\n        claims = jsonEval(base64Decode(parts[1]) || '');\n        signature = parts[2];\n        data = claims['d'] || {};\n        delete claims['d'];\n    }\n    catch (e) { }\n    return {\n        header,\n        claims,\n        data,\n        signature\n    };\n};\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nconst isValidTimestamp = function (token) {\n    const claims = decode(token).claims;\n    const now = Math.floor(new Date().getTime() / 1000);\n    let validSince = 0, validUntil = 0;\n    if (typeof claims === 'object') {\n        if (claims.hasOwnProperty('nbf')) {\n            validSince = claims['nbf'];\n        }\n        else if (claims.hasOwnProperty('iat')) {\n            validSince = claims['iat'];\n        }\n        if (claims.hasOwnProperty('exp')) {\n            validUntil = claims['exp'];\n        }\n        else {\n            // token will expire after 24h by default\n            validUntil = validSince + 86400;\n        }\n    }\n    return (!!now &&\n        !!validSince &&\n        !!validUntil &&\n        now >= validSince &&\n        now <= validUntil);\n};\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nconst issuedAtTime = function (token) {\n    const claims = decode(token).claims;\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n        return claims['iat'];\n    }\n    return null;\n};\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nconst isValidFormat = function (token) {\n    const decoded = decode(token), claims = decoded.claims;\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nconst isAdmin = function (token) {\n    const claims = decode(token).claims;\n    return typeof claims === 'object' && claims['admin'] === true;\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction contains(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction safeGet(obj, key) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        return obj[key];\n    }\n    else {\n        return undefined;\n    }\n}\nfunction isEmpty(obj) {\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction map(obj, fn, contextObj) {\n    const res = {};\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            res[key] = fn.call(contextObj, obj[key], key, obj);\n        }\n    }\n    return res;\n}\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nfunction deepEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    for (const k of aKeys) {\n        if (!bKeys.includes(k)) {\n            return false;\n        }\n        const aProp = a[k];\n        const bProp = b[k];\n        if (isObject(aProp) && isObject(bProp)) {\n            if (!deepEqual(aProp, bProp)) {\n                return false;\n            }\n        }\n        else if (aProp !== bProp) {\n            return false;\n        }\n    }\n    for (const k of bKeys) {\n        if (!aKeys.includes(k)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isObject(thing) {\n    return thing !== null && typeof thing === 'object';\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nfunction promiseWithTimeout(promise, timeInMS = 2000) {\n    const deferredPromise = new Deferred();\n    setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n    promise.then(deferredPromise.resolve, deferredPromise.reject);\n    return deferredPromise.promise;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nfunction querystring(querystringParams) {\n    const params = [];\n    for (const [key, value] of Object.entries(querystringParams)) {\n        if (Array.isArray(value)) {\n            value.forEach(arrayVal => {\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\n            });\n        }\n        else {\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n        }\n    }\n    return params.length ? '&' + params.join('&') : '';\n}\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nfunction querystringDecode(querystring) {\n    const obj = {};\n    const tokens = querystring.replace(/^\\?/, '').split('&');\n    tokens.forEach(token => {\n        if (token) {\n            const [key, value] = token.split('=');\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\n        }\n    });\n    return obj;\n}\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nfunction extractQuerystring(url) {\n    const queryStart = url.indexOf('?');\n    if (!queryStart) {\n        return '';\n    }\n    const fragmentStart = url.indexOf('#', queryStart);\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nclass Sha1 {\n    constructor() {\n        /**\n         * Holds the previous values of accumulated variables a-e in the compress_\n         * function.\n         * @private\n         */\n        this.chain_ = [];\n        /**\n         * A buffer holding the partially computed hash result.\n         * @private\n         */\n        this.buf_ = [];\n        /**\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n         * as the message schedule in the docs.\n         * @private\n         */\n        this.W_ = [];\n        /**\n         * Contains data needed to pad messages less than 64 bytes.\n         * @private\n         */\n        this.pad_ = [];\n        /**\n         * @private {number}\n         */\n        this.inbuf_ = 0;\n        /**\n         * @private {number}\n         */\n        this.total_ = 0;\n        this.blockSize = 512 / 8;\n        this.pad_[0] = 128;\n        for (let i = 1; i < this.blockSize; ++i) {\n            this.pad_[i] = 0;\n        }\n        this.reset();\n    }\n    reset() {\n        this.chain_[0] = 0x67452301;\n        this.chain_[1] = 0xefcdab89;\n        this.chain_[2] = 0x98badcfe;\n        this.chain_[3] = 0x10325476;\n        this.chain_[4] = 0xc3d2e1f0;\n        this.inbuf_ = 0;\n        this.total_ = 0;\n    }\n    /**\n     * Internal compress helper function.\n     * @param buf Block to compress.\n     * @param offset Offset of the block in the buffer.\n     * @private\n     */\n    compress_(buf, offset) {\n        if (!offset) {\n            offset = 0;\n        }\n        const W = this.W_;\n        // get 16 big endian words\n        if (typeof buf === 'string') {\n            for (let i = 0; i < 16; i++) {\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n                // have a bug that turns the post-increment ++ operator into pre-increment\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\n                // correctness and which is affected by this bug, so I've removed all uses\n                // of post-increment ++ in which the result value is used.  We can revert\n                // this change once the Safari bug\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n                // most clients have been updated.\n                W[i] =\n                    (buf.charCodeAt(offset) << 24) |\n                        (buf.charCodeAt(offset + 1) << 16) |\n                        (buf.charCodeAt(offset + 2) << 8) |\n                        buf.charCodeAt(offset + 3);\n                offset += 4;\n            }\n        }\n        else {\n            for (let i = 0; i < 16; i++) {\n                W[i] =\n                    (buf[offset] << 24) |\n                        (buf[offset + 1] << 16) |\n                        (buf[offset + 2] << 8) |\n                        buf[offset + 3];\n                offset += 4;\n            }\n        }\n        // expand to 80 words\n        for (let i = 16; i < 80; i++) {\n            const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n        }\n        let a = this.chain_[0];\n        let b = this.chain_[1];\n        let c = this.chain_[2];\n        let d = this.chain_[3];\n        let e = this.chain_[4];\n        let f, k;\n        // TODO(user): Try to unroll this loop to speed up the computation.\n        for (let i = 0; i < 80; i++) {\n            if (i < 40) {\n                if (i < 20) {\n                    f = d ^ (b & (c ^ d));\n                    k = 0x5a827999;\n                }\n                else {\n                    f = b ^ c ^ d;\n                    k = 0x6ed9eba1;\n                }\n            }\n            else {\n                if (i < 60) {\n                    f = (b & c) | (d & (b | c));\n                    k = 0x8f1bbcdc;\n                }\n                else {\n                    f = b ^ c ^ d;\n                    k = 0xca62c1d6;\n                }\n            }\n            const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n            e = d;\n            d = c;\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n            b = a;\n            a = t;\n        }\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n    }\n    update(bytes, length) {\n        // TODO(johnlenz): tighten the function signature and remove this check\n        if (bytes == null) {\n            return;\n        }\n        if (length === undefined) {\n            length = bytes.length;\n        }\n        const lengthMinusBlock = length - this.blockSize;\n        let n = 0;\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\n        const buf = this.buf_;\n        let inbuf = this.inbuf_;\n        // The outer while loop should execute at most twice.\n        while (n < length) {\n            // When we have no data in the block to top up, we can directly process the\n            // input buffer (assuming it contains sufficient data). This gives ~25%\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n            // the data is provided in large chunks (or in multiples of 64 bytes).\n            if (inbuf === 0) {\n                while (n <= lengthMinusBlock) {\n                    this.compress_(bytes, n);\n                    n += this.blockSize;\n                }\n            }\n            if (typeof bytes === 'string') {\n                while (n < length) {\n                    buf[inbuf] = bytes.charCodeAt(n);\n                    ++inbuf;\n                    ++n;\n                    if (inbuf === this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            }\n            else {\n                while (n < length) {\n                    buf[inbuf] = bytes[n];\n                    ++inbuf;\n                    ++n;\n                    if (inbuf === this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            }\n        }\n        this.inbuf_ = inbuf;\n        this.total_ += length;\n    }\n    /** @override */\n    digest() {\n        const digest = [];\n        let totalBits = this.total_ * 8;\n        // Add pad 0x80 0x00*.\n        if (this.inbuf_ < 56) {\n            this.update(this.pad_, 56 - this.inbuf_);\n        }\n        else {\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n        }\n        // Add # bits.\n        for (let i = this.blockSize - 1; i >= 56; i--) {\n            this.buf_[i] = totalBits & 255;\n            totalBits /= 256; // Don't use bit-shifting here!\n        }\n        this.compress_(this.buf_);\n        let n = 0;\n        for (let i = 0; i < 5; i++) {\n            for (let j = 24; j >= 0; j -= 8) {\n                digest[n] = (this.chain_[i] >> j) & 255;\n                ++n;\n            }\n        }\n        return digest;\n    }\n}\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nfunction createSubscribe(executor, onNoObservers) {\n    const proxy = new ObserverProxy(executor, onNoObservers);\n    return proxy.subscribe.bind(proxy);\n}\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy {\n    /**\n     * @param executor Function which can make calls to a single Observer\n     *     as a proxy.\n     * @param onNoObservers Callback when count of Observers goes to zero.\n     */\n    constructor(executor, onNoObservers) {\n        this.observers = [];\n        this.unsubscribes = [];\n        this.observerCount = 0;\n        // Micro-task scheduling by calling task.then().\n        this.task = Promise.resolve();\n        this.finalized = false;\n        this.onNoObservers = onNoObservers;\n        // Call the executor asynchronously so subscribers that are called\n        // synchronously after the creation of the subscribe function\n        // can still receive the very first value generated in the executor.\n        this.task\n            .then(() => {\n            executor(this);\n        })\n            .catch(e => {\n            this.error(e);\n        });\n    }\n    next(value) {\n        this.forEachObserver((observer) => {\n            observer.next(value);\n        });\n    }\n    error(error) {\n        this.forEachObserver((observer) => {\n            observer.error(error);\n        });\n        this.close(error);\n    }\n    complete() {\n        this.forEachObserver((observer) => {\n            observer.complete();\n        });\n        this.close();\n    }\n    /**\n     * Subscribe function that can be used to add an Observer to the fan-out list.\n     *\n     * - We require that no event is sent to a subscriber synchronously to their\n     *   call to subscribe().\n     */\n    subscribe(nextOrObserver, error, complete) {\n        let observer;\n        if (nextOrObserver === undefined &&\n            error === undefined &&\n            complete === undefined) {\n            throw new Error('Missing Observer.');\n        }\n        // Assemble an Observer object when passed as callback functions.\n        if (implementsAnyMethods(nextOrObserver, [\n            'next',\n            'error',\n            'complete'\n        ])) {\n            observer = nextOrObserver;\n        }\n        else {\n            observer = {\n                next: nextOrObserver,\n                error,\n                complete\n            };\n        }\n        if (observer.next === undefined) {\n            observer.next = noop;\n        }\n        if (observer.error === undefined) {\n            observer.error = noop;\n        }\n        if (observer.complete === undefined) {\n            observer.complete = noop;\n        }\n        const unsub = this.unsubscribeOne.bind(this, this.observers.length);\n        // Attempt to subscribe to a terminated Observable - we\n        // just respond to the Observer with the final error or complete\n        // event.\n        if (this.finalized) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this.task.then(() => {\n                try {\n                    if (this.finalError) {\n                        observer.error(this.finalError);\n                    }\n                    else {\n                        observer.complete();\n                    }\n                }\n                catch (e) {\n                    // nothing\n                }\n                return;\n            });\n        }\n        this.observers.push(observer);\n        return unsub;\n    }\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\n    // any unsubscribed Observer.\n    unsubscribeOne(i) {\n        if (this.observers === undefined || this.observers[i] === undefined) {\n            return;\n        }\n        delete this.observers[i];\n        this.observerCount -= 1;\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n            this.onNoObservers(this);\n        }\n    }\n    forEachObserver(fn) {\n        if (this.finalized) {\n            // Already closed by previous event....just eat the additional values.\n            return;\n        }\n        // Since sendOne calls asynchronously - there is no chance that\n        // this.observers will become undefined.\n        for (let i = 0; i < this.observers.length; i++) {\n            this.sendOne(i, fn);\n        }\n    }\n    // Call the Observer via one of it's callback function. We are careful to\n    // confirm that the observe has not been unsubscribed since this asynchronous\n    // function had been queued.\n    sendOne(i, fn) {\n        // Execute the callback asynchronously\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.task.then(() => {\n            if (this.observers !== undefined && this.observers[i] !== undefined) {\n                try {\n                    fn(this.observers[i]);\n                }\n                catch (e) {\n                    // Ignore exceptions raised in Observers or missing methods of an\n                    // Observer.\n                    // Log error to console. b/31404806\n                    if (typeof console !== 'undefined' && console.error) {\n                        console.error(e);\n                    }\n                }\n            }\n        });\n    }\n    close(err) {\n        if (this.finalized) {\n            return;\n        }\n        this.finalized = true;\n        if (err !== undefined) {\n            this.finalError = err;\n        }\n        // Proxy is no longer needed - garbage collect references\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.task.then(() => {\n            this.observers = undefined;\n            this.onNoObservers = undefined;\n        });\n    }\n}\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction async(fn, onError) {\n    return (...args) => {\n        Promise.resolve(true)\n            .then(() => {\n            fn(...args);\n        })\n            .catch((error) => {\n            if (onError) {\n                onError(error);\n            }\n        });\n    };\n}\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(obj, methods) {\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    for (const method of methods) {\n        if (method in obj && typeof obj[method] === 'function') {\n            return true;\n        }\n    }\n    return false;\n}\nfunction noop() {\n    // do nothing\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nconst validateArgCount = function (fnName, minCount, maxCount, argCount) {\n    let argError;\n    if (argCount < minCount) {\n        argError = 'at least ' + minCount;\n    }\n    else if (argCount > maxCount) {\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n    }\n    if (argError) {\n        const error = fnName +\n            ' failed: Was called with ' +\n            argCount +\n            (argCount === 1 ? ' argument.' : ' arguments.') +\n            ' Expects ' +\n            argError +\n            '.';\n        throw new Error(error);\n    }\n};\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nfunction errorPrefix(fnName, argName) {\n    return `${fnName} failed: ${argName} argument `;\n}\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nfunction validateNamespace(fnName, namespace, optional) {\n    if (optional && !namespace) {\n        return;\n    }\n    if (typeof namespace !== 'string') {\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\n        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\n    }\n}\nfunction validateCallback(fnName, argumentName, \n// eslint-disable-next-line @typescript-eslint/ban-types\ncallback, optional) {\n    if (optional && !callback) {\n        return;\n    }\n    if (typeof callback !== 'function') {\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\n    }\n}\nfunction validateContextObject(fnName, argumentName, context, optional) {\n    if (optional && !context) {\n        return;\n    }\n    if (typeof context !== 'object' || context === null) {\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in JavaScript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n/**\n * @param {string} str\n * @return {Array}\n */\nconst stringToByteArray = function (str) {\n    const out = [];\n    let p = 0;\n    for (let i = 0; i < str.length; i++) {\n        let c = str.charCodeAt(i);\n        // Is this the lead surrogate in a surrogate pair?\n        if (c >= 0xd800 && c <= 0xdbff) {\n            const high = c - 0xd800; // the high 10 bits.\n            i++;\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n            const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n            c = 0x10000 + (high << 10) + low;\n        }\n        if (c < 128) {\n            out[p++] = c;\n        }\n        else if (c < 2048) {\n            out[p++] = (c >> 6) | 192;\n            out[p++] = (c & 63) | 128;\n        }\n        else if (c < 65536) {\n            out[p++] = (c >> 12) | 224;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n        else {\n            out[p++] = (c >> 18) | 240;\n            out[p++] = ((c >> 12) & 63) | 128;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n    }\n    return out;\n};\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nconst stringLength = function (str) {\n    let p = 0;\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 128) {\n            p++;\n        }\n        else if (c < 2048) {\n            p += 2;\n        }\n        else if (c >= 0xd800 && c <= 0xdbff) {\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n            p += 4;\n            i++; // skip trail surrogate.\n        }\n        else {\n            p += 3;\n        }\n    }\n    return p;\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nconst MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nconst RANDOM_FACTOR = 0.5;\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nfunction calculateBackoffMillis(backoffCount, intervalMillis = DEFAULT_INTERVAL_MILLIS, backoffFactor = DEFAULT_BACKOFF_FACTOR) {\n    // Calculates an exponentially increasing value.\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\n    // and count to restore state.\n    const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n    // A random \"fuzz\" to avoid waves of retries.\n    // Deviation: randomFactor is required.\n    const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n        currBaseValue *\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n        // if we add or subtract.\n        (Math.random() - 0.5) *\n        2);\n    // Limits backoff to max to avoid effectively permanent backoff.\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provide English ordinal letters after a number\n */\nfunction ordinal(i) {\n    if (!Number.isFinite(i)) {\n        return `${i}`;\n    }\n    return i + indicator(i);\n}\nfunction indicator(i) {\n    i = Math.abs(i);\n    const cent = i % 100;\n    if (cent >= 10 && cent <= 20) {\n        return 'th';\n    }\n    const dec = i % 10;\n    if (dec === 1) {\n        return 'st';\n    }\n    if (dec === 2) {\n        return 'nd';\n    }\n    if (dec === 3) {\n        return 'rd';\n    }\n    return 'th';\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction getModularInstance(service) {\n    if (service && service._delegate) {\n        return service._delegate;\n    }\n    else {\n        return service;\n    }\n}\n\nexport { CONSTANTS, DecodeBase64StringError, Deferred, ErrorFactory, FirebaseError, MAX_VALUE_MILLIS, RANDOM_FACTOR, Sha1, areCookiesEnabled, assert, assertionError, async, base64, base64Decode, base64Encode, base64urlEncodeWithoutPadding, calculateBackoffMillis, contains, createMockUserToken, createSubscribe, decode, deepCopy, deepEqual, deepExtend, errorPrefix, extractQuerystring, getDefaultAppConfig, getDefaultEmulatorHost, getDefaultEmulatorHostnameAndPort, getDefaults, getExperimentalSetting, getGlobal, getModularInstance, getUA, isAdmin, isBrowser, isBrowserExtension, isCloudflareWorker, isElectron, isEmpty, isIE, isIndexedDBAvailable, isMobileCordova, isNode, isNodeSdk, isReactNative, isSafari, isUWP, isValidFormat, isValidTimestamp, isWebWorker, issuedAtTime, jsonEval, map, ordinal, promiseWithTimeout, querystring, querystringDecode, safeGet, stringLength, stringToByteArray, stringify, validateArgCount, validateCallback, validateContextObject, validateIndexedDBOpenable, validateNamespace };\n//# sourceMappingURL=index.esm2017.js.map\n","import { Deferred } from '@firebase/util';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nclass Component {\n    /**\n     *\n     * @param name The public service name, e.g. app, auth, firestore, database\n     * @param instanceFactory Service factory responsible for creating the public interface\n     * @param type whether the service provided by the component is public or private\n     */\n    constructor(name, instanceFactory, type) {\n        this.name = name;\n        this.instanceFactory = instanceFactory;\n        this.type = type;\n        this.multipleInstances = false;\n        /**\n         * Properties to be added to the service namespace\n         */\n        this.serviceProps = {};\n        this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\n        this.onInstanceCreated = null;\n    }\n    setInstantiationMode(mode) {\n        this.instantiationMode = mode;\n        return this;\n    }\n    setMultipleInstances(multipleInstances) {\n        this.multipleInstances = multipleInstances;\n        return this;\n    }\n    setServiceProps(props) {\n        this.serviceProps = props;\n        return this;\n    }\n    setInstanceCreatedCallback(callback) {\n        this.onInstanceCreated = callback;\n        return this;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nclass Provider {\n    constructor(name, container) {\n        this.name = name;\n        this.container = container;\n        this.component = null;\n        this.instances = new Map();\n        this.instancesDeferred = new Map();\n        this.instancesOptions = new Map();\n        this.onInitCallbacks = new Map();\n    }\n    /**\n     * @param identifier A provider can provide multiple instances of a service\n     * if this.component.multipleInstances is true.\n     */\n    get(identifier) {\n        // if multipleInstances is not supported, use the default name\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\n            const deferred = new Deferred();\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\n            if (this.isInitialized(normalizedIdentifier) ||\n                this.shouldAutoInitialize()) {\n                // initialize the service if it can be auto-initialized\n                try {\n                    const instance = this.getOrInitializeService({\n                        instanceIdentifier: normalizedIdentifier\n                    });\n                    if (instance) {\n                        deferred.resolve(instance);\n                    }\n                }\n                catch (e) {\n                    // when the instance factory throws an exception during get(), it should not cause\n                    // a fatal error. We just return the unresolved promise in this case.\n                }\n            }\n        }\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\n    }\n    getImmediate(options) {\n        var _a;\n        // if multipleInstances is not supported, use the default name\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\n        if (this.isInitialized(normalizedIdentifier) ||\n            this.shouldAutoInitialize()) {\n            try {\n                return this.getOrInitializeService({\n                    instanceIdentifier: normalizedIdentifier\n                });\n            }\n            catch (e) {\n                if (optional) {\n                    return null;\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        else {\n            // In case a component is not initialized and should/cannot be auto-initialized at the moment, return null if the optional flag is set, or throw\n            if (optional) {\n                return null;\n            }\n            else {\n                throw Error(`Service ${this.name} is not available`);\n            }\n        }\n    }\n    getComponent() {\n        return this.component;\n    }\n    setComponent(component) {\n        if (component.name !== this.name) {\n            throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\n        }\n        if (this.component) {\n            throw Error(`Component for ${this.name} has already been provided`);\n        }\n        this.component = component;\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n        if (!this.shouldAutoInitialize()) {\n            return;\n        }\n        // if the service is eager, initialize the default instance\n        if (isComponentEager(component)) {\n            try {\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n            }\n            catch (e) {\n                // when the instance factory for an eager Component throws an exception during the eager\n                // initialization, it should not cause a fatal error.\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\n                // a fatal error in this case?\n            }\n        }\n        // Create service instances for the pending promises and resolve them\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\n        // and all promises with resolve with it regardless of the identifier.\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\n            try {\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n                const instance = this.getOrInitializeService({\n                    instanceIdentifier: normalizedIdentifier\n                });\n                instanceDeferred.resolve(instance);\n            }\n            catch (e) {\n                // when the instance factory throws an exception, it should not cause\n                // a fatal error. We just leave the promise unresolved.\n            }\n        }\n    }\n    clearInstance(identifier = DEFAULT_ENTRY_NAME) {\n        this.instancesDeferred.delete(identifier);\n        this.instancesOptions.delete(identifier);\n        this.instances.delete(identifier);\n    }\n    // app.delete() will call this method on every provider to delete the services\n    // TODO: should we mark the provider as deleted?\n    async delete() {\n        const services = Array.from(this.instances.values());\n        await Promise.all([\n            ...services\n                .filter(service => 'INTERNAL' in service) // legacy services\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                .map(service => service.INTERNAL.delete()),\n            ...services\n                .filter(service => '_delete' in service) // modularized services\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                .map(service => service._delete())\n        ]);\n    }\n    isComponentSet() {\n        return this.component != null;\n    }\n    isInitialized(identifier = DEFAULT_ENTRY_NAME) {\n        return this.instances.has(identifier);\n    }\n    getOptions(identifier = DEFAULT_ENTRY_NAME) {\n        return this.instancesOptions.get(identifier) || {};\n    }\n    initialize(opts = {}) {\n        const { options = {} } = opts;\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\n        if (this.isInitialized(normalizedIdentifier)) {\n            throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\n        }\n        if (!this.isComponentSet()) {\n            throw Error(`Component ${this.name} has not been registered yet`);\n        }\n        const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier,\n            options\n        });\n        // resolve any pending promise waiting for the service instance\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\n            if (normalizedIdentifier === normalizedDeferredIdentifier) {\n                instanceDeferred.resolve(instance);\n            }\n        }\n        return instance;\n    }\n    /**\n     *\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n     *\n     * @param identifier An optional instance identifier\n     * @returns a function to unregister the callback\n     */\n    onInit(callback, identifier) {\n        var _a;\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\n        existingCallbacks.add(callback);\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n        const existingInstance = this.instances.get(normalizedIdentifier);\n        if (existingInstance) {\n            callback(existingInstance, normalizedIdentifier);\n        }\n        return () => {\n            existingCallbacks.delete(callback);\n        };\n    }\n    /**\n     * Invoke onInit callbacks synchronously\n     * @param instance the service instance`\n     */\n    invokeOnInitCallbacks(instance, identifier) {\n        const callbacks = this.onInitCallbacks.get(identifier);\n        if (!callbacks) {\n            return;\n        }\n        for (const callback of callbacks) {\n            try {\n                callback(instance, identifier);\n            }\n            catch (_a) {\n                // ignore errors in the onInit callback\n            }\n        }\n    }\n    getOrInitializeService({ instanceIdentifier, options = {} }) {\n        let instance = this.instances.get(instanceIdentifier);\n        if (!instance && this.component) {\n            instance = this.component.instanceFactory(this.container, {\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n                options\n            });\n            this.instances.set(instanceIdentifier, instance);\n            this.instancesOptions.set(instanceIdentifier, options);\n            /**\n             * Invoke onInit listeners.\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\n             * while onInit listeners are registered by consumers of the provider.\n             */\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\n            /**\n             * Order is important\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n             * makes `isInitialized()` return true.\n             */\n            if (this.component.onInstanceCreated) {\n                try {\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\n                }\n                catch (_a) {\n                    // ignore errors in the onInstanceCreatedCallback\n                }\n            }\n        }\n        return instance || null;\n    }\n    normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {\n        if (this.component) {\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n        }\n        else {\n            return identifier; // assume multiple instances are supported before the component is provided.\n        }\n    }\n    shouldAutoInitialize() {\n        return (!!this.component &&\n            this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */);\n    }\n}\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier) {\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\nfunction isComponentEager(component) {\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nclass ComponentContainer {\n    constructor(name) {\n        this.name = name;\n        this.providers = new Map();\n    }\n    /**\n     *\n     * @param component Component being added\n     * @param overwrite When a component with the same name has already been registered,\n     * if overwrite is true: overwrite the existing component with the new component and create a new\n     * provider with the new component. It can be useful in tests where you want to use different mocks\n     * for different tests.\n     * if overwrite is false: throw an exception\n     */\n    addComponent(component) {\n        const provider = this.getProvider(component.name);\n        if (provider.isComponentSet()) {\n            throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\n        }\n        provider.setComponent(component);\n    }\n    addOrOverwriteComponent(component) {\n        const provider = this.getProvider(component.name);\n        if (provider.isComponentSet()) {\n            // delete the existing provider from the container, so we can register the new component\n            this.providers.delete(component.name);\n        }\n        this.addComponent(component);\n    }\n    /**\n     * getProvider provides a type safe interface where it can only be called with a field name\n     * present in NameServiceMapping interface.\n     *\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\n     * themselves.\n     */\n    getProvider(name) {\n        if (this.providers.has(name)) {\n            return this.providers.get(name);\n        }\n        // create a Provider for a service that hasn't registered with Firebase\n        const provider = new Provider(name, this);\n        this.providers.set(name, provider);\n        return provider;\n    }\n    getProviders() {\n        return Array.from(this.providers.values());\n    }\n}\n\nexport { Component, ComponentContainer, Provider };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A container for all of the Logger instances\n */\nconst instances = [];\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\n})(LogLevel || (LogLevel = {}));\nconst levelStringToEnum = {\n    'debug': LogLevel.DEBUG,\n    'verbose': LogLevel.VERBOSE,\n    'info': LogLevel.INFO,\n    'warn': LogLevel.WARN,\n    'error': LogLevel.ERROR,\n    'silent': LogLevel.SILENT\n};\n/**\n * The default log level\n */\nconst defaultLogLevel = LogLevel.INFO;\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n    [LogLevel.DEBUG]: 'log',\n    [LogLevel.VERBOSE]: 'log',\n    [LogLevel.INFO]: 'info',\n    [LogLevel.WARN]: 'warn',\n    [LogLevel.ERROR]: 'error'\n};\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler = (instance, logType, ...args) => {\n    if (logType < instance.logLevel) {\n        return;\n    }\n    const now = new Date().toISOString();\n    const method = ConsoleMethod[logType];\n    if (method) {\n        console[method](`[${now}]  ${instance.name}:`, ...args);\n    }\n    else {\n        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\n    }\n};\nclass Logger {\n    /**\n     * Gives you an instance of a Logger to capture messages according to\n     * Firebase's logging scheme.\n     *\n     * @param name The name that the logs will be associated with\n     */\n    constructor(name) {\n        this.name = name;\n        /**\n         * The log level of the given Logger instance.\n         */\n        this._logLevel = defaultLogLevel;\n        /**\n         * The main (internal) log handler for the Logger instance.\n         * Can be set to a new function in internal package code but not by user.\n         */\n        this._logHandler = defaultLogHandler;\n        /**\n         * The optional, additional, user-defined log handler for the Logger instance.\n         */\n        this._userLogHandler = null;\n        /**\n         * Capture the current instance for later use\n         */\n        instances.push(this);\n    }\n    get logLevel() {\n        return this._logLevel;\n    }\n    set logLevel(val) {\n        if (!(val in LogLevel)) {\n            throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n        }\n        this._logLevel = val;\n    }\n    // Workaround for setter/getter having to be the same type.\n    setLogLevel(val) {\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n    }\n    get logHandler() {\n        return this._logHandler;\n    }\n    set logHandler(val) {\n        if (typeof val !== 'function') {\n            throw new TypeError('Value assigned to `logHandler` must be a function');\n        }\n        this._logHandler = val;\n    }\n    get userLogHandler() {\n        return this._userLogHandler;\n    }\n    set userLogHandler(val) {\n        this._userLogHandler = val;\n    }\n    /**\n     * The functions below are all based on the `console` interface\n     */\n    debug(...args) {\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n        this._logHandler(this, LogLevel.DEBUG, ...args);\n    }\n    log(...args) {\n        this._userLogHandler &&\n            this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\n    }\n    info(...args) {\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n        this._logHandler(this, LogLevel.INFO, ...args);\n    }\n    warn(...args) {\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n        this._logHandler(this, LogLevel.WARN, ...args);\n    }\n    error(...args) {\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n        this._logHandler(this, LogLevel.ERROR, ...args);\n    }\n}\nfunction setLogLevel(level) {\n    instances.forEach(inst => {\n        inst.setLogLevel(level);\n    });\n}\nfunction setUserLogHandler(logCallback, options) {\n    for (const instance of instances) {\n        let customLogLevel = null;\n        if (options && options.level) {\n            customLogLevel = levelStringToEnum[options.level];\n        }\n        if (logCallback === null) {\n            instance.userLogHandler = null;\n        }\n        else {\n            instance.userLogHandler = (instance, level, ...args) => {\n                const message = args\n                    .map(arg => {\n                    if (arg == null) {\n                        return null;\n                    }\n                    else if (typeof arg === 'string') {\n                        return arg;\n                    }\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\n                        return arg.toString();\n                    }\n                    else if (arg instanceof Error) {\n                        return arg.message;\n                    }\n                    else {\n                        try {\n                            return JSON.stringify(arg);\n                        }\n                        catch (ignored) {\n                            return null;\n                        }\n                    }\n                })\n                    .filter(arg => arg)\n                    .join(' ');\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\n                    logCallback({\n                        level: LogLevel[level].toLowerCase(),\n                        message,\n                        args,\n                        type: instance.name\n                    });\n                }\n            };\n        }\n    }\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm2017.js.map\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, base64Decode, getDefaultAppConfig, deepEqual, isBrowser, isWebWorker, FirebaseError, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass PlatformLoggerServiceImpl {\n    constructor(container) {\n        this.container = container;\n    }\n    // In initial implementation, this will be called by installations on\n    // auth token refresh, and installations will send this string.\n    getPlatformInfoString() {\n        const providers = this.container.getProviders();\n        // Loop through providers and get library/version pairs from any that are\n        // version components.\n        return providers\n            .map(provider => {\n            if (isVersionServiceProvider(provider)) {\n                const service = provider.getImmediate();\n                return `${service.library}/${service.version}`;\n            }\n            else {\n                return null;\n            }\n        })\n            .filter(logString => logString)\n            .join(' ');\n    }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider) {\n    const component = provider.getComponent();\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */;\n}\n\nconst name$q = \"@firebase/app\";\nconst version$1 = \"0.11.1\";\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst logger = new Logger('@firebase/app');\n\nconst name$p = \"@firebase/app-compat\";\n\nconst name$o = \"@firebase/analytics-compat\";\n\nconst name$n = \"@firebase/analytics\";\n\nconst name$m = \"@firebase/app-check-compat\";\n\nconst name$l = \"@firebase/app-check\";\n\nconst name$k = \"@firebase/auth\";\n\nconst name$j = \"@firebase/auth-compat\";\n\nconst name$i = \"@firebase/database\";\n\nconst name$h = \"@firebase/data-connect\";\n\nconst name$g = \"@firebase/database-compat\";\n\nconst name$f = \"@firebase/functions\";\n\nconst name$e = \"@firebase/functions-compat\";\n\nconst name$d = \"@firebase/installations\";\n\nconst name$c = \"@firebase/installations-compat\";\n\nconst name$b = \"@firebase/messaging\";\n\nconst name$a = \"@firebase/messaging-compat\";\n\nconst name$9 = \"@firebase/performance\";\n\nconst name$8 = \"@firebase/performance-compat\";\n\nconst name$7 = \"@firebase/remote-config\";\n\nconst name$6 = \"@firebase/remote-config-compat\";\n\nconst name$5 = \"@firebase/storage\";\n\nconst name$4 = \"@firebase/storage-compat\";\n\nconst name$3 = \"@firebase/firestore\";\n\nconst name$2 = \"@firebase/vertexai\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"11.3.1\";\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The default app name\n *\n * @internal\n */\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\nconst PLATFORM_LOG_STRING = {\n    [name$q]: 'fire-core',\n    [name$p]: 'fire-core-compat',\n    [name$n]: 'fire-analytics',\n    [name$o]: 'fire-analytics-compat',\n    [name$l]: 'fire-app-check',\n    [name$m]: 'fire-app-check-compat',\n    [name$k]: 'fire-auth',\n    [name$j]: 'fire-auth-compat',\n    [name$i]: 'fire-rtdb',\n    [name$h]: 'fire-data-connect',\n    [name$g]: 'fire-rtdb-compat',\n    [name$f]: 'fire-fn',\n    [name$e]: 'fire-fn-compat',\n    [name$d]: 'fire-iid',\n    [name$c]: 'fire-iid-compat',\n    [name$b]: 'fire-fcm',\n    [name$a]: 'fire-fcm-compat',\n    [name$9]: 'fire-perf',\n    [name$8]: 'fire-perf-compat',\n    [name$7]: 'fire-rc',\n    [name$6]: 'fire-rc-compat',\n    [name$5]: 'fire-gcs',\n    [name$4]: 'fire-gcs-compat',\n    [name$3]: 'fire-fst',\n    [name$1]: 'fire-fst-compat',\n    [name$2]: 'fire-vertex',\n    'fire-js': 'fire-js', // Platform identifier for JS SDK.\n    [name]: 'fire-js-all'\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */\nconst _apps = new Map();\n/**\n * @internal\n */\nconst _serverApps = new Map();\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst _components = new Map();\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nfunction _addComponent(app, component) {\n    try {\n        app.container.addComponent(component);\n    }\n    catch (e) {\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\n    }\n}\n/**\n *\n * @internal\n */\nfunction _addOrOverwriteComponent(app, component) {\n    app.container.addOrOverwriteComponent(component);\n}\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nfunction _registerComponent(component) {\n    const componentName = component.name;\n    if (_components.has(componentName)) {\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\n        return false;\n    }\n    _components.set(componentName, component);\n    // add the component to existing app instances\n    for (const app of _apps.values()) {\n        _addComponent(app, component);\n    }\n    for (const serverApp of _serverApps.values()) {\n        _addComponent(serverApp, component);\n    }\n    return true;\n}\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nfunction _getProvider(app, name) {\n    const heartbeatController = app.container\n        .getProvider('heartbeat')\n        .getImmediate({ optional: true });\n    if (heartbeatController) {\n        void heartbeatController.triggerHeartbeat();\n    }\n    return app.container.getProvider(name);\n}\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\n    _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n/**\n *\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\n *\n * @returns true if the provide object is of type FirebaseApp.\n *\n * @internal\n */\nfunction _isFirebaseApp(obj) {\n    return obj.options !== undefined;\n}\n/**\n *\n * @param obj - an object of type FirebaseApp.\n *\n * @returns true if the provided object is of type FirebaseServerAppImpl.\n *\n * @internal\n */\nfunction _isFirebaseServerApp(obj) {\n    if (obj === null || obj === undefined) {\n        return false;\n    }\n    return obj.settings !== undefined;\n}\n/**\n * Test only\n *\n * @internal\n */\nfunction _clearComponents() {\n    _components.clear();\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ERRORS = {\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\n        'call initializeApp() first',\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}'\",\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\n    [\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */]: 'Firebase Server App has been deleted',\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\n        'Firebase App instance.',\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n    [\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */]: 'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n    [\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */]: 'FirebaseServerApp is not for use in browser environments.'\n};\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass FirebaseAppImpl {\n    constructor(options, config, container) {\n        this._isDeleted = false;\n        this._options = Object.assign({}, options);\n        this._config = Object.assign({}, config);\n        this._name = config.name;\n        this._automaticDataCollectionEnabled =\n            config.automaticDataCollectionEnabled;\n        this._container = container;\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\n    }\n    get automaticDataCollectionEnabled() {\n        this.checkDestroyed();\n        return this._automaticDataCollectionEnabled;\n    }\n    set automaticDataCollectionEnabled(val) {\n        this.checkDestroyed();\n        this._automaticDataCollectionEnabled = val;\n    }\n    get name() {\n        this.checkDestroyed();\n        return this._name;\n    }\n    get options() {\n        this.checkDestroyed();\n        return this._options;\n    }\n    get config() {\n        this.checkDestroyed();\n        return this._config;\n    }\n    get container() {\n        return this._container;\n    }\n    get isDeleted() {\n        return this._isDeleted;\n    }\n    set isDeleted(val) {\n        this._isDeleted = val;\n    }\n    /**\n     * This function will throw an Error if the App has already been deleted -\n     * use before performing API actions on the App.\n     */\n    checkDestroyed() {\n        if (this.isDeleted) {\n            throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, { appName: this._name });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Parse the token and check to see if the `exp` claim is in the future.\n// Reports an error to the console if the token or claim could not be parsed, or if `exp` is in\n// the past.\nfunction validateTokenTTL(base64Token, tokenName) {\n    const secondPart = base64Decode(base64Token.split('.')[1]);\n    if (secondPart === null) {\n        console.error(`FirebaseServerApp ${tokenName} is invalid: second part could not be parsed.`);\n        return;\n    }\n    const expClaim = JSON.parse(secondPart).exp;\n    if (expClaim === undefined) {\n        console.error(`FirebaseServerApp ${tokenName} is invalid: expiration claim could not be parsed`);\n        return;\n    }\n    const exp = JSON.parse(secondPart).exp * 1000;\n    const now = new Date().getTime();\n    const diff = exp - now;\n    if (diff <= 0) {\n        console.error(`FirebaseServerApp ${tokenName} is invalid: the token has expired.`);\n    }\n}\nclass FirebaseServerAppImpl extends FirebaseAppImpl {\n    constructor(options, serverConfig, name, container) {\n        // Build configuration parameters for the FirebaseAppImpl base class.\n        const automaticDataCollectionEnabled = serverConfig.automaticDataCollectionEnabled !== undefined\n            ? serverConfig.automaticDataCollectionEnabled\n            : false;\n        // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\n        const config = {\n            name,\n            automaticDataCollectionEnabled\n        };\n        if (options.apiKey !== undefined) {\n            // Construct the parent FirebaseAppImp object.\n            super(options, config, container);\n        }\n        else {\n            const appImpl = options;\n            super(appImpl.options, config, container);\n        }\n        // Now construct the data for the FirebaseServerAppImpl.\n        this._serverConfig = Object.assign({ automaticDataCollectionEnabled }, serverConfig);\n        // Ensure that the current time is within the `authIdtoken` window of validity.\n        if (this._serverConfig.authIdToken) {\n            validateTokenTTL(this._serverConfig.authIdToken, 'authIdToken');\n        }\n        // Ensure that the current time is within the `appCheckToken` window of validity.\n        if (this._serverConfig.appCheckToken) {\n            validateTokenTTL(this._serverConfig.appCheckToken, 'appCheckToken');\n        }\n        this._finalizationRegistry = null;\n        if (typeof FinalizationRegistry !== 'undefined') {\n            this._finalizationRegistry = new FinalizationRegistry(() => {\n                this.automaticCleanup();\n            });\n        }\n        this._refCount = 0;\n        this.incRefCount(this._serverConfig.releaseOnDeref);\n        // Do not retain a hard reference to the dref object, otherwise the FinalizationRegistry\n        // will never trigger.\n        this._serverConfig.releaseOnDeref = undefined;\n        serverConfig.releaseOnDeref = undefined;\n        registerVersion(name$q, version$1, 'serverapp');\n    }\n    toJSON() {\n        return undefined;\n    }\n    get refCount() {\n        return this._refCount;\n    }\n    // Increment the reference count of this server app. If an object is provided, register it\n    // with the finalization registry.\n    incRefCount(obj) {\n        if (this.isDeleted) {\n            return;\n        }\n        this._refCount++;\n        if (obj !== undefined && this._finalizationRegistry !== null) {\n            this._finalizationRegistry.register(obj, this);\n        }\n    }\n    // Decrement the reference count.\n    decRefCount() {\n        if (this.isDeleted) {\n            return 0;\n        }\n        return --this._refCount;\n    }\n    // Invoked by the FinalizationRegistry callback to note that this app should go through its\n    // reference counts and delete itself if no reference count remain. The coordinating logic that\n    // handles this is in deleteApp(...).\n    automaticCleanup() {\n        void deleteApp(this);\n    }\n    get settings() {\n        this.checkDestroyed();\n        return this._serverConfig;\n    }\n    /**\n     * This function will throw an Error if the App has already been deleted -\n     * use before performing API actions on the App.\n     */\n    checkDestroyed() {\n        if (this.isDeleted) {\n            throw ERROR_FACTORY.create(\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The current SDK version.\n *\n * @public\n */\nconst SDK_VERSION = version;\nfunction initializeApp(_options, rawConfig = {}) {\n    let options = _options;\n    if (typeof rawConfig !== 'object') {\n        const name = rawConfig;\n        rawConfig = { name };\n    }\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\n    const name = config.name;\n    if (typeof name !== 'string' || !name) {\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\n            appName: String(name)\n        });\n    }\n    options || (options = getDefaultAppConfig());\n    if (!options) {\n        throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\n    }\n    const existingApp = _apps.get(name);\n    if (existingApp) {\n        // return the existing app if options and config deep equal the ones in the existing app.\n        if (deepEqual(options, existingApp.options) &&\n            deepEqual(config, existingApp.config)) {\n            return existingApp;\n        }\n        else {\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, { appName: name });\n        }\n    }\n    const container = new ComponentContainer(name);\n    for (const component of _components.values()) {\n        container.addComponent(component);\n    }\n    const newApp = new FirebaseAppImpl(options, config, container);\n    _apps.set(name, newApp);\n    return newApp;\n}\nfunction initializeServerApp(_options, _serverAppConfig) {\n    if (isBrowser() && !isWebWorker()) {\n        // FirebaseServerApp isn't designed to be run in browsers.\n        throw ERROR_FACTORY.create(\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */);\n    }\n    if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n        _serverAppConfig.automaticDataCollectionEnabled = false;\n    }\n    let appOptions;\n    if (_isFirebaseApp(_options)) {\n        appOptions = _options.options;\n    }\n    else {\n        appOptions = _options;\n    }\n    // Build an app name based on a hash of the configuration options.\n    const nameObj = Object.assign(Object.assign({}, _serverAppConfig), appOptions);\n    // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n    // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n    if (nameObj.releaseOnDeref !== undefined) {\n        delete nameObj.releaseOnDeref;\n    }\n    const hashCode = (s) => {\n        return [...s].reduce((hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0, 0);\n    };\n    if (_serverAppConfig.releaseOnDeref !== undefined) {\n        if (typeof FinalizationRegistry === 'undefined') {\n            throw ERROR_FACTORY.create(\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */, {});\n        }\n    }\n    const nameString = '' + hashCode(JSON.stringify(nameObj));\n    const existingApp = _serverApps.get(nameString);\n    if (existingApp) {\n        existingApp.incRefCount(_serverAppConfig.releaseOnDeref);\n        return existingApp;\n    }\n    const container = new ComponentContainer(nameString);\n    for (const component of _components.values()) {\n        container.addComponent(component);\n    }\n    const newApp = new FirebaseServerAppImpl(appOptions, _serverAppConfig, nameString, container);\n    _serverApps.set(nameString, newApp);\n    return newApp;\n}\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\n    const app = _apps.get(name);\n    if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n        return initializeApp();\n    }\n    if (!app) {\n        throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\n    }\n    return app;\n}\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nfunction getApps() {\n    return Array.from(_apps.values());\n}\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nasync function deleteApp(app) {\n    let cleanupProviders = false;\n    const name = app.name;\n    if (_apps.has(name)) {\n        cleanupProviders = true;\n        _apps.delete(name);\n    }\n    else if (_serverApps.has(name)) {\n        const firebaseServerApp = app;\n        if (firebaseServerApp.decRefCount() <= 0) {\n            _serverApps.delete(name);\n            cleanupProviders = true;\n        }\n    }\n    if (cleanupProviders) {\n        await Promise.all(app.container\n            .getProviders()\n            .map(provider => provider.delete()));\n        app.isDeleted = true;\n    }\n}\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nfunction registerVersion(libraryKeyOrName, version, variant) {\n    var _a;\n    // TODO: We can use this check to whitelist strings when/if we set up\n    // a good whitelist system.\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\n    if (variant) {\n        library += `-${variant}`;\n    }\n    const libraryMismatch = library.match(/\\s|\\//);\n    const versionMismatch = version.match(/\\s|\\//);\n    if (libraryMismatch || versionMismatch) {\n        const warning = [\n            `Unable to register library \"${library}\" with version \"${version}\":`\n        ];\n        if (libraryMismatch) {\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\n        }\n        if (libraryMismatch && versionMismatch) {\n            warning.push('and');\n        }\n        if (versionMismatch) {\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\n        }\n        logger.warn(warning.join(' '));\n        return;\n    }\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* ComponentType.VERSION */));\n}\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nfunction onLog(logCallback, options) {\n    if (logCallback !== null && typeof logCallback !== 'function') {\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\n    }\n    setUserLogHandler(logCallback, options);\n}\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nfunction setLogLevel(logLevel) {\n    setLogLevel$1(logLevel);\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\nlet dbPromise = null;\nfunction getDbPromise() {\n    if (!dbPromise) {\n        dbPromise = openDB(DB_NAME, DB_VERSION, {\n            upgrade: (db, oldVersion) => {\n                // We don't use 'break' in this switch statement, the fall-through\n                // behavior is what we want, because if there are multiple versions between\n                // the old version and the current version, we want ALL the migrations\n                // that correspond to those versions to run, not only the last one.\n                // eslint-disable-next-line default-case\n                switch (oldVersion) {\n                    case 0:\n                        try {\n                            db.createObjectStore(STORE_NAME);\n                        }\n                        catch (e) {\n                            // Safari/iOS browsers throw occasional exceptions on\n                            // db.createObjectStore() that may be a bug. Avoid blocking\n                            // the rest of the app functionality.\n                            console.warn(e);\n                        }\n                }\n            }\n        }).catch(e => {\n            throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\n                originalErrorMessage: e.message\n            });\n        });\n    }\n    return dbPromise;\n}\nasync function readHeartbeatsFromIndexedDB(app) {\n    try {\n        const db = await getDbPromise();\n        const tx = db.transaction(STORE_NAME);\n        const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n        // We already have the value but tx.done can throw,\n        // so we need to await it here to catch errors\n        await tx.done;\n        return result;\n    }\n    catch (e) {\n        if (e instanceof FirebaseError) {\n            logger.warn(e.message);\n        }\n        else {\n            const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\n            });\n            logger.warn(idbGetError.message);\n        }\n    }\n}\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\n    try {\n        const db = await getDbPromise();\n        const tx = db.transaction(STORE_NAME, 'readwrite');\n        const objectStore = tx.objectStore(STORE_NAME);\n        await objectStore.put(heartbeatObject, computeKey(app));\n        await tx.done;\n    }\n    catch (e) {\n        if (e instanceof FirebaseError) {\n            logger.warn(e.message);\n        }\n        else {\n            const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\n            });\n            logger.warn(idbGetError.message);\n        }\n    }\n}\nfunction computeKey(app) {\n    return `${app.name}!${app.options.appId}`;\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst MAX_HEADER_BYTES = 1024;\nconst MAX_NUM_STORED_HEARTBEATS = 30;\nclass HeartbeatServiceImpl {\n    constructor(container) {\n        this.container = container;\n        /**\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n         * the header string.\n         * Stores one record per date. This will be consolidated into the standard\n         * format of one record per user agent string before being sent as a header.\n         * Populated from indexedDB when the controller is instantiated and should\n         * be kept in sync with indexedDB.\n         * Leave public for easier testing.\n         */\n        this._heartbeatsCache = null;\n        const app = this.container.getProvider('app').getImmediate();\n        this._storage = new HeartbeatStorageImpl(app);\n        this._heartbeatsCachePromise = this._storage.read().then(result => {\n            this._heartbeatsCache = result;\n            return result;\n        });\n    }\n    /**\n     * Called to report a heartbeat. The function will generate\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n     * to IndexedDB.\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\n     * already logged, subsequent calls to this function in the same day will be ignored.\n     */\n    async triggerHeartbeat() {\n        var _a, _b;\n        try {\n            const platformLogger = this.container\n                .getProvider('platform-logger')\n                .getImmediate();\n            // This is the \"Firebase user agent\" string from the platform logger\n            // service, not the browser user agent.\n            const agent = platformLogger.getPlatformInfoString();\n            const date = getUTCDateString();\n            if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null) {\n                this._heartbeatsCache = await this._heartbeatsCachePromise;\n                // If we failed to construct a heartbeats cache, then return immediately.\n                if (((_b = this._heartbeatsCache) === null || _b === void 0 ? void 0 : _b.heartbeats) == null) {\n                    return;\n                }\n            }\n            // Do not store a heartbeat if one is already stored for this day\n            // or if a header has already been sent today.\n            if (this._heartbeatsCache.lastSentHeartbeatDate === date ||\n                this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\n                return;\n            }\n            else {\n                // There is no entry for this date. Create one.\n                this._heartbeatsCache.heartbeats.push({ date, agent });\n                // If the number of stored heartbeats exceeds the maximum number of stored heartbeats, remove the heartbeat with the earliest date.\n                // Since this is executed each time a heartbeat is pushed, the limit can only be exceeded by one, so only one needs to be removed.\n                if (this._heartbeatsCache.heartbeats.length > MAX_NUM_STORED_HEARTBEATS) {\n                    const earliestHeartbeatIdx = getEarliestHeartbeatIdx(this._heartbeatsCache.heartbeats);\n                    this._heartbeatsCache.heartbeats.splice(earliestHeartbeatIdx, 1);\n                }\n            }\n            return this._storage.overwrite(this._heartbeatsCache);\n        }\n        catch (e) {\n            logger.warn(e);\n        }\n    }\n    /**\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n     * It also clears all heartbeats from memory as well as in IndexedDB.\n     *\n     * NOTE: Consuming product SDKs should not send the header if this method\n     * returns an empty string.\n     */\n    async getHeartbeatsHeader() {\n        var _a;\n        try {\n            if (this._heartbeatsCache === null) {\n                await this._heartbeatsCachePromise;\n            }\n            // If it's still null or the array is empty, there is no data to send.\n            if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null ||\n                this._heartbeatsCache.heartbeats.length === 0) {\n                return '';\n            }\n            const date = getUTCDateString();\n            // Extract as many heartbeats from the cache as will fit under the size limit.\n            const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\n            const headerString = base64urlEncodeWithoutPadding(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));\n            // Store last sent date to prevent another being logged/sent for the same day.\n            this._heartbeatsCache.lastSentHeartbeatDate = date;\n            if (unsentEntries.length > 0) {\n                // Store any unsent entries if they exist.\n                this._heartbeatsCache.heartbeats = unsentEntries;\n                // This seems more likely than emptying the array (below) to lead to some odd state\n                // since the cache isn't empty and this will be called again on the next request,\n                // and is probably safest if we await it.\n                await this._storage.overwrite(this._heartbeatsCache);\n            }\n            else {\n                this._heartbeatsCache.heartbeats = [];\n                // Do not wait for this, to reduce latency.\n                void this._storage.overwrite(this._heartbeatsCache);\n            }\n            return headerString;\n        }\n        catch (e) {\n            logger.warn(e);\n            return '';\n        }\n    }\n}\nfunction getUTCDateString() {\n    const today = new Date();\n    // Returns date format 'YYYY-MM-DD'\n    return today.toISOString().substring(0, 10);\n}\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\n    // Heartbeats grouped by user agent in the standard format to be sent in\n    // the header.\n    const heartbeatsToSend = [];\n    // Single date format heartbeats that are not sent.\n    let unsentEntries = heartbeatsCache.slice();\n    for (const singleDateHeartbeat of heartbeatsCache) {\n        // Look for an existing entry with the same user agent.\n        const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\n        if (!heartbeatEntry) {\n            // If no entry for this user agent exists, create one.\n            heartbeatsToSend.push({\n                agent: singleDateHeartbeat.agent,\n                dates: [singleDateHeartbeat.date]\n            });\n            if (countBytes(heartbeatsToSend) > maxSize) {\n                // If the header would exceed max size, remove the added heartbeat\n                // entry and stop adding to the header.\n                heartbeatsToSend.pop();\n                break;\n            }\n        }\n        else {\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\n            // If the header would exceed max size, remove the added date\n            // and stop adding to the header.\n            if (countBytes(heartbeatsToSend) > maxSize) {\n                heartbeatEntry.dates.pop();\n                break;\n            }\n        }\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n        // quota and the loop breaks early.)\n        unsentEntries = unsentEntries.slice(1);\n    }\n    return {\n        heartbeatsToSend,\n        unsentEntries\n    };\n}\nclass HeartbeatStorageImpl {\n    constructor(app) {\n        this.app = app;\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n    }\n    async runIndexedDBEnvironmentCheck() {\n        if (!isIndexedDBAvailable()) {\n            return false;\n        }\n        else {\n            return validateIndexedDBOpenable()\n                .then(() => true)\n                .catch(() => false);\n        }\n    }\n    /**\n     * Read all heartbeats.\n     */\n    async read() {\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\n        if (!canUseIndexedDB) {\n            return { heartbeats: [] };\n        }\n        else {\n            const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n            if (idbHeartbeatObject === null || idbHeartbeatObject === void 0 ? void 0 : idbHeartbeatObject.heartbeats) {\n                return idbHeartbeatObject;\n            }\n            else {\n                return { heartbeats: [] };\n            }\n        }\n    }\n    // overwrite the storage with the provided heartbeats\n    async overwrite(heartbeatsObject) {\n        var _a;\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\n        if (!canUseIndexedDB) {\n            return;\n        }\n        else {\n            const existingHeartbeatsObject = await this.read();\n            return writeHeartbeatsToIndexedDB(this.app, {\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n                heartbeats: heartbeatsObject.heartbeats\n            });\n        }\n    }\n    // add heartbeats\n    async add(heartbeatsObject) {\n        var _a;\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\n        if (!canUseIndexedDB) {\n            return;\n        }\n        else {\n            const existingHeartbeatsObject = await this.read();\n            return writeHeartbeatsToIndexedDB(this.app, {\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n                heartbeats: [\n                    ...existingHeartbeatsObject.heartbeats,\n                    ...heartbeatsObject.heartbeats\n                ]\n            });\n        }\n    }\n}\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nfunction countBytes(heartbeatsCache) {\n    // base64 has a restricted set of characters, all of which should be 1 byte.\n    return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })).length;\n}\n/**\n * Returns the index of the heartbeat with the earliest date.\n * If the heartbeats array is empty, -1 is returned.\n */\nfunction getEarliestHeartbeatIdx(heartbeats) {\n    if (heartbeats.length === 0) {\n        return -1;\n    }\n    let earliestHeartbeatIdx = 0;\n    let earliestHeartbeatDate = heartbeats[0].date;\n    for (let i = 1; i < heartbeats.length; i++) {\n        if (heartbeats[i].date < earliestHeartbeatDate) {\n            earliestHeartbeatDate = heartbeats[i].date;\n            earliestHeartbeatIdx = i;\n        }\n    }\n    return earliestHeartbeatIdx;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction registerCoreComponents(variant) {\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\n    _registerComponent(new Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\n    // Register `app` package.\n    registerVersion(name$q, version$1, variant);\n    // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n    registerVersion(name$q, version$1, 'esm2017');\n    // Register platform SDK identifier (no version).\n    registerVersion('fire-js', '');\n}\n\n/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\nregisterCoreComponents('');\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _isFirebaseApp, _isFirebaseServerApp, _registerComponent, _removeServiceInstance, _serverApps, deleteApp, getApp, getApps, initializeApp, initializeServerApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n","import { _getProvider, getApp, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\nconst name = \"@firebase/installations\";\nconst version = \"0.6.12\";\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst PENDING_TIMEOUT_MS = 10000;\nconst PACKAGE_VERSION = `w:${version}`;\nconst INTERNAL_AUTH_VERSION = 'FIS_v2';\nconst INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\nconst TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\nconst SERVICE = 'installations';\nconst SERVICE_NAME = 'Installations';\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ERROR_DESCRIPTION_MAP = {\n    [\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\n    [\"not-registered\" /* ErrorCode.NOT_REGISTERED */]: 'Firebase Installation is not registered.',\n    [\"installation-not-found\" /* ErrorCode.INSTALLATION_NOT_FOUND */]: 'Firebase Installation not found.',\n    [\"request-failed\" /* ErrorCode.REQUEST_FAILED */]: '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n    [\"app-offline\" /* ErrorCode.APP_OFFLINE */]: 'Could not process request. Application offline.',\n    [\"delete-pending-registration\" /* ErrorCode.DELETE_PENDING_REGISTRATION */]: \"Can't delete installation while there is a pending registration request.\"\n};\nconst ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nfunction isServerError(error) {\n    return (error instanceof FirebaseError &&\n        error.code.includes(\"request-failed\" /* ErrorCode.REQUEST_FAILED */));\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction getInstallationsEndpoint({ projectId }) {\n    return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\nfunction extractAuthTokenInfoFromResponse(response) {\n    return {\n        token: response.token,\n        requestStatus: 2 /* RequestStatus.COMPLETED */,\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n        creationTime: Date.now()\n    };\n}\nasync function getErrorFromResponse(requestName, response) {\n    const responseJson = await response.json();\n    const errorData = responseJson.error;\n    return ERROR_FACTORY.create(\"request-failed\" /* ErrorCode.REQUEST_FAILED */, {\n        requestName,\n        serverCode: errorData.code,\n        serverMessage: errorData.message,\n        serverStatus: errorData.status\n    });\n}\nfunction getHeaders({ apiKey }) {\n    return new Headers({\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'x-goog-api-key': apiKey\n    });\n}\nfunction getHeadersWithAuth(appConfig, { refreshToken }) {\n    const headers = getHeaders(appConfig);\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\n    return headers;\n}\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nasync function retryIfServerError(fn) {\n    const result = await fn();\n    if (result.status >= 500 && result.status < 600) {\n        // Internal Server Error. Retry request.\n        return fn();\n    }\n    return result;\n}\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\n    // This works because the server will never respond with fractions of a second.\n    return Number(responseExpiresIn.replace('s', '000'));\n}\nfunction getAuthorizationHeader(refreshToken) {\n    return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function createInstallationRequest({ appConfig, heartbeatServiceProvider }, { fid }) {\n    const endpoint = getInstallationsEndpoint(appConfig);\n    const headers = getHeaders(appConfig);\n    // If heartbeat service exists, add the heartbeat string to the header.\n    const heartbeatService = heartbeatServiceProvider.getImmediate({\n        optional: true\n    });\n    if (heartbeatService) {\n        const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n        if (heartbeatsHeader) {\n            headers.append('x-firebase-client', heartbeatsHeader);\n        }\n    }\n    const body = {\n        fid,\n        authVersion: INTERNAL_AUTH_VERSION,\n        appId: appConfig.appId,\n        sdkVersion: PACKAGE_VERSION\n    };\n    const request = {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(body)\n    };\n    const response = await retryIfServerError(() => fetch(endpoint, request));\n    if (response.ok) {\n        const responseValue = await response.json();\n        const registeredInstallationEntry = {\n            fid: responseValue.fid || fid,\n            registrationStatus: 2 /* RequestStatus.COMPLETED */,\n            refreshToken: responseValue.refreshToken,\n            authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n        };\n        return registeredInstallationEntry;\n    }\n    else {\n        throw await getErrorFromResponse('Create Installation', response);\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Returns a promise that resolves after given time passes. */\nfunction sleep(ms) {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction bufferToBase64UrlSafe(array) {\n    const b64 = btoa(String.fromCharCode(...array));\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nconst INVALID_FID = '';\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nfunction generateFid() {\n    try {\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n        // bytes. our implementation generates a 17 byte array instead.\n        const fidByteArray = new Uint8Array(17);\n        const crypto = self.crypto || self.msCrypto;\n        crypto.getRandomValues(fidByteArray);\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\n        fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n        const fid = encode(fidByteArray);\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n    }\n    catch (_a) {\n        // FID generation errored\n        return INVALID_FID;\n    }\n}\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray) {\n    const b64String = bufferToBase64UrlSafe(fidByteArray);\n    // Remove the 23rd character that was added because of the extra 4 bits at the\n    // end of our 17 byte array, and the '=' padding.\n    return b64String.substr(0, 22);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Returns a string key that can be used to identify the app. */\nfunction getKey(appConfig) {\n    return `${appConfig.appName}!${appConfig.appId}`;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst fidChangeCallbacks = new Map();\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nfunction fidChanged(appConfig, fid) {\n    const key = getKey(appConfig);\n    callFidChangeCallbacks(key, fid);\n    broadcastFidChange(key, fid);\n}\nfunction addCallback(appConfig, callback) {\n    // Open the broadcast channel if it's not already open,\n    // to be able to listen to change events from other tabs.\n    getBroadcastChannel();\n    const key = getKey(appConfig);\n    let callbackSet = fidChangeCallbacks.get(key);\n    if (!callbackSet) {\n        callbackSet = new Set();\n        fidChangeCallbacks.set(key, callbackSet);\n    }\n    callbackSet.add(callback);\n}\nfunction removeCallback(appConfig, callback) {\n    const key = getKey(appConfig);\n    const callbackSet = fidChangeCallbacks.get(key);\n    if (!callbackSet) {\n        return;\n    }\n    callbackSet.delete(callback);\n    if (callbackSet.size === 0) {\n        fidChangeCallbacks.delete(key);\n    }\n    // Close broadcast channel if there are no more callbacks.\n    closeBroadcastChannel();\n}\nfunction callFidChangeCallbacks(key, fid) {\n    const callbacks = fidChangeCallbacks.get(key);\n    if (!callbacks) {\n        return;\n    }\n    for (const callback of callbacks) {\n        callback(fid);\n    }\n}\nfunction broadcastFidChange(key, fid) {\n    const channel = getBroadcastChannel();\n    if (channel) {\n        channel.postMessage({ key, fid });\n    }\n    closeBroadcastChannel();\n}\nlet broadcastChannel = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel() {\n    if (!broadcastChannel && 'BroadcastChannel' in self) {\n        broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n        broadcastChannel.onmessage = e => {\n            callFidChangeCallbacks(e.data.key, e.data.fid);\n        };\n    }\n    return broadcastChannel;\n}\nfunction closeBroadcastChannel() {\n    if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n        broadcastChannel.close();\n        broadcastChannel = null;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\nlet dbPromise = null;\nfunction getDbPromise() {\n    if (!dbPromise) {\n        dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n            upgrade: (db, oldVersion) => {\n                // We don't use 'break' in this switch statement, the fall-through\n                // behavior is what we want, because if there are multiple versions between\n                // the old version and the current version, we want ALL the migrations\n                // that correspond to those versions to run, not only the last one.\n                // eslint-disable-next-line default-case\n                switch (oldVersion) {\n                    case 0:\n                        db.createObjectStore(OBJECT_STORE_NAME);\n                }\n            }\n        });\n    }\n    return dbPromise;\n}\n/** Assigns or overwrites the record for the given key with the given value. */\nasync function set(appConfig, value) {\n    const key = getKey(appConfig);\n    const db = await getDbPromise();\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n    const oldValue = (await objectStore.get(key));\n    await objectStore.put(value, key);\n    await tx.done;\n    if (!oldValue || oldValue.fid !== value.fid) {\n        fidChanged(appConfig, value.fid);\n    }\n    return value;\n}\n/** Removes record(s) from the objectStore that match the given key. */\nasync function remove(appConfig) {\n    const key = getKey(appConfig);\n    const db = await getDbPromise();\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n    await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n    await tx.done;\n}\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nasync function update(appConfig, updateFn) {\n    const key = getKey(appConfig);\n    const db = await getDbPromise();\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n    const store = tx.objectStore(OBJECT_STORE_NAME);\n    const oldValue = (await store.get(key));\n    const newValue = updateFn(oldValue);\n    if (newValue === undefined) {\n        await store.delete(key);\n    }\n    else {\n        await store.put(newValue, key);\n    }\n    await tx.done;\n    if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n        fidChanged(appConfig, newValue.fid);\n    }\n    return newValue;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nasync function getInstallationEntry(installations) {\n    let registrationPromise;\n    const installationEntry = await update(installations.appConfig, oldEntry => {\n        const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n        const entryWithPromise = triggerRegistrationIfNecessary(installations, installationEntry);\n        registrationPromise = entryWithPromise.registrationPromise;\n        return entryWithPromise.installationEntry;\n    });\n    if (installationEntry.fid === INVALID_FID) {\n        // FID generation failed. Waiting for the FID from the server.\n        return { installationEntry: await registrationPromise };\n    }\n    return {\n        installationEntry,\n        registrationPromise\n    };\n}\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(oldEntry) {\n    const entry = oldEntry || {\n        fid: generateFid(),\n        registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n    };\n    return clearTimedOutRequest(entry);\n}\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(installations, installationEntry) {\n    if (installationEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n        if (!navigator.onLine) {\n            // Registration required but app is offline.\n            const registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */));\n            return {\n                installationEntry,\n                registrationPromise: registrationPromiseWithError\n            };\n        }\n        // Try registering. Change status to IN_PROGRESS.\n        const inProgressEntry = {\n            fid: installationEntry.fid,\n            registrationStatus: 1 /* RequestStatus.IN_PROGRESS */,\n            registrationTime: Date.now()\n        };\n        const registrationPromise = registerInstallation(installations, inProgressEntry);\n        return { installationEntry: inProgressEntry, registrationPromise };\n    }\n    else if (installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n        return {\n            installationEntry,\n            registrationPromise: waitUntilFidRegistration(installations)\n        };\n    }\n    else {\n        return { installationEntry };\n    }\n}\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(installations, installationEntry) {\n    try {\n        const registeredInstallationEntry = await createInstallationRequest(installations, installationEntry);\n        return set(installations.appConfig, registeredInstallationEntry);\n    }\n    catch (e) {\n        if (isServerError(e) && e.customData.serverCode === 409) {\n            // Server returned a \"FID cannot be used\" error.\n            // Generate a new ID next time.\n            await remove(installations.appConfig);\n        }\n        else {\n            // Registration failed. Set FID as not registered.\n            await set(installations.appConfig, {\n                fid: installationEntry.fid,\n                registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n            });\n        }\n        throw e;\n    }\n}\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(installations) {\n    // Unfortunately, there is no way of reliably observing when a value in\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n    // so we need to poll.\n    let entry = await updateInstallationRequest(installations.appConfig);\n    while (entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n        // createInstallation request still in progress.\n        await sleep(100);\n        entry = await updateInstallationRequest(installations.appConfig);\n    }\n    if (entry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n        // The request timed out or failed in a different call. Try again.\n        const { installationEntry, registrationPromise } = await getInstallationEntry(installations);\n        if (registrationPromise) {\n            return registrationPromise;\n        }\n        else {\n            // if there is no registrationPromise, entry is registered.\n            return installationEntry;\n        }\n    }\n    return entry;\n}\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(appConfig) {\n    return update(appConfig, oldEntry => {\n        if (!oldEntry) {\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* ErrorCode.INSTALLATION_NOT_FOUND */);\n        }\n        return clearTimedOutRequest(oldEntry);\n    });\n}\nfunction clearTimedOutRequest(entry) {\n    if (hasInstallationRequestTimedOut(entry)) {\n        return {\n            fid: entry.fid,\n            registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n        };\n    }\n    return entry;\n}\nfunction hasInstallationRequestTimedOut(installationEntry) {\n    return (installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */ &&\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function generateAuthTokenRequest({ appConfig, heartbeatServiceProvider }, installationEntry) {\n    const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n    const headers = getHeadersWithAuth(appConfig, installationEntry);\n    // If heartbeat service exists, add the heartbeat string to the header.\n    const heartbeatService = heartbeatServiceProvider.getImmediate({\n        optional: true\n    });\n    if (heartbeatService) {\n        const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n        if (heartbeatsHeader) {\n            headers.append('x-firebase-client', heartbeatsHeader);\n        }\n    }\n    const body = {\n        installation: {\n            sdkVersion: PACKAGE_VERSION,\n            appId: appConfig.appId\n        }\n    };\n    const request = {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(body)\n    };\n    const response = await retryIfServerError(() => fetch(endpoint, request));\n    if (response.ok) {\n        const responseValue = await response.json();\n        const completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\n        return completedAuthToken;\n    }\n    else {\n        throw await getErrorFromResponse('Generate Auth Token', response);\n    }\n}\nfunction getGenerateAuthTokenEndpoint(appConfig, { fid }) {\n    return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nasync function refreshAuthToken(installations, forceRefresh = false) {\n    let tokenPromise;\n    const entry = await update(installations.appConfig, oldEntry => {\n        if (!isEntryRegistered(oldEntry)) {\n            throw ERROR_FACTORY.create(\"not-registered\" /* ErrorCode.NOT_REGISTERED */);\n        }\n        const oldAuthToken = oldEntry.authToken;\n        if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n            // There is a valid token in the DB.\n            return oldEntry;\n        }\n        else if (oldAuthToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n            // There already is a token request in progress.\n            tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n            return oldEntry;\n        }\n        else {\n            // No token or token expired.\n            if (!navigator.onLine) {\n                throw ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */);\n            }\n            const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n            tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n            return inProgressEntry;\n        }\n    });\n    const authToken = tokenPromise\n        ? await tokenPromise\n        : entry.authToken;\n    return authToken;\n}\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(installations, forceRefresh) {\n    // Unfortunately, there is no way of reliably observing when a value in\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n    // so we need to poll.\n    let entry = await updateAuthTokenRequest(installations.appConfig);\n    while (entry.authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n        // generateAuthToken still in progress.\n        await sleep(100);\n        entry = await updateAuthTokenRequest(installations.appConfig);\n    }\n    const authToken = entry.authToken;\n    if (authToken.requestStatus === 0 /* RequestStatus.NOT_STARTED */) {\n        // The request timed out or failed in a different call. Try again.\n        return refreshAuthToken(installations, forceRefresh);\n    }\n    else {\n        return authToken;\n    }\n}\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(appConfig) {\n    return update(appConfig, oldEntry => {\n        if (!isEntryRegistered(oldEntry)) {\n            throw ERROR_FACTORY.create(\"not-registered\" /* ErrorCode.NOT_REGISTERED */);\n        }\n        const oldAuthToken = oldEntry.authToken;\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n            return Object.assign(Object.assign({}, oldEntry), { authToken: { requestStatus: 0 /* RequestStatus.NOT_STARTED */ } });\n        }\n        return oldEntry;\n    });\n}\nasync function fetchAuthTokenFromServer(installations, installationEntry) {\n    try {\n        const authToken = await generateAuthTokenRequest(installations, installationEntry);\n        const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), { authToken });\n        await set(installations.appConfig, updatedInstallationEntry);\n        return authToken;\n    }\n    catch (e) {\n        if (isServerError(e) &&\n            (e.customData.serverCode === 401 || e.customData.serverCode === 404)) {\n            // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n            // Generate a new ID next time.\n            await remove(installations.appConfig);\n        }\n        else {\n            const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), { authToken: { requestStatus: 0 /* RequestStatus.NOT_STARTED */ } });\n            await set(installations.appConfig, updatedInstallationEntry);\n        }\n        throw e;\n    }\n}\nfunction isEntryRegistered(installationEntry) {\n    return (installationEntry !== undefined &&\n        installationEntry.registrationStatus === 2 /* RequestStatus.COMPLETED */);\n}\nfunction isAuthTokenValid(authToken) {\n    return (authToken.requestStatus === 2 /* RequestStatus.COMPLETED */ &&\n        !isAuthTokenExpired(authToken));\n}\nfunction isAuthTokenExpired(authToken) {\n    const now = Date.now();\n    return (now < authToken.creationTime ||\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\n}\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\n    const inProgressAuthToken = {\n        requestStatus: 1 /* RequestStatus.IN_PROGRESS */,\n        requestTime: Date.now()\n    };\n    return Object.assign(Object.assign({}, oldEntry), { authToken: inProgressAuthToken });\n}\nfunction hasAuthTokenRequestTimedOut(authToken) {\n    return (authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */ &&\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nasync function getId(installations) {\n    const installationsImpl = installations;\n    const { installationEntry, registrationPromise } = await getInstallationEntry(installationsImpl);\n    if (registrationPromise) {\n        registrationPromise.catch(console.error);\n    }\n    else {\n        // If the installation is already registered, update the authentication\n        // token if needed.\n        refreshAuthToken(installationsImpl).catch(console.error);\n    }\n    return installationEntry.fid;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a Firebase Installations auth token, identifying the current\n * Firebase Installation.\n * @param installations - The `Installations` instance.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nasync function getToken(installations, forceRefresh = false) {\n    const installationsImpl = installations;\n    await completeInstallationRegistration(installationsImpl);\n    // At this point we either have a Registered Installation in the DB, or we've\n    // already thrown an error.\n    const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n    return authToken.token;\n}\nasync function completeInstallationRegistration(installations) {\n    const { registrationPromise } = await getInstallationEntry(installations);\n    if (registrationPromise) {\n        // A createInstallation request is in progress. Wait until it finishes.\n        await registrationPromise;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function deleteInstallationRequest(appConfig, installationEntry) {\n    const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n    const headers = getHeadersWithAuth(appConfig, installationEntry);\n    const request = {\n        method: 'DELETE',\n        headers\n    };\n    const response = await retryIfServerError(() => fetch(endpoint, request));\n    if (!response.ok) {\n        throw await getErrorFromResponse('Delete Installation', response);\n    }\n}\nfunction getDeleteEndpoint(appConfig, { fid }) {\n    return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Deletes the Firebase Installation and all associated data.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nasync function deleteInstallations(installations) {\n    const { appConfig } = installations;\n    const entry = await update(appConfig, oldEntry => {\n        if (oldEntry && oldEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n            // Delete the unregistered entry without sending a deleteInstallation request.\n            return undefined;\n        }\n        return oldEntry;\n    });\n    if (entry) {\n        if (entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n            // Can't delete while trying to register.\n            throw ERROR_FACTORY.create(\"delete-pending-registration\" /* ErrorCode.DELETE_PENDING_REGISTRATION */);\n        }\n        else if (entry.registrationStatus === 2 /* RequestStatus.COMPLETED */) {\n            if (!navigator.onLine) {\n                throw ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */);\n            }\n            else {\n                await deleteInstallationRequest(appConfig, entry);\n                await remove(appConfig);\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sets a new callback that will get called when Installation ID changes.\n * Returns an unsubscribe function that will remove the callback when called.\n * @param installations - The `Installations` instance.\n * @param callback - The callback function that is invoked when FID changes.\n * @returns A function that can be called to unsubscribe.\n *\n * @public\n */\nfunction onIdChange(installations, callback) {\n    const { appConfig } = installations;\n    addCallback(appConfig, callback);\n    return () => {\n        removeCallback(appConfig, callback);\n    };\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an instance of {@link Installations} associated with the given\n * {@link @firebase/app#FirebaseApp} instance.\n * @param app - The {@link @firebase/app#FirebaseApp} instance.\n *\n * @public\n */\nfunction getInstallations(app = getApp()) {\n    const installationsImpl = _getProvider(app, 'installations').getImmediate();\n    return installationsImpl;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction extractAppConfig(app) {\n    if (!app || !app.options) {\n        throw getMissingValueError('App Configuration');\n    }\n    if (!app.name) {\n        throw getMissingValueError('App Name');\n    }\n    // Required app config keys\n    const configKeys = [\n        'projectId',\n        'apiKey',\n        'appId'\n    ];\n    for (const keyName of configKeys) {\n        if (!app.options[keyName]) {\n            throw getMissingValueError(keyName);\n        }\n    }\n    return {\n        appName: app.name,\n        projectId: app.options.projectId,\n        apiKey: app.options.apiKey,\n        appId: app.options.appId\n    };\n}\nfunction getMissingValueError(valueName) {\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, {\n        valueName\n    });\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst INSTALLATIONS_NAME = 'installations';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\nconst publicFactory = (container) => {\n    const app = container.getProvider('app').getImmediate();\n    // Throws if app isn't configured properly.\n    const appConfig = extractAppConfig(app);\n    const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n    const installationsImpl = {\n        app,\n        appConfig,\n        heartbeatServiceProvider,\n        _delete: () => Promise.resolve()\n    };\n    return installationsImpl;\n};\nconst internalFactory = (container) => {\n    const app = container.getProvider('app').getImmediate();\n    // Internal FIS instance relies on public FIS instance.\n    const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n    const installationsInternal = {\n        getId: () => getId(installations),\n        getToken: (forceRefresh) => getToken(installations, forceRefresh)\n    };\n    return installationsInternal;\n};\nfunction registerInstallations() {\n    _registerComponent(new Component(INSTALLATIONS_NAME, publicFactory, \"PUBLIC\" /* ComponentType.PUBLIC */));\n    _registerComponent(new Component(INSTALLATIONS_NAME_INTERNAL, internalFactory, \"PRIVATE\" /* ComponentType.PRIVATE */));\n}\n\n/**\n * The Firebase Installations Web SDK.\n * This SDK does not work in a Node.js environment.\n *\n * @packageDocumentation\n */\nregisterInstallations();\nregisterVersion(name, version);\n// BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\nregisterVersion(name, version, 'esm2017');\n\nexport { deleteInstallations, getId, getInstallations, getToken, onIdChange };\n//# sourceMappingURL=index.esm2017.js.map\n","import { _getProvider, getApp, _registerComponent, registerVersion } from '@firebase/app';\nimport { Logger } from '@firebase/logger';\nimport { ErrorFactory, calculateBackoffMillis, FirebaseError, isIndexedDBAvailable, validateIndexedDBOpenable, isBrowserExtension, areCookiesEnabled, getModularInstance, deepEqual } from '@firebase/util';\nimport { Component } from '@firebase/component';\nimport '@firebase/installations';\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Type constant for Firebase Analytics.\n */\nconst ANALYTICS_TYPE = 'analytics';\n// Key to attach FID to in gtag params.\nconst GA_FID_KEY = 'firebase_id';\nconst ORIGIN_KEY = 'origin';\nconst FETCH_TIMEOUT_MILLIS = 60 * 1000;\nconst DYNAMIC_CONFIG_URL = 'https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig';\nconst GTAG_URL = 'https://www.googletagmanager.com/gtag/js';\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst logger = new Logger('@firebase/analytics');\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ERRORS = {\n    [\"already-exists\" /* AnalyticsError.ALREADY_EXISTS */]: 'A Firebase Analytics instance with the appId {$id} ' +\n        ' already exists. ' +\n        'Only one Firebase Analytics instance can be created for each appId.',\n    [\"already-initialized\" /* AnalyticsError.ALREADY_INITIALIZED */]: 'initializeAnalytics() cannot be called again with different options than those ' +\n        'it was initially called with. It can be called again with the same options to ' +\n        'return the existing instance, or getAnalytics() can be used ' +\n        'to get a reference to the already-initialized instance.',\n    [\"already-initialized-settings\" /* AnalyticsError.ALREADY_INITIALIZED_SETTINGS */]: 'Firebase Analytics has already been initialized.' +\n        'settings() must be called before initializing any Analytics instance' +\n        'or it will have no effect.',\n    [\"interop-component-reg-failed\" /* AnalyticsError.INTEROP_COMPONENT_REG_FAILED */]: 'Firebase Analytics Interop Component failed to instantiate: {$reason}',\n    [\"invalid-analytics-context\" /* AnalyticsError.INVALID_ANALYTICS_CONTEXT */]: 'Firebase Analytics is not supported in this environment. ' +\n        'Wrap initialization of analytics in analytics.isSupported() ' +\n        'to prevent initialization in unsupported environments. Details: {$errorInfo}',\n    [\"indexeddb-unavailable\" /* AnalyticsError.INDEXEDDB_UNAVAILABLE */]: 'IndexedDB unavailable or restricted in this environment. ' +\n        'Wrap initialization of analytics in analytics.isSupported() ' +\n        'to prevent initialization in unsupported environments. Details: {$errorInfo}',\n    [\"fetch-throttle\" /* AnalyticsError.FETCH_THROTTLE */]: 'The config fetch request timed out while in an exponential backoff state.' +\n        ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\n    [\"config-fetch-failed\" /* AnalyticsError.CONFIG_FETCH_FAILED */]: 'Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}',\n    [\"no-api-key\" /* AnalyticsError.NO_API_KEY */]: 'The \"apiKey\" field is empty in the local Firebase config. Firebase Analytics requires this field to' +\n        'contain a valid API key.',\n    [\"no-app-id\" /* AnalyticsError.NO_APP_ID */]: 'The \"appId\" field is empty in the local Firebase config. Firebase Analytics requires this field to' +\n        'contain a valid app ID.',\n    [\"no-client-id\" /* AnalyticsError.NO_CLIENT_ID */]: 'The \"client_id\" field is empty.',\n    [\"invalid-gtag-resource\" /* AnalyticsError.INVALID_GTAG_RESOURCE */]: 'Trusted Types detected an invalid gtag resource: {$gtagURL}.'\n};\nconst ERROR_FACTORY = new ErrorFactory('analytics', 'Analytics', ERRORS);\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Verifies and creates a TrustedScriptURL.\n */\nfunction createGtagTrustedTypesScriptURL(url) {\n    if (!url.startsWith(GTAG_URL)) {\n        const err = ERROR_FACTORY.create(\"invalid-gtag-resource\" /* AnalyticsError.INVALID_GTAG_RESOURCE */, {\n            gtagURL: url\n        });\n        logger.warn(err.message);\n        return '';\n    }\n    return url;\n}\n/**\n * Makeshift polyfill for Promise.allSettled(). Resolves when all promises\n * have either resolved or rejected.\n *\n * @param promises Array of promises to wait for.\n */\nfunction promiseAllSettled(promises) {\n    return Promise.all(promises.map(promise => promise.catch(e => e)));\n}\n/**\n * Creates a TrustedTypePolicy object that implements the rules passed as policyOptions.\n *\n * @param policyName A string containing the name of the policy\n * @param policyOptions Object containing implementations of instance methods for TrustedTypesPolicy, see {@link https://developer.mozilla.org/en-US/docs/Web/API/TrustedTypePolicy#instance_methods\n * | the TrustedTypePolicy reference documentation}.\n */\nfunction createTrustedTypesPolicy(policyName, policyOptions) {\n    // Create a TrustedTypes policy that we can use for updating src\n    // properties\n    let trustedTypesPolicy;\n    if (window.trustedTypes) {\n        trustedTypesPolicy = window.trustedTypes.createPolicy(policyName, policyOptions);\n    }\n    return trustedTypesPolicy;\n}\n/**\n * Inserts gtag script tag into the page to asynchronously download gtag.\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\n */\nfunction insertScriptTag(dataLayerName, measurementId) {\n    const trustedTypesPolicy = createTrustedTypesPolicy('firebase-js-sdk-policy', {\n        createScriptURL: createGtagTrustedTypesScriptURL\n    });\n    const script = document.createElement('script');\n    // We are not providing an analyticsId in the URL because it would trigger a `page_view`\n    // without fid. We will initialize ga-id using gtag (config) command together with fid.\n    const gtagScriptURL = `${GTAG_URL}?l=${dataLayerName}&id=${measurementId}`;\n    script.src = trustedTypesPolicy\n        ? trustedTypesPolicy === null || trustedTypesPolicy === void 0 ? void 0 : trustedTypesPolicy.createScriptURL(gtagScriptURL)\n        : gtagScriptURL;\n    script.async = true;\n    document.head.appendChild(script);\n}\n/**\n * Get reference to, or create, global datalayer.\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\n */\nfunction getOrCreateDataLayer(dataLayerName) {\n    // Check for existing dataLayer and create if needed.\n    let dataLayer = [];\n    if (Array.isArray(window[dataLayerName])) {\n        dataLayer = window[dataLayerName];\n    }\n    else {\n        window[dataLayerName] = dataLayer;\n    }\n    return dataLayer;\n}\n/**\n * Wrapped gtag logic when gtag is called with 'config' command.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n * @param measurementId GA Measurement ID to set config for.\n * @param gtagParams Gtag config params to set.\n */\nasync function gtagOnConfig(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, measurementId, gtagParams) {\n    // If config is already fetched, we know the appId and can use it to look up what FID promise we\n    /// are waiting for, and wait only on that one.\n    const correspondingAppId = measurementIdToAppId[measurementId];\n    try {\n        if (correspondingAppId) {\n            await initializationPromisesMap[correspondingAppId];\n        }\n        else {\n            // If config is not fetched yet, wait for all configs (we don't know which one we need) and\n            // find the appId (if any) corresponding to this measurementId. If there is one, wait on\n            // that appId's initialization promise. If there is none, promise resolves and gtag\n            // call goes through.\n            const dynamicConfigResults = await promiseAllSettled(dynamicConfigPromisesList);\n            const foundConfig = dynamicConfigResults.find(config => config.measurementId === measurementId);\n            if (foundConfig) {\n                await initializationPromisesMap[foundConfig.appId];\n            }\n        }\n    }\n    catch (e) {\n        logger.error(e);\n    }\n    gtagCore(\"config\" /* GtagCommand.CONFIG */, measurementId, gtagParams);\n}\n/**\n * Wrapped gtag logic when gtag is called with 'event' command.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementId GA Measurement ID to log event to.\n * @param gtagParams Params to log with this event.\n */\nasync function gtagOnEvent(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementId, gtagParams) {\n    try {\n        let initializationPromisesToWaitFor = [];\n        // If there's a 'send_to' param, check if any ID specified matches\n        // an initializeIds() promise we are waiting for.\n        if (gtagParams && gtagParams['send_to']) {\n            let gaSendToList = gtagParams['send_to'];\n            // Make it an array if is isn't, so it can be dealt with the same way.\n            if (!Array.isArray(gaSendToList)) {\n                gaSendToList = [gaSendToList];\n            }\n            // Checking 'send_to' fields requires having all measurement ID results back from\n            // the dynamic config fetch.\n            const dynamicConfigResults = await promiseAllSettled(dynamicConfigPromisesList);\n            for (const sendToId of gaSendToList) {\n                // Any fetched dynamic measurement ID that matches this 'send_to' ID\n                const foundConfig = dynamicConfigResults.find(config => config.measurementId === sendToId);\n                const initializationPromise = foundConfig && initializationPromisesMap[foundConfig.appId];\n                if (initializationPromise) {\n                    initializationPromisesToWaitFor.push(initializationPromise);\n                }\n                else {\n                    // Found an item in 'send_to' that is not associated\n                    // directly with an FID, possibly a group.  Empty this array,\n                    // exit the loop early, and let it get populated below.\n                    initializationPromisesToWaitFor = [];\n                    break;\n                }\n            }\n        }\n        // This will be unpopulated if there was no 'send_to' field , or\n        // if not all entries in the 'send_to' field could be mapped to\n        // a FID. In these cases, wait on all pending initialization promises.\n        if (initializationPromisesToWaitFor.length === 0) {\n            /* eslint-disable-next-line @typescript-eslint/no-floating-promises */\n            initializationPromisesToWaitFor = Object.values(initializationPromisesMap);\n        }\n        // Run core gtag function with args after all relevant initialization\n        // promises have been resolved.\n        await Promise.all(initializationPromisesToWaitFor);\n        // Workaround for http://b/141370449 - third argument cannot be undefined.\n        gtagCore(\"event\" /* GtagCommand.EVENT */, measurementId, gtagParams || {});\n    }\n    catch (e) {\n        logger.error(e);\n    }\n}\n/**\n * Wraps a standard gtag function with extra code to wait for completion of\n * relevant initialization promises before sending requests.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n */\nfunction wrapGtag(gtagCore, \n/**\n * Allows wrapped gtag calls to wait on whichever initialization promises are required,\n * depending on the contents of the gtag params' `send_to` field, if any.\n */\ninitializationPromisesMap, \n/**\n * Wrapped gtag calls sometimes require all dynamic config fetches to have returned\n * before determining what initialization promises (which include FIDs) to wait for.\n */\ndynamicConfigPromisesList, \n/**\n * Wrapped gtag config calls can narrow down which initialization promise (with FID)\n * to wait for if the measurementId is already fetched, by getting the corresponding appId,\n * which is the key for the initialization promises map.\n */\nmeasurementIdToAppId) {\n    /**\n     * Wrapper around gtag that ensures FID is sent with gtag calls.\n     * @param command Gtag command type.\n     * @param idOrNameOrParams Measurement ID if command is EVENT/CONFIG, params if command is SET.\n     * @param gtagParams Params if event is EVENT/CONFIG.\n     */\n    async function gtagWrapper(command, ...args) {\n        try {\n            // If event, check that relevant initialization promises have completed.\n            if (command === \"event\" /* GtagCommand.EVENT */) {\n                const [measurementId, gtagParams] = args;\n                // If EVENT, second arg must be measurementId.\n                await gtagOnEvent(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementId, gtagParams);\n            }\n            else if (command === \"config\" /* GtagCommand.CONFIG */) {\n                const [measurementId, gtagParams] = args;\n                // If CONFIG, second arg must be measurementId.\n                await gtagOnConfig(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, measurementId, gtagParams);\n            }\n            else if (command === \"consent\" /* GtagCommand.CONSENT */) {\n                const [consentAction, gtagParams] = args;\n                // consentAction can be one of 'default' or 'update'.\n                gtagCore(\"consent\" /* GtagCommand.CONSENT */, consentAction, gtagParams);\n            }\n            else if (command === \"get\" /* GtagCommand.GET */) {\n                const [measurementId, fieldName, callback] = args;\n                gtagCore(\"get\" /* GtagCommand.GET */, measurementId, fieldName, callback);\n            }\n            else if (command === \"set\" /* GtagCommand.SET */) {\n                const [customParams] = args;\n                // If SET, second arg must be params.\n                gtagCore(\"set\" /* GtagCommand.SET */, customParams);\n            }\n            else {\n                gtagCore(command, ...args);\n            }\n        }\n        catch (e) {\n            logger.error(e);\n        }\n    }\n    return gtagWrapper;\n}\n/**\n * Creates global gtag function or wraps existing one if found.\n * This wrapped function attaches Firebase instance ID (FID) to gtag 'config' and\n * 'event' calls that belong to the GAID associated with this Firebase instance.\n *\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n * @param dataLayerName Name of global GA datalayer array.\n * @param gtagFunctionName Name of global gtag function (\"gtag\" if not user-specified).\n */\nfunction wrapOrCreateGtag(initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, dataLayerName, gtagFunctionName) {\n    // Create a basic core gtag function\n    let gtagCore = function (..._args) {\n        // Must push IArguments object, not an array.\n        window[dataLayerName].push(arguments);\n    };\n    // Replace it with existing one if found\n    if (window[gtagFunctionName] &&\n        typeof window[gtagFunctionName] === 'function') {\n        // @ts-ignore\n        gtagCore = window[gtagFunctionName];\n    }\n    window[gtagFunctionName] = wrapGtag(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId);\n    return {\n        gtagCore,\n        wrappedGtag: window[gtagFunctionName]\n    };\n}\n/**\n * Returns the script tag in the DOM matching both the gtag url pattern\n * and the provided data layer name.\n */\nfunction findGtagScriptOnPage(dataLayerName) {\n    const scriptTags = window.document.getElementsByTagName('script');\n    for (const tag of Object.values(scriptTags)) {\n        if (tag.src &&\n            tag.src.includes(GTAG_URL) &&\n            tag.src.includes(dataLayerName)) {\n            return tag;\n        }\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Backoff factor for 503 errors, which we want to be conservative about\n * to avoid overloading servers. Each retry interval will be\n * BASE_INTERVAL_MILLIS * LONG_RETRY_FACTOR ^ retryCount, so the second one\n * will be ~30 seconds (with fuzzing).\n */\nconst LONG_RETRY_FACTOR = 30;\n/**\n * Base wait interval to multiplied by backoffFactor^backoffCount.\n */\nconst BASE_INTERVAL_MILLIS = 1000;\n/**\n * Stubbable retry data storage class.\n */\nclass RetryData {\n    constructor(throttleMetadata = {}, intervalMillis = BASE_INTERVAL_MILLIS) {\n        this.throttleMetadata = throttleMetadata;\n        this.intervalMillis = intervalMillis;\n    }\n    getThrottleMetadata(appId) {\n        return this.throttleMetadata[appId];\n    }\n    setThrottleMetadata(appId, metadata) {\n        this.throttleMetadata[appId] = metadata;\n    }\n    deleteThrottleMetadata(appId) {\n        delete this.throttleMetadata[appId];\n    }\n}\nconst defaultRetryData = new RetryData();\n/**\n * Set GET request headers.\n * @param apiKey App API key.\n */\nfunction getHeaders(apiKey) {\n    return new Headers({\n        Accept: 'application/json',\n        'x-goog-api-key': apiKey\n    });\n}\n/**\n * Fetches dynamic config from backend.\n * @param app Firebase app to fetch config for.\n */\nasync function fetchDynamicConfig(appFields) {\n    var _a;\n    const { appId, apiKey } = appFields;\n    const request = {\n        method: 'GET',\n        headers: getHeaders(apiKey)\n    };\n    const appUrl = DYNAMIC_CONFIG_URL.replace('{app-id}', appId);\n    const response = await fetch(appUrl, request);\n    if (response.status !== 200 && response.status !== 304) {\n        let errorMessage = '';\n        try {\n            // Try to get any error message text from server response.\n            const jsonResponse = (await response.json());\n            if ((_a = jsonResponse.error) === null || _a === void 0 ? void 0 : _a.message) {\n                errorMessage = jsonResponse.error.message;\n            }\n        }\n        catch (_ignored) { }\n        throw ERROR_FACTORY.create(\"config-fetch-failed\" /* AnalyticsError.CONFIG_FETCH_FAILED */, {\n            httpStatus: response.status,\n            responseMessage: errorMessage\n        });\n    }\n    return response.json();\n}\n/**\n * Fetches dynamic config from backend, retrying if failed.\n * @param app Firebase app to fetch config for.\n */\nasync function fetchDynamicConfigWithRetry(app, \n// retryData and timeoutMillis are parameterized to allow passing a different value for testing.\nretryData = defaultRetryData, timeoutMillis) {\n    const { appId, apiKey, measurementId } = app.options;\n    if (!appId) {\n        throw ERROR_FACTORY.create(\"no-app-id\" /* AnalyticsError.NO_APP_ID */);\n    }\n    if (!apiKey) {\n        if (measurementId) {\n            return {\n                measurementId,\n                appId\n            };\n        }\n        throw ERROR_FACTORY.create(\"no-api-key\" /* AnalyticsError.NO_API_KEY */);\n    }\n    const throttleMetadata = retryData.getThrottleMetadata(appId) || {\n        backoffCount: 0,\n        throttleEndTimeMillis: Date.now()\n    };\n    const signal = new AnalyticsAbortSignal();\n    setTimeout(async () => {\n        // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n        signal.abort();\n    }, timeoutMillis !== undefined ? timeoutMillis : FETCH_TIMEOUT_MILLIS);\n    return attemptFetchDynamicConfigWithRetry({ appId, apiKey, measurementId }, throttleMetadata, signal, retryData);\n}\n/**\n * Runs one retry attempt.\n * @param appFields Necessary app config fields.\n * @param throttleMetadata Ongoing metadata to determine throttling times.\n * @param signal Abort signal.\n */\nasync function attemptFetchDynamicConfigWithRetry(appFields, { throttleEndTimeMillis, backoffCount }, signal, retryData = defaultRetryData // for testing\n) {\n    var _a;\n    const { appId, measurementId } = appFields;\n    // Starts with a (potentially zero) timeout to support resumption from stored state.\n    // Ensures the throttle end time is honored if the last attempt timed out.\n    // Note the SDK will never make a request if the fetch timeout expires at this point.\n    try {\n        await setAbortableTimeout(signal, throttleEndTimeMillis);\n    }\n    catch (e) {\n        if (measurementId) {\n            logger.warn(`Timed out fetching this Firebase app's measurement ID from the server.` +\n                ` Falling back to the measurement ID ${measurementId}` +\n                ` provided in the \"measurementId\" field in the local Firebase config. [${e === null || e === void 0 ? void 0 : e.message}]`);\n            return { appId, measurementId };\n        }\n        throw e;\n    }\n    try {\n        const response = await fetchDynamicConfig(appFields);\n        // Note the SDK only clears throttle state if response is success or non-retriable.\n        retryData.deleteThrottleMetadata(appId);\n        return response;\n    }\n    catch (e) {\n        const error = e;\n        if (!isRetriableError(error)) {\n            retryData.deleteThrottleMetadata(appId);\n            if (measurementId) {\n                logger.warn(`Failed to fetch this Firebase app's measurement ID from the server.` +\n                    ` Falling back to the measurement ID ${measurementId}` +\n                    ` provided in the \"measurementId\" field in the local Firebase config. [${error === null || error === void 0 ? void 0 : error.message}]`);\n                return { appId, measurementId };\n            }\n            else {\n                throw e;\n            }\n        }\n        const backoffMillis = Number((_a = error === null || error === void 0 ? void 0 : error.customData) === null || _a === void 0 ? void 0 : _a.httpStatus) === 503\n            ? calculateBackoffMillis(backoffCount, retryData.intervalMillis, LONG_RETRY_FACTOR)\n            : calculateBackoffMillis(backoffCount, retryData.intervalMillis);\n        // Increments backoff state.\n        const throttleMetadata = {\n            throttleEndTimeMillis: Date.now() + backoffMillis,\n            backoffCount: backoffCount + 1\n        };\n        // Persists state.\n        retryData.setThrottleMetadata(appId, throttleMetadata);\n        logger.debug(`Calling attemptFetch again in ${backoffMillis} millis`);\n        return attemptFetchDynamicConfigWithRetry(appFields, throttleMetadata, signal, retryData);\n    }\n}\n/**\n * Supports waiting on a backoff by:\n *\n * <ul>\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\n *       request appear the same.</li>\n * </ul>\n *\n * <p>Visible for testing.\n */\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\n    return new Promise((resolve, reject) => {\n        // Derives backoff from given end time, normalizing negative numbers to zero.\n        const backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n        const timeout = setTimeout(resolve, backoffMillis);\n        // Adds listener, rather than sets onabort, because signal is a shared object.\n        signal.addEventListener(() => {\n            clearTimeout(timeout);\n            // If the request completes before this timeout, the rejection has no effect.\n            reject(ERROR_FACTORY.create(\"fetch-throttle\" /* AnalyticsError.FETCH_THROTTLE */, {\n                throttleEndTimeMillis\n            }));\n        });\n    });\n}\n/**\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\n */\nfunction isRetriableError(e) {\n    if (!(e instanceof FirebaseError) || !e.customData) {\n        return false;\n    }\n    // Uses string index defined by ErrorData, which FirebaseError implements.\n    const httpStatus = Number(e.customData['httpStatus']);\n    return (httpStatus === 429 ||\n        httpStatus === 500 ||\n        httpStatus === 503 ||\n        httpStatus === 504);\n}\n/**\n * Shims a minimal AbortSignal (copied from Remote Config).\n *\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\n * swapped out if/when we do.\n */\nclass AnalyticsAbortSignal {\n    constructor() {\n        this.listeners = [];\n    }\n    addEventListener(listener) {\n        this.listeners.push(listener);\n    }\n    abort() {\n        this.listeners.forEach(listener => listener());\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Event parameters to set on 'gtag' during initialization.\n */\nlet defaultEventParametersForInit;\n/**\n * Logs an analytics event through the Firebase SDK.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param eventName Google Analytics event name, choose from standard list or use a custom string.\n * @param eventParams Analytics event parameters.\n */\nasync function logEvent$1(gtagFunction, initializationPromise, eventName, eventParams, options) {\n    if (options && options.global) {\n        gtagFunction(\"event\" /* GtagCommand.EVENT */, eventName, eventParams);\n        return;\n    }\n    else {\n        const measurementId = await initializationPromise;\n        const params = Object.assign(Object.assign({}, eventParams), { 'send_to': measurementId });\n        gtagFunction(\"event\" /* GtagCommand.EVENT */, eventName, params);\n    }\n}\n/**\n * Set screen_name parameter for this Google Analytics ID.\n *\n * @deprecated Use {@link logEvent} with `eventName` as 'screen_view' and add relevant `eventParams`.\n * See {@link https://firebase.google.com/docs/analytics/screenviews | Track Screenviews}.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param screenName Screen name string to set.\n */\nasync function setCurrentScreen$1(gtagFunction, initializationPromise, screenName, options) {\n    if (options && options.global) {\n        gtagFunction(\"set\" /* GtagCommand.SET */, { 'screen_name': screenName });\n        return Promise.resolve();\n    }\n    else {\n        const measurementId = await initializationPromise;\n        gtagFunction(\"config\" /* GtagCommand.CONFIG */, measurementId, {\n            update: true,\n            'screen_name': screenName\n        });\n    }\n}\n/**\n * Set user_id parameter for this Google Analytics ID.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param id User ID string to set\n */\nasync function setUserId$1(gtagFunction, initializationPromise, id, options) {\n    if (options && options.global) {\n        gtagFunction(\"set\" /* GtagCommand.SET */, { 'user_id': id });\n        return Promise.resolve();\n    }\n    else {\n        const measurementId = await initializationPromise;\n        gtagFunction(\"config\" /* GtagCommand.CONFIG */, measurementId, {\n            update: true,\n            'user_id': id\n        });\n    }\n}\n/**\n * Set all other user properties other than user_id and screen_name.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param properties Map of user properties to set\n */\nasync function setUserProperties$1(gtagFunction, initializationPromise, properties, options) {\n    if (options && options.global) {\n        const flatProperties = {};\n        for (const key of Object.keys(properties)) {\n            // use dot notation for merge behavior in gtag.js\n            flatProperties[`user_properties.${key}`] = properties[key];\n        }\n        gtagFunction(\"set\" /* GtagCommand.SET */, flatProperties);\n        return Promise.resolve();\n    }\n    else {\n        const measurementId = await initializationPromise;\n        gtagFunction(\"config\" /* GtagCommand.CONFIG */, measurementId, {\n            update: true,\n            'user_properties': properties\n        });\n    }\n}\n/**\n * Retrieves a unique Google Analytics identifier for the web client.\n * See {@link https://developers.google.com/analytics/devguides/collection/ga4/reference/config#client_id | client_id}.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n */\nasync function internalGetGoogleAnalyticsClientId(gtagFunction, initializationPromise) {\n    const measurementId = await initializationPromise;\n    return new Promise((resolve, reject) => {\n        gtagFunction(\"get\" /* GtagCommand.GET */, measurementId, 'client_id', (clientId) => {\n            if (!clientId) {\n                reject(ERROR_FACTORY.create(\"no-client-id\" /* AnalyticsError.NO_CLIENT_ID */));\n            }\n            resolve(clientId);\n        });\n    });\n}\n/**\n * Set whether collection is enabled for this ID.\n *\n * @param enabled If true, collection is enabled for this ID.\n */\nasync function setAnalyticsCollectionEnabled$1(initializationPromise, enabled) {\n    const measurementId = await initializationPromise;\n    window[`ga-disable-${measurementId}`] = !enabled;\n}\n/**\n * Consent parameters to default to during 'gtag' initialization.\n */\nlet defaultConsentSettingsForInit;\n/**\n * Sets the variable {@link defaultConsentSettingsForInit} for use in the initialization of\n * analytics.\n *\n * @param consentSettings Maps the applicable end user consent state for gtag.js.\n */\nfunction _setConsentDefaultForInit(consentSettings) {\n    defaultConsentSettingsForInit = consentSettings;\n}\n/**\n * Sets the variable `defaultEventParametersForInit` for use in the initialization of\n * analytics.\n *\n * @param customParams Any custom params the user may pass to gtag.js.\n */\nfunction _setDefaultEventParametersForInit(customParams) {\n    defaultEventParametersForInit = customParams;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function validateIndexedDB() {\n    if (!isIndexedDBAvailable()) {\n        logger.warn(ERROR_FACTORY.create(\"indexeddb-unavailable\" /* AnalyticsError.INDEXEDDB_UNAVAILABLE */, {\n            errorInfo: 'IndexedDB is not available in this environment.'\n        }).message);\n        return false;\n    }\n    else {\n        try {\n            await validateIndexedDBOpenable();\n        }\n        catch (e) {\n            logger.warn(ERROR_FACTORY.create(\"indexeddb-unavailable\" /* AnalyticsError.INDEXEDDB_UNAVAILABLE */, {\n                errorInfo: e === null || e === void 0 ? void 0 : e.toString()\n            }).message);\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Initialize the analytics instance in gtag.js by calling config command with fid.\n *\n * NOTE: We combine analytics initialization and setting fid together because we want fid to be\n * part of the `page_view` event that's sent during the initialization\n * @param app Firebase app\n * @param gtagCore The gtag function that's not wrapped.\n * @param dynamicConfigPromisesList Array of all dynamic config promises.\n * @param measurementIdToAppId Maps measurementID to appID.\n * @param installations _FirebaseInstallationsInternal instance.\n *\n * @returns Measurement ID.\n */\nasync function _initializeAnalytics(app, dynamicConfigPromisesList, measurementIdToAppId, installations, gtagCore, dataLayerName, options) {\n    var _a;\n    const dynamicConfigPromise = fetchDynamicConfigWithRetry(app);\n    // Once fetched, map measurementIds to appId, for ease of lookup in wrapped gtag function.\n    dynamicConfigPromise\n        .then(config => {\n        measurementIdToAppId[config.measurementId] = config.appId;\n        if (app.options.measurementId &&\n            config.measurementId !== app.options.measurementId) {\n            logger.warn(`The measurement ID in the local Firebase config (${app.options.measurementId})` +\n                ` does not match the measurement ID fetched from the server (${config.measurementId}).` +\n                ` To ensure analytics events are always sent to the correct Analytics property,` +\n                ` update the` +\n                ` measurement ID field in the local config or remove it from the local config.`);\n        }\n    })\n        .catch(e => logger.error(e));\n    // Add to list to track state of all dynamic config promises.\n    dynamicConfigPromisesList.push(dynamicConfigPromise);\n    const fidPromise = validateIndexedDB().then(envIsValid => {\n        if (envIsValid) {\n            return installations.getId();\n        }\n        else {\n            return undefined;\n        }\n    });\n    const [dynamicConfig, fid] = await Promise.all([\n        dynamicConfigPromise,\n        fidPromise\n    ]);\n    // Detect if user has already put the gtag <script> tag on this page with the passed in\n    // data layer name.\n    if (!findGtagScriptOnPage(dataLayerName)) {\n        insertScriptTag(dataLayerName, dynamicConfig.measurementId);\n    }\n    // Detects if there are consent settings that need to be configured.\n    if (defaultConsentSettingsForInit) {\n        gtagCore(\"consent\" /* GtagCommand.CONSENT */, 'default', defaultConsentSettingsForInit);\n        _setConsentDefaultForInit(undefined);\n    }\n    // This command initializes gtag.js and only needs to be called once for the entire web app,\n    // but since it is idempotent, we can call it multiple times.\n    // We keep it together with other initialization logic for better code structure.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    gtagCore('js', new Date());\n    // User config added first. We don't want users to accidentally overwrite\n    // base Firebase config properties.\n    const configProperties = (_a = options === null || options === void 0 ? void 0 : options.config) !== null && _a !== void 0 ? _a : {};\n    // guard against developers accidentally setting properties with prefix `firebase_`\n    configProperties[ORIGIN_KEY] = 'firebase';\n    configProperties.update = true;\n    if (fid != null) {\n        configProperties[GA_FID_KEY] = fid;\n    }\n    // It should be the first config command called on this GA-ID\n    // Initialize this GA-ID and set FID on it using the gtag config API.\n    // Note: This will trigger a page_view event unless 'send_page_view' is set to false in\n    // `configProperties`.\n    gtagCore(\"config\" /* GtagCommand.CONFIG */, dynamicConfig.measurementId, configProperties);\n    // Detects if there is data that will be set on every event logged from the SDK.\n    if (defaultEventParametersForInit) {\n        gtagCore(\"set\" /* GtagCommand.SET */, defaultEventParametersForInit);\n        _setDefaultEventParametersForInit(undefined);\n    }\n    return dynamicConfig.measurementId;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Analytics Service class.\n */\nclass AnalyticsService {\n    constructor(app) {\n        this.app = app;\n    }\n    _delete() {\n        delete initializationPromisesMap[this.app.options.appId];\n        return Promise.resolve();\n    }\n}\n/**\n * Maps appId to full initialization promise. Wrapped gtag calls must wait on\n * all or some of these, depending on the call's `send_to` param and the status\n * of the dynamic config fetches (see below).\n */\nlet initializationPromisesMap = {};\n/**\n * List of dynamic config fetch promises. In certain cases, wrapped gtag calls\n * wait on all these to be complete in order to determine if it can selectively\n * wait for only certain initialization (FID) promises or if it must wait for all.\n */\nlet dynamicConfigPromisesList = [];\n/**\n * Maps fetched measurementIds to appId. Populated when the app's dynamic config\n * fetch completes. If already populated, gtag config calls can use this to\n * selectively wait for only this app's initialization promise (FID) instead of all\n * initialization promises.\n */\nconst measurementIdToAppId = {};\n/**\n * Name for window global data layer array used by GA: defaults to 'dataLayer'.\n */\nlet dataLayerName = 'dataLayer';\n/**\n * Name for window global gtag function used by GA: defaults to 'gtag'.\n */\nlet gtagName = 'gtag';\n/**\n * Reproduction of standard gtag function or reference to existing\n * gtag function on window object.\n */\nlet gtagCoreFunction;\n/**\n * Wrapper around gtag function that ensures FID is sent with all\n * relevant event and config calls.\n */\nlet wrappedGtagFunction;\n/**\n * Flag to ensure page initialization steps (creation or wrapping of\n * dataLayer and gtag script) are only run once per page load.\n */\nlet globalInitDone = false;\n/**\n * Configures Firebase Analytics to use custom `gtag` or `dataLayer` names.\n * Intended to be used if `gtag.js` script has been installed on\n * this page independently of Firebase Analytics, and is using non-default\n * names for either the `gtag` function or for `dataLayer`.\n * Must be called before calling `getAnalytics()` or it won't\n * have any effect.\n *\n * @public\n *\n * @param options - Custom gtag and dataLayer names.\n */\nfunction settings(options) {\n    if (globalInitDone) {\n        throw ERROR_FACTORY.create(\"already-initialized\" /* AnalyticsError.ALREADY_INITIALIZED */);\n    }\n    if (options.dataLayerName) {\n        dataLayerName = options.dataLayerName;\n    }\n    if (options.gtagName) {\n        gtagName = options.gtagName;\n    }\n}\n/**\n * Returns true if no environment mismatch is found.\n * If environment mismatches are found, throws an INVALID_ANALYTICS_CONTEXT\n * error that also lists details for each mismatch found.\n */\nfunction warnOnBrowserContextMismatch() {\n    const mismatchedEnvMessages = [];\n    if (isBrowserExtension()) {\n        mismatchedEnvMessages.push('This is a browser extension environment.');\n    }\n    if (!areCookiesEnabled()) {\n        mismatchedEnvMessages.push('Cookies are not available.');\n    }\n    if (mismatchedEnvMessages.length > 0) {\n        const details = mismatchedEnvMessages\n            .map((message, index) => `(${index + 1}) ${message}`)\n            .join(' ');\n        const err = ERROR_FACTORY.create(\"invalid-analytics-context\" /* AnalyticsError.INVALID_ANALYTICS_CONTEXT */, {\n            errorInfo: details\n        });\n        logger.warn(err.message);\n    }\n}\n/**\n * Analytics instance factory.\n * @internal\n */\nfunction factory(app, installations, options) {\n    warnOnBrowserContextMismatch();\n    const appId = app.options.appId;\n    if (!appId) {\n        throw ERROR_FACTORY.create(\"no-app-id\" /* AnalyticsError.NO_APP_ID */);\n    }\n    if (!app.options.apiKey) {\n        if (app.options.measurementId) {\n            logger.warn(`The \"apiKey\" field is empty in the local Firebase config. This is needed to fetch the latest` +\n                ` measurement ID for this Firebase app. Falling back to the measurement ID ${app.options.measurementId}` +\n                ` provided in the \"measurementId\" field in the local Firebase config.`);\n        }\n        else {\n            throw ERROR_FACTORY.create(\"no-api-key\" /* AnalyticsError.NO_API_KEY */);\n        }\n    }\n    if (initializationPromisesMap[appId] != null) {\n        throw ERROR_FACTORY.create(\"already-exists\" /* AnalyticsError.ALREADY_EXISTS */, {\n            id: appId\n        });\n    }\n    if (!globalInitDone) {\n        // Steps here should only be done once per page: creation or wrapping\n        // of dataLayer and global gtag function.\n        getOrCreateDataLayer(dataLayerName);\n        const { wrappedGtag, gtagCore } = wrapOrCreateGtag(initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, dataLayerName, gtagName);\n        wrappedGtagFunction = wrappedGtag;\n        gtagCoreFunction = gtagCore;\n        globalInitDone = true;\n    }\n    // Async but non-blocking.\n    // This map reflects the completion state of all promises for each appId.\n    initializationPromisesMap[appId] = _initializeAnalytics(app, dynamicConfigPromisesList, measurementIdToAppId, installations, gtagCoreFunction, dataLayerName, options);\n    const analyticsInstance = new AnalyticsService(app);\n    return analyticsInstance;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Returns an {@link Analytics} instance for the given app.\n *\n * @public\n *\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n */\nfunction getAnalytics(app = getApp()) {\n    app = getModularInstance(app);\n    // Dependencies\n    const analyticsProvider = _getProvider(app, ANALYTICS_TYPE);\n    if (analyticsProvider.isInitialized()) {\n        return analyticsProvider.getImmediate();\n    }\n    return initializeAnalytics(app);\n}\n/**\n * Returns an {@link Analytics} instance for the given app.\n *\n * @public\n *\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n */\nfunction initializeAnalytics(app, options = {}) {\n    // Dependencies\n    const analyticsProvider = _getProvider(app, ANALYTICS_TYPE);\n    if (analyticsProvider.isInitialized()) {\n        const existingInstance = analyticsProvider.getImmediate();\n        if (deepEqual(options, analyticsProvider.getOptions())) {\n            return existingInstance;\n        }\n        else {\n            throw ERROR_FACTORY.create(\"already-initialized\" /* AnalyticsError.ALREADY_INITIALIZED */);\n        }\n    }\n    const analyticsInstance = analyticsProvider.initialize({ options });\n    return analyticsInstance;\n}\n/**\n * This is a public static method provided to users that wraps four different checks:\n *\n * 1. Check if it's not a browser extension environment.\n * 2. Check if cookies are enabled in current browser.\n * 3. Check if IndexedDB is supported by the browser environment.\n * 4. Check if the current browser context is valid for using `IndexedDB.open()`.\n *\n * @public\n *\n */\nasync function isSupported() {\n    if (isBrowserExtension()) {\n        return false;\n    }\n    if (!areCookiesEnabled()) {\n        return false;\n    }\n    if (!isIndexedDBAvailable()) {\n        return false;\n    }\n    try {\n        const isDBOpenable = await validateIndexedDBOpenable();\n        return isDBOpenable;\n    }\n    catch (error) {\n        return false;\n    }\n}\n/**\n * Use gtag `config` command to set `screen_name`.\n *\n * @public\n *\n * @deprecated Use {@link logEvent} with `eventName` as 'screen_view' and add relevant `eventParams`.\n * See {@link https://firebase.google.com/docs/analytics/screenviews | Track Screenviews}.\n *\n * @param analyticsInstance - The {@link Analytics} instance.\n * @param screenName - Screen name to set.\n */\nfunction setCurrentScreen(analyticsInstance, screenName, options) {\n    analyticsInstance = getModularInstance(analyticsInstance);\n    setCurrentScreen$1(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], screenName, options).catch(e => logger.error(e));\n}\n/**\n * Retrieves a unique Google Analytics identifier for the web client.\n * See {@link https://developers.google.com/analytics/devguides/collection/ga4/reference/config#client_id | client_id}.\n *\n * @public\n *\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n */\nasync function getGoogleAnalyticsClientId(analyticsInstance) {\n    analyticsInstance = getModularInstance(analyticsInstance);\n    return internalGetGoogleAnalyticsClientId(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId]);\n}\n/**\n * Use gtag `config` command to set `user_id`.\n *\n * @public\n *\n * @param analyticsInstance - The {@link Analytics} instance.\n * @param id - User ID to set.\n */\nfunction setUserId(analyticsInstance, id, options) {\n    analyticsInstance = getModularInstance(analyticsInstance);\n    setUserId$1(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], id, options).catch(e => logger.error(e));\n}\n/**\n * Use gtag `config` command to set all params specified.\n *\n * @public\n */\nfunction setUserProperties(analyticsInstance, properties, options) {\n    analyticsInstance = getModularInstance(analyticsInstance);\n    setUserProperties$1(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], properties, options).catch(e => logger.error(e));\n}\n/**\n * Sets whether Google Analytics collection is enabled for this app on this device.\n * Sets global `window['ga-disable-analyticsId'] = true;`\n *\n * @public\n *\n * @param analyticsInstance - The {@link Analytics} instance.\n * @param enabled - If true, enables collection, if false, disables it.\n */\nfunction setAnalyticsCollectionEnabled(analyticsInstance, enabled) {\n    analyticsInstance = getModularInstance(analyticsInstance);\n    setAnalyticsCollectionEnabled$1(initializationPromisesMap[analyticsInstance.app.options.appId], enabled).catch(e => logger.error(e));\n}\n/**\n * Adds data that will be set on every event logged from the SDK, including automatic ones.\n * With gtag's \"set\" command, the values passed persist on the current page and are passed with\n * all subsequent events.\n * @public\n * @param customParams - Any custom params the user may pass to gtag.js.\n */\nfunction setDefaultEventParameters(customParams) {\n    // Check if reference to existing gtag function on window object exists\n    if (wrappedGtagFunction) {\n        wrappedGtagFunction(\"set\" /* GtagCommand.SET */, customParams);\n    }\n    else {\n        _setDefaultEventParametersForInit(customParams);\n    }\n}\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * List of official event parameters can be found in the gtag.js\n * reference documentation:\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n *\n * @public\n */\nfunction logEvent(analyticsInstance, eventName, eventParams, options) {\n    analyticsInstance = getModularInstance(analyticsInstance);\n    logEvent$1(wrappedGtagFunction, initializationPromisesMap[analyticsInstance.app.options.appId], eventName, eventParams, options).catch(e => logger.error(e));\n}\n/**\n * Sets the applicable end user consent state for this web app across all gtag references once\n * Firebase Analytics is initialized.\n *\n * Use the {@link ConsentSettings} to specify individual consent type values. By default consent\n * types are set to \"granted\".\n * @public\n * @param consentSettings - Maps the applicable end user consent state for gtag.js.\n */\nfunction setConsent(consentSettings) {\n    // Check if reference to existing gtag function on window object exists\n    if (wrappedGtagFunction) {\n        wrappedGtagFunction(\"consent\" /* GtagCommand.CONSENT */, 'update', consentSettings);\n    }\n    else {\n        _setConsentDefaultForInit(consentSettings);\n    }\n}\n\nconst name = \"@firebase/analytics\";\nconst version = \"0.10.11\";\n\n/**\n * The Firebase Analytics Web SDK.\n * This SDK does not work in a Node.js environment.\n *\n * @packageDocumentation\n */\nfunction registerAnalytics() {\n    _registerComponent(new Component(ANALYTICS_TYPE, (container, { options: analyticsOptions }) => {\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app').getImmediate();\n        const installations = container\n            .getProvider('installations-internal')\n            .getImmediate();\n        return factory(app, installations, analyticsOptions);\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */));\n    _registerComponent(new Component('analytics-internal', internalFactory, \"PRIVATE\" /* ComponentType.PRIVATE */));\n    registerVersion(name, version);\n    // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n    registerVersion(name, version, 'esm2017');\n    function internalFactory(container) {\n        try {\n            const analytics = container.getProvider(ANALYTICS_TYPE).getImmediate();\n            return {\n                logEvent: (eventName, eventParams, options) => logEvent(analytics, eventName, eventParams, options)\n            };\n        }\n        catch (e) {\n            throw ERROR_FACTORY.create(\"interop-component-reg-failed\" /* AnalyticsError.INTEROP_COMPONENT_REG_FAILED */, {\n                reason: e\n            });\n        }\n    }\n}\nregisterAnalytics();\n\nexport { getAnalytics, getGoogleAnalyticsClientId, initializeAnalytics, isSupported, logEvent, setAnalyticsCollectionEnabled, setConsent, setCurrentScreen, setDefaultEventParameters, setUserId, setUserProperties, settings };\n//# sourceMappingURL=index.esm2017.js.map\n","import { AlertRenderer } from './AlertRenderer';\nimport { sendError } from './utils';\n\nexport class Clock {\n  constructor() {\n    this.clock = document.querySelector('.clock');\n\n    this.daysLeft = this.clock.querySelector('#days');\n    this.hoursLeft = this.clock.querySelector('#hours');\n    this.minutesLeft = this.clock.querySelector('#minutes');\n    this.secondsLeft = this.clock.querySelector('#seconds');\n\n    this.startPromotionElement = document.querySelector('#js-date-start');\n    this.endPromotionElement = document.querySelector('#js-date-end');\n\n    this.startPromotion = '';\n    this.endPromotion = '';\n\n    this.init();\n  }\n\n  init() {\n    this.setPromoDate();\n\n    setInterval(this.updateCountdown.bind(this), 1000);\n    this.updateCountdown();\n  }\n\n  setPromoDate() {\n    if (this.startPromotionElement.textContent === '' || this.endPromotionElement.textContent === '') {\n      const currentDate = new Date();\n      const startDate = new Date(currentDate.getTime() - 2 * 24 * 60 * 60 * 1000);\n      this.startPromotionElement.textContent = startDate.toLocaleDateString();\n      this.startPromotion = startDate.toLocaleDateString();\n\n      const endDate = new Date(startDate.getTime() + 14 * 24 * 60 * 60 * 1000);\n      this.endPromotionElement.textContent = endDate.toLocaleDateString();\n      this.endPromotion = endDate.toLocaleDateString();\n    } else {\n      this.startPromotion = this.startPromotionElement.textContent;\n      this.endPromotion = this.endPromotionElement.textContent;\n    }\n  }\n\n  getPromoEndDate() {\n    const [day, month, year] = this.endPromotion.split('.');\n    return new Date(`${year}-${month}-${day}T23:59:59`).getTime();\n  }\n\n  getPromoStartDate() {\n    const [day, month, year] = this.startPromotion.split('.');\n    return new Date(`${year}-${month}-${day}T23:59:59`).getTime();\n  }\n\n  updateCountdown() {\n    const now = new Date().getTime();\n    const promoEndDate = this.getPromoEndDate();\n\n    if (now >= promoEndDate) {\n      this.updatePromoDate();\n    }\n\n    const timeLeft = promoEndDate - now;\n    this.daysLeft.innerText = Math.floor(timeLeft / (1000 * 60 * 60 * 24));\n    this.hoursLeft.innerText = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    this.minutesLeft.innerText = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));\n    this.secondsLeft.innerText = Math.floor((timeLeft % (1000 * 60)) / 1000);\n  }\n\n  updatePromoDate() {\n    const newStartDate = new Date(this.getPromoStartDate() + 7 * 24 * 60 * 60 * 1000);\n    const newEndDate = new Date(this.getPromoEndDate() + 14 * 24 * 60 * 60 * 1000);\n\n    this.startPromotionElement.textContent = newStartDate.toLocaleDateString();\n    this.endPromotionElement.textContent = newEndDate.toLocaleDateString();\n\n    this.startPromotion = newStartDate.toLocaleDateString();\n    this.endPromotion = newEndDate.toLocaleDateString();\n\n    const text = `Оновлення дати акції з ${this.startPromotion} до ${this.endPromotion}`;\n    this.sendMessageTelegram(text);\n  }\n\n  async sendMessageTelegram(text) {\n    const response = await fetch(process.env.API, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({\n        chat_id: process.env.TELEGRAM_CHAT_ID,\n        text,\n        disable_notification: true,\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n}\n","import { registerVersion } from '@firebase/app';\nexport * from '@firebase/app';\n\nvar name = \"firebase\";\nvar version = \"11.3.1\";\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nregisterVersion(name, version, 'app');\n//# sourceMappingURL=index.esm.js.map\n","export class AlertRenderer {\n  static createAlert(type, text) {\n    const notificationBox = document.querySelector('main');\n\n    const component = document.createElement('div');\n    component.className = 'alert show';\n    component.innerHTML = `\n      <div class=\"alert__box\">\n        <div class=\"alert__title\">\n          <div class=\"alert__${type}\"></div>\n          <p class='alert__text ${type} bolt'>${text}</p>\n        </div>\n        <p class='alert__text--second'>\n        ${type === 'ok' ? 'Ми успішно її отримали та скоро зв’яжемося з вами.' : ''}\n      </p>\n      </div>\n    `;\n\n    notificationBox.appendChild(component);\n\n    requestAnimationFrame(() => {\n      component.classList.add('show');\n    });\n\n    setTimeout(() => {\n      component.classList.add('hide');\n    }, 2000);\n\n    setTimeout(() => {\n      component.remove();\n    }, 2500);\n  }\n}\n","export class InputValidator {\n  static isPhoneNumber(phoneNumber) {\n    const phoneRegex = /^(?:\\+380\\d{9}|0\\d{9})$/;\n    return phoneRegex.test(phoneNumber.replace(/\\s/g, ''));\n  }\n\n  static isNameValid(name) {\n    const nameRegex = /^[а-яёґєіїa-z\\s-]{2,}$/iu;\n    return nameRegex.test(name);\n  }\n\n  static isEmpty(value) {\n    return !!value;\n  }\n}\n","export function toggleBtn(btn) {\n  if (window.scrollY === 0) {\n    btn.style.display = 'none';\n  } else {\n    btn.style.display = 'flex';\n  }\n}\n\nexport function addClassToElement(id, className) {\n  const element = document.getElementById(id);\n  if (element) {\n    element.classList.add(className);\n  }\n}\n\nexport function removeClassFromElement(id, className) {\n  const element = document.getElementById(id);\n  if (element) {\n    element.classList.remove(className);\n  }\n}\n\nexport function sendError(error, message) {\n  const text = `${error}\\n ${message}`;\n  const url = `${process.env.API_ERROR}?chat_id=${process.env.TELEGRAM_CHAT_ID_ERROR}&text=${text}`;\n  const xht = new XMLHttpRequest();\n  xht.open('GET', url);\n  xht.send();\n}\n","import { AlertRenderer } from './AlertRenderer';\nimport { InputValidator } from './InputValidator';\nimport { addClassToElement, removeClassFromElement, sendError } from './utils';\n\nexport class Form {\n  constructor(form) {\n    this.form = form;\n\n    this.inputs = this.form.querySelectorAll('input');\n    this.btnSubmit = this.form.querySelector('button');\n    this.error = this.form.querySelector('.error');\n\n    this.wareInput = this.form.querySelector('.ware');\n    this.wareInput.value = this.wareInput.value\n      ? this.wareInput.value\n      : 'Утятниця (гусятниця) 5 л з кришкою - сковородою Сітон';\n    this.setupEventListeners();\n  }\n\n  setupEventListeners() {\n    this.inputs.forEach((input) => {\n      input.addEventListener('input', () => this.handleInput(input));\n    });\n\n    this.btnSubmit.addEventListener('click', (event) => this.handleSubmit(event));\n  }\n\n  handleInput(input) {\n    if (input.type === 'tel') {\n      this.handleInputTel(input);\n    }\n  }\n\n  handleInputTel(input) {\n    input.value = this.formatPhoneNumber(input.value);\n  }\n\n  formatPhoneNumber(phoneNumber) {\n    const cleaned = phoneNumber.replace(/\\D/g, '');\n\n    if (cleaned.startsWith('0')) {\n      const match = cleaned.match(/^(\\d{0,3})?(\\d{0,3})?(\\d{0,2})?(\\d{0,2})?/);\n      return [\n        match[1],\n        match[2] && match[1] ? ' ' : '',\n        match[2],\n        match[3] && match[2] ? ' ' : '',\n        match[3],\n        match[4] && match[3] ? ' ' : '',\n        match[4],\n      ].join('');\n    } else if (cleaned.startsWith('380')) {\n      const match = cleaned.match(/^380(\\d{0,2})?(\\d{0,3})?(\\d{0,2})?(\\d{0,2})?/);\n      return [\n        '+380',\n        match[1] ? ` ${match[1]}` : '',\n        match[2] ? ` ${match[2]}` : '',\n        match[3] ? ` ${match[3]}` : '',\n        match[4] ? ` ${match[4]}` : '',\n      ].join('');\n    }\n\n    return phoneNumber;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    this.handleOrder();\n  }\n\n  handleOrder() {\n    const isError = this.validateInputs();\n\n    const contactData = this.getContactData();\n\n    const text = `Заявка на дзвінок!\\n Товар: ${contactData.ware}, \\n Ім'я: ${contactData.name},\\n Телефон: ${contactData.phone}`;\n\n    if (!isError) {\n      this.sendMessageTelegram(text);\n      this.clearForm();\n    }\n  }\n\n  getContactData() {\n    return {\n      ware: this.inputs[0].value,\n      name: this.inputs[1].value,\n      phone: this.inputs[2].value,\n    };\n  }\n\n  async sendMessageTelegram(text) {\n    try {\n      const response = await fetch(process.env.API, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify({\n          chat_id: process.env.TELEGRAM_CHAT_ID,\n          text,\n          disable_notification: false,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      AlertRenderer.createAlert('ok', 'Дякуємо за вашу заявку!');\n    } catch (error) {\n      sendError(error, 'Заявка не відправлена!');\n      AlertRenderer.createAlert('error', 'Заявка не відправлена! Спробуйте пізніше.');\n    }\n  }\n\n  validateInputs() {\n    let isError = false;\n\n    this.inputs.forEach((input) => {\n      if (!InputValidator.isEmpty(input.value)) {\n        this.handleInputError(input, 'Заповніть всі поля!');\n        isError = true;\n      } else if (input.classList.contains('phone')) {\n        if (!InputValidator.isPhoneNumber(input.value)) {\n          this.handleInputError(input, 'Будь ласка введіть дійсний номер телефону!');\n          isError = true;\n        }\n      } else if (input.classList.contains('name')) {\n        if (!InputValidator.isNameValid(input.value)) {\n          this.handleInputError(input, 'Введіть коректне ім’я!');\n          isError = true;\n        }\n      }\n    });\n\n    return isError;\n  }\n\n  handleInputError(input, message) {\n    const inputId = input.getAttribute('id');\n\n    addClassToElement(inputId, 'bounce');\n    this.error.innerText = message;\n\n    setTimeout(() => {\n      removeClassFromElement(inputId, 'bounce');\n      this.error.innerText = '';\n    }, 2000);\n  }\n\n  clearForm() {\n    this.inputs.forEach((input) => {\n      if (input.type === 'radio') {\n        if (input.value === this.form.querySelector('input[type=\"radio\"]:checked')) {\n          input.checked = true;\n        }\n      } else {\n        input.value = '';\n      }\n    });\n  }\n}\n","export class ReviewsComponent {\n  constructor() {\n    this.initSlider();\n  }\n\n  initSlider() {\n    // eslint-disable-next-line no-undef\n    const swiper = new Swiper('.swiper-container', {\n      loop: true,\n      slidesPerView: 1,\n      spaceBetween: 20,\n      pagination: {\n        el: '.pagination',\n        bulletClass: 'pagination__button',\n        bulletActiveClass: 'pagination__button--active',\n      },\n      navigation: {\n        nextEl: '.carousel-button.next',\n        prevEl: '.carousel-button.prev',\n      },\n    });\n  }\n}\n","import { Clock } from './Clock';\nimport { Form } from './Form';\nimport { ReviewsComponent } from './ReviewsComponent';\n\nexport class Main {\n  constructor() {\n    this.buttonAnchor = document.querySelector('.anchor');\n    this.targetSection = document.querySelector('#request');\n\n    this.init();\n  }\n\n  init() {\n    this.addEventListeners();\n\n    new Clock();\n    this.initForm();\n    new ReviewsComponent();\n  }\n\n  initForm() {\n    const form = document.querySelector('.request__form');\n    new Form(form);\n  }\n\n  addEventListeners() {\n    this.buttonAnchor.addEventListener('click', this.scrollToSection.bind(this));\n  }\n\n  scrollToSection(event) {\n    event.preventDefault();\n    this.targetSection.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start',\n    });\n  }\n}\n","import '../scss/style.scss';\n\nimport { getAnalytics } from 'firebase/analytics';\nimport { initializeApp } from 'firebase/app';\n\nimport { Main } from './Main';\n\nexport function init() {\n  new Main();\n\n  const firebaseConfig = {\n    apiKey: process.env.API_KEY,\n    authDomain: process.env.AUTH_DOMAIN,\n    projectId: process.env.PROJECT_ID,\n    storageBucket: process.env.STORAGE_BUCKET,\n    messagingSenderId: process.env.MESSAGING_SENDER_ID,\n    appId: process.env.APP_ID,\n  };\n\n  const app = initializeApp(firebaseConfig);\n  const analytics = getAnalytics(app);\n}\n\ndocument.addEventListener('DOMContentLoaded', init);\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","stringToByteArray$1","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","DecodeBase64StringError","constructor","super","arguments","name","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","getDefaults","self","getGlobal","__FIREBASE_DEFAULTS__","document","match","cookie","decoded","console","error","base64Decode","JSON","parse","getDefaultsFromCookie","info","getDefaultAppConfig","_a","config","Deferred","reject","resolve","promise","Promise","wrapCallback","callback","value","catch","indexedDB","preExist","DB_CHECK_NAME","request","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","message","FirebaseError","code","customData","Object","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","PATTERN","_","key","replaceTemplate","fullMessage","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","calculateBackoffMillis","backoffCount","intervalMillis","backoffFactor","currBaseValue","Math","pow","randomWait","round","random","min","_delegate","Component","instanceFactory","type","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","DEFAULT_ENTRY_NAME","Provider","container","component","instances","Map","instancesDeferred","instancesOptions","onInitCallbacks","get","identifier","normalizedIdentifier","normalizeInstanceIdentifier","has","deferred","set","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","getImmediate","options","optional","getComponent","setComponent","isComponentEager","instanceDeferred","entries","clearInstance","delete","services","from","values","all","filter","map","INTERNAL","_delete","isComponentSet","getOptions","initialize","opts","onInit","existingCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","callbacks","undefined","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","args","logLevel","now","Date","toISOString","method","Logger","_logLevel","_logHandler","_userLogHandler","val","TypeError","setLogLevel","logHandler","userLogHandler","debug","log","warn","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","target","prop","receiver","IDBTransaction","objectStoreNames","objectStore","transformCachableValue","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","apply","unwrap","storeNames","tx","call","sort","done","unlisten","removeEventListener","complete","DOMException","addEventListener","cacheDonePromiseForTransaction","object","IDBObjectStore","IDBIndex","some","Proxy","IDBRequest","success","then","promisifyRequest","newValue","openDB","version","blocked","upgrade","blocking","terminated","openPromise","event","oldVersion","newVersion","db","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","async","storeName","store","index","shift","oldTraps","PlatformLoggerServiceImpl","getPlatformInfoString","isVersionServiceProvider","library","logString","name$q","version$1","logger","name$p","name$o","name$n","name$m","name$l","name$k","name$j","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$2","name$1","PLATFORM_LOG_STRING","_apps","_serverApps","_components","_addComponent","app","_registerComponent","componentName","serverApp","heartbeatController","triggerHeartbeat","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","assign","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","appName","initializeApp","rawConfig","existingApp","newApp","registerVersion","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","STORE_NAME","dbPromise","getDbPromise","createObjectStore","originalErrorMessage","writeHeartbeatsToIndexedDB","heartbeatObject","put","computeKey","idbGetError","appId","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","_b","agent","date","getUTCDateString","heartbeats","lastSentHeartbeatDate","singleDateHeartbeat","earliestHeartbeatIdx","earliestHeartbeatDate","getEarliestHeartbeatIdx","splice","overwrite","getHeartbeatsHeader","heartbeatsToSend","unsentEntries","heartbeatsCache","maxSize","slice","heartbeatEntry","find","hb","dates","countBytes","pop","extractHeartbeatsForHeader","headerString","stringify","substring","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","idbHeartbeatObject","readHeartbeatsFromIndexedDB","heartbeatsObject","existingHeartbeatsObject","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","isServerError","getInstallationsEndpoint","projectId","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","responseExpiresIn","Number","creationTime","getErrorFromResponse","requestName","errorData","json","serverCode","serverMessage","serverStatus","status","getHeaders","apiKey","Headers","Accept","retryIfServerError","fn","sleep","ms","setTimeout","VALID_FID_PATTERN","generateFid","fidByteArray","Uint8Array","crypto","msCrypto","getRandomValues","fid","array","substr","encode","test","getKey","appConfig","fidChangeCallbacks","fidChanged","callFidChangeCallbacks","channel","broadcastChannel","BroadcastChannel","onmessage","postMessage","size","broadcastFidChange","OBJECT_STORE_NAME","oldValue","remove","update","updateFn","getInstallationEntry","installations","registrationPromise","installationEntry","oldEntry","clearTimedOutRequest","registrationStatus","updateOrCreateInstallationEntry","entryWithPromise","navigator","onLine","inProgressEntry","registrationTime","registeredInstallationEntry","heartbeatServiceProvider","endpoint","headers","heartbeatService","heartbeatsHeader","append","body","authVersion","sdkVersion","fetch","ok","responseValue","refreshToken","authToken","createInstallationRequest","registerInstallation","waitUntilFidRegistration","triggerRegistrationIfNecessary","entry","updateInstallationRequest","generateAuthTokenRequest","getGenerateAuthTokenEndpoint","getAuthorizationHeader","getHeadersWithAuth","installation","refreshAuthToken","forceRefresh","tokenPromise","isEntryRegistered","oldAuthToken","isAuthTokenExpired","updateAuthTokenRequest","waitUntilAuthTokenRequest","inProgressAuthToken","requestTime","makeAuthTokenRequestInProgressEntry","updatedInstallationEntry","fetchAuthTokenFromServer","getMissingValueError","valueName","INSTALLATIONS_NAME","configKeys","keyName","extractAppConfig","getId","installationsImpl","getToken","completeInstallationRegistration","ANALYTICS_TYPE","GTAG_URL","createGtagTrustedTypesScriptURL","url","startsWith","err","gtagURL","promiseAllSettled","promises","defaultRetryData","throttleMetadata","getThrottleMetadata","setThrottleMetadata","metadata","deleteThrottleMetadata","fetchDynamicConfigWithRetry","retryData","timeoutMillis","measurementId","throttleEndTimeMillis","signal","AnalyticsAbortSignal","abort","attemptFetchDynamicConfigWithRetry","appFields","backoffMillis","max","timeout","clearTimeout","setAbortableTimeout","appUrl","errorMessage","jsonResponse","_ignored","httpStatus","responseMessage","fetchDynamicConfig","isRetriableError","listeners","listener","forEach","defaultEventParametersForInit","defaultConsentSettingsForInit","_initializeAnalytics","dynamicConfigPromisesList","measurementIdToAppId","gtagCore","dataLayerName","dynamicConfigPromise","fidPromise","errorInfo","toString","validateIndexedDB","envIsValid","dynamicConfig","scriptTags","getElementsByTagName","tag","src","findGtagScriptOnPage","trustedTypesPolicy","policyName","policyOptions","trustedTypes","createPolicy","createTrustedTypesPolicy","createScriptURL","script","createElement","gtagScriptURL","head","appendChild","insertScriptTag","configProperties","AnalyticsService","initializationPromisesMap","gtagCoreFunction","wrappedGtagFunction","globalInitDone","factory","mismatchedEnvMessages","runtime","chrome","browser","id","cookieEnabled","details","warnOnBrowserContextMismatch","dataLayer","getOrCreateDataLayer","wrappedGtag","gtagFunctionName","_args","command","gtagParams","initializationPromisesToWaitFor","gaSendToList","dynamicConfigResults","sendToId","foundConfig","initializationPromise","gtagOnEvent","correspondingAppId","gtagOnConfig","consentAction","fieldName","customParams","wrapGtag","wrapOrCreateGtag","_regeneratorRuntime","t","r","n","hasOwnProperty","o","defineProperty","Symbol","iterator","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","__proto__","awrap","reverse","prev","stop","rval","handle","finish","delegateYield","asyncGeneratorStep","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","_unsupportedIterableToArray","_nonIterableRest","_defineProperties","_toPropertyKey","toPrimitive","_toPrimitive","analyticsOptions","analytics","logEvent","eventName","eventParams","analyticsInstance","gtagFunction","global","logEvent$1","reason","Clock","_classCallCheck","clock","querySelector","daysLeft","hoursLeft","minutesLeft","secondsLeft","startPromotionElement","endPromotionElement","startPromotion","endPromotion","init","setPromoDate","setInterval","updateCountdown","bind","textContent","currentDate","startDate","getTime","toLocaleDateString","endDate","_this$endPromotion$sp2","split","day","month","year","concat","_this$startPromotion$2","promoEndDate","getPromoEndDate","updatePromoDate","timeLeft","innerText","floor","newStartDate","getPromoStartDate","newEndDate","text","sendMessageTelegram","_callee","_context","process","chat_id","disable_notification","statusText","_sendMessageTelegram","_next","_throw","_x","AlertRenderer","notificationBox","className","innerHTML","requestAnimationFrame","classList","InputValidator","phoneNumber","sendError","xht","XMLHttpRequest","send","Form","form","inputs","querySelectorAll","btnSubmit","wareInput","setupEventListeners","_this","handleInput","handleSubmit","handleInputTel","formatPhoneNumber","cleaned","preventDefault","handleOrder","isError","validateInputs","contactData","getContactData","ware","phone","clearForm","createAlert","t0","_this2","isEmpty","contains","isPhoneNumber","handleInputError","isNameValid","element","_this3","inputId","getAttribute","getElementById","removeClassFromElement","_this4","checked","ReviewsComponent","initSlider","Swiper","loop","slidesPerView","spaceBetween","pagination","el","bulletClass","bulletActiveClass","navigation","nextEl","prevEl","Main","buttonAnchor","targetSection","addEventListeners","initForm","scrollToSection","scrollIntoView","behavior","block","analyticsProvider","initializeAnalytics","getAnalytics","authDomain","storageBucket","messagingSenderId"],"sourceRoot":""}